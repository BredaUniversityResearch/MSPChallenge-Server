# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
# https://symfony.com/doc/current/configuration/secrets.html
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> symfony/framework-bundle ###
APP_ENV=dev
# note MH: got a "Generic High Entropy Secret exposed on GitHub" message from GitGardian about this. But it fine for DEV. We just need to run "php bin/console make:command regenerate-app-secret" on the production server locally to re-generate it to another APP_SECRET there.
APP_SECRET=5074ab0c955250bf0de0c0c602a503d9
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
DBNAME_SERVER_MANAGER=msp_server_manager
DBNAME_DEFAULT="${DBNAME_SERVER_MANAGER}"
DBNAME_SESSION_PREFIX=msp_session_
DATABASE_HOST=localhost
DATABASE_PORT=3306
DATABASE_USER=root
# for dev Windows XAMPP, if password is set, do not forget to run: "mysqladmin -u root password" to change the password
DATABASE_PASSWORD=
MY2_PASSWORD=euK@h89j6F5V
DATABASE_SERVER_VERSION='10.11.10-MariaDB'
DATABASE_CHARSET=utf8mb4
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
DATABASE_URL="mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DBNAME_DEFAULT}?serverVersion=${DATABASE_SERVER_VERSION}&charset=${DATABASE_CHARSET}"
DATABASE_CREATOR_USER="${DATABASE_USER}"
DATABASE_CREATOR_PASSWORD="${DATABASE_PASSWORD}"
DATABASE_POOL_NUM_CONNECTIONS=20
DATABASE_MAX_GAME_SESSION_DBS=99
###< doctrine/doctrine-bundle ###

# web server
# default is "php" for docker, for Windows set from db, or derived from URL, e.g. localhost
#WEB_SERVER_HOST=
WEB_SERVER_PORT=80

# web socket server
WS_SERVER_OUTPUT_VERBOSITY=32
WS_SERVER_PAYLOAD_DUMP=0
WS_SERVER_HOST=localhost
WS_SERVER_PORT=45001

# URL settings, used to generate the correct URLs for api -, website -, or web socket server access
#   It's up to the Nginx proxy to map from the external access address to the actual host+port.
#     e.g. for the web socket server it could map /ws/1/ or /ws/2/ to host:45001 and host:45002 internally.
#   Example settings the production environment:
#   - URL_WEB_SERVER_SCHEME=https
#   - URL_WEB_SERVER_HOST=server.mspchallenge.info
#   - URL_WEB_SERVER_PORT=443
#   - URL_WS_SERVER_SCHEME=wss
#   - URL_WS_SERVER_PORT="${URL_WEB_SERVER_PORT}"
#   - URL_WS_SERVER_URI=/ws/
URL_WEB_SERVER_SCHEME=http
# Note that the webserver host is retrieved from the game_servers table if URL_WEB_SERVER_HOST is not set
# URL_WEB_SERVER_HOST="${WEB_SERVER_HOST}"
URL_WEB_SERVER_PORT="${WEB_SERVER_PORT}"
URL_WS_SERVER_SCHEME=ws
# Note that the websocket host is retrieved from the game_servers table if URL_WS_SERVER_HOST is not set
# URL_WS_SERVER_HOST="${URL_WEB_SERVER_HOST}"
URL_WS_SERVER_PORT="${WS_SERVER_PORT}"
# To handle different default values for URL_WS_SERVER_URI (docker: /ws/. Windows: empty string),
#   we need to *not* define URL_WS_SERVER_URI here. Docker compose create an environmental variable with value /ws/.
#   And if there is not environmental variable, then it will fall-back to the empty string, or a env.local var
#URL_WS_SERVER_URI=
# values: none, add_game_session_id_to_port, add_game_session_id_to_uri, e.g. /ws/1/
URL_WS_SERVER_ADDRESS_MODIFICATION=none

# msp auth server
AUTH_SERVER_SCHEME=https
AUTH_SERVER_HOST=auth2.mspchallenge.info
AUTH_SERVER_PORT=443
# was: /usersc/plugins/apibuilder/authmsp/
AUTH_SERVER_API_BASE_PATH=/api/

# config defaults
SESSION_CONFIG_PATH=/running_session_config/
SESSION_CONFIG_FILE=session_config_%d.json
DEFAULT_EDITION_NAME='Simulation Platform'
DEFAULT_EDITION_COLOUR='#595958ff'
DEFAULT_EDITION_LETTER=S
DEFAULT_WIKI_BASE_URL=https://knowledge.mspchallenge.info/wiki/

# watchdog, default is "localhost". For docker, this means inside the container.
# use "host.docker.internal" to connect from inside docker to the (e.g. Windows) host machine.
WATCHDOG_ADDRESS=simulations
WATCHDOG_PORT=45000
WATCHDOG_SCHEME=http
WATCHDOG_RESPONSE_TIMEOUT_SEC=20
# e.g. you can use Fiddler on the docker host machine to monitor the Watchdog traffic
# WATCHDOG_PROXY_URL=http://host.docker.internal:8888

# needed for docker compose
COMPOSE_PROJECT_NAME=mspchallenge
###> symfony/messenger ###
# Choose one of the transports below
# MESSENGER_TRANSPORT_DSN=amqp://guest:guest@localhost:5672/%2f/messages
# MESSENGER_TRANSPORT_DSN=redis://localhost:6379/messages
MESSENGER_TRANSPORT_DSN=doctrine://msp_server_manager
###< symfony/messenger ###

###> lexik/jwt-authentication-bundle ###
JWT_SECRET_KEY=%kernel.project_dir%/secrets/jwt/private.pem
JWT_PUBLIC_KEY=%kernel.project_dir%/secrets/jwt/public.pem
JWT_PASSPHRASE=c234e6c74089182a34646de32695b8e31c5a01d98d5bddeaf85161e6b55f7fb2
###< lexik/jwt-authentication-bundle ###

# default : cache.adapter.filesystem. Docker sets this env.var to: cache.adapter.redis
# FRAMEWORK_CACHE_APP=cache.adapter.filesystem

# each server should generate its own uuid v7.
#   The "internal" server (running MEL, SEL, etc) will always have 019373cc-aa68-7d95-882f-9248ea338014
#   Registering a new server with this guid won't be accepted.
# SERVER_ID=019373cc-aa68-7d95-882f-9248ea338014

# geo server caches in seconds
# GEO_SERVER_DOWNLOADS_CACHE_LIFETIME=3600
# GEO_SERVER_RESULTS_CACHE_LIFETIME=3600
###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
###< nelmio/cors-bundle ###

