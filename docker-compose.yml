services:
  redis:
    image: 'mspserver-redis'
    build:
      context: .
      target: redis_base
    restart: always
    networks:
      - redis
    logging:
      driver: "local"

  database:
    # check https://hub.docker.com/_/mariadb for info.
    image: 'mspserver-mariadb'
    build:
      context: .
      target: mariadb_base
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD:-}
      MYSQL_DATABASE: msp_server_manager
      MYSQL_TCP_PORT: ${DATABASE_PORT:-3306}
    # Run below command in your terminal to see all possible variables and their default values:
    #   mysqld --help --verbose | grep -A 9999 'Variables (--variable-name=value)'
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_general_ci',
      '--sql-mode=NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION',
      '--key-buffer-size=33554432',
      '--max-allowed-packet=33554432',
      '--sort-buffer-size=33554432',
      '--net-buffer-length=65536',
      '--read-buffer-size=1048576',
      '--read-rnd-buffer-size=16777216',
      '--myisam-sort-buffer-size=67108864'
    ]
    networks:
      - database
    volumes:
      - ./docker/database/my2_80.sql:/root/my2_80.sql:ro
      - mariadb_data:/var/lib/mysql
    logging:
      driver: "local"

  php:
    image: 'mspserver-php'
    depends_on:
      - database
      - redis
    restart: unless-stopped
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - database
      - php
      - redis
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, localhost:80
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-localhost}|php$$
      DOCKER: 1
      DATABASE_HOST: database

      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # Exposes BLACKFIRE_CLIENT_* environment variables allowing the client to communicate with Blackfire's API:
      BLACKFIRE_APM_ENABLED: ${BLACKFIRE_APM_ENABLED:-0}
      BLACKFIRE_CLIENT_ID: ${BLACKFIRE_CLIENT_ID:-}
      BLACKFIRE_CLIENT_TOKEN: ${BLACKFIRE_CLIENT_TOKEN:-}
      APP_ENV: ${APP_ENV:-dev}
      SYMFONY_VERSION: ${SYMFONY_VERSION:-6.4}
      FRAMEWORK_CACHE_APP: ${FRAMEWORK_CACHE_APP:-cache.adapter.redis}

      # web server
      WEB_SERVER_HOST: ${WEB_SERVER_HOST:-php}
      WEB_SERVER_PORT: ${WEB_SERVER_PORT:-${HTTP_PORT:-80}}
      # web socket server
      WS_SERVER_HOST: ${WS_SERVER_HOST:-localhost}
      WS_SERVER_PORT: ${WS_SERVER_PORT:-45001}
      # URL settings
      URL_WEB_SERVER_SCHEME: ${URL_WEB_SERVER_SCHEME:-http://}
      URL_WEB_SERVER_HOST: ${URL_WEB_SERVER_HOST:-}
      URL_WEB_SERVER_PORT: ${URL_WEB_SERVER_PORT:-${WEB_SERVER_PORT:-${HTTP_PORT:-80}}}
      URL_WS_SERVER_SCHEME: ${URL_WS_SERVER_SCHEME:-ws://}
      URL_WS_SERVER_HOST: ${URL_WS_SERVER_HOST:-}
      URL_WS_SERVER_PORT: ${URL_WS_SERVER_PORT:-${WS_SERVER_PORT:-45001}}
      URL_WS_SERVER_URI: ${URL_WS_SERVER_URI:-/ws/}
      URL_WS_SERVER_ADDRESS_MODIFICATION: ${URL_WS_SERVER_ADDRESS_MODIFICATION:-none}
      # watchdog
      WATCHDOG_ADDRESS: ${WATCHDOG_ADDRESS:-localhost}
      WATCHDOG_PORT: ${WATCHDOG_PORT:-45000}
    ports:
      # Watchdog
      - "${WATCHDOG_PORT:-45000}:${WATCHDOG_PORT:-45000}"
      # Websocket server
      - "${WS_SERVER_PORT:-45001}:${WS_SERVER_PORT:-45001}"
      # HTTP needs to be defined in the override/prod/staging/... yml files
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
    logging:
      driver: "local"

  blackfire:
    image: 'mspserver-blackfire'
    build:
      context: .
      target: blackfire_base
    ports:
      - "${BLACKFIRE_PORT:-}:8307"
    environment:
        # Define Blackfire Agent log vebosity level
        BLACKFIRE_LOG_LEVEL: 4

        # Exposes BLACKFIRE_SERVER_* environment variables from the host
        BLACKFIRE_SERVER_ID: ${BLACKFIRE_SERVER_ID:-}
        BLACKFIRE_SERVER_TOKEN: ${BLACKFIRE_SERVER_TOKEN:-}

        # Exposes BLACKFIRE_CLIENT_* environment variables
        # allowing the client to communicate with Blackfire's API:
        BLACKFIRE_CLIENT_ID: ${BLACKFIRE_CLIENT_ID:-}
        BLACKFIRE_CLIENT_TOKEN: ${BLACKFIRE_CLIENT_TOKEN:-}
    networks:
      - php
    logging:
      driver: "local"

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

volumes:
  caddy_data:
  caddy_config:
  mariadb_data:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###

networks:
  database:
  php:
  redis:
