version: '3.7'

services:
  database:
    # check https://hub.docker.com/_/mariadb for info.
    image: 'mariadb:10.4.25'
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_DATABASE: msp_server_manager
    ports:
      # To allow the host machine to access the ports below, modify the lines below.
      # For example, to allow the host to connect to port 3306 on the container, you would change
      # "3306" to "3306:3306". Where the first port is exposed to the host and the second is the container port.
      # See https://docs.docker.com/compose/compose-file/compose-file-v3/#ports for more information.
      - "${DATABASE_PORT:-3306}:${DATABASE_PORT:-3306}"
    # Run below command in your terminal to see all possible variables and their default values:
    #   mysqld --help --verbose | grep -A 9999 'Variables (--variable-name=value)'
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_general_ci',
      '--sql-mode=NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION',
      '--key-buffer-size=33554432',
      '--max-allowed-packet=33554432',
      '--sort-buffer-size=33554432',
      '--net-buffer-length=65536',
      '--read-buffer-size=1048576',
      '--read-rnd-buffer-size=16777216',
      '--myisam-sort-buffer-size=67108864'
    ]
    networks:
      - database
  php:
    build:
      context: .
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    networks:
      - database
      - php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DOCKER: 1
      DATABASE_HOST: database
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # Exposes BLACKFIRE_CLIENT_* environment variables allowing the client to communicate with Blackfire's API:
      BLACKFIRE_CLIENT_ID: ${BLACKFIRE_CLIENT_ID:-}
      BLACKFIRE_CLIENT_TOKEN: ${BLACKFIRE_CLIENT_TOKEN:-}
    ports:
      # Watchdog
      - "${WATCHDOG_PORT:-45000}:${WATCHDOG_PORT:-45000}"
      # Websocket server
      - "${WS_SERVER_PORT:-45001}:${WS_SERVER_PORT:-45001}"

  blackfire:
    image: blackfire/blackfire:2
    ports: ["8307"]
    environment:
        # Define Blackfire Agent log vebosity level
        BLACKFIRE_LOG_LEVEL: 4

        # Exposes BLACKFIRE_SERVER_* environment variables from the host
        BLACKFIRE_SERVER_ID: ${BLACKFIRE_SERVER_ID:-}
        BLACKFIRE_SERVER_TOKEN: ${BLACKFIRE_SERVER_TOKEN:-}

        # Exposes BLACKFIRE_CLIENT_* environment variables
        # allowing the client to communicate with Blackfire's API:
        BLACKFIRE_CLIENT_ID: ${BLACKFIRE_CLIENT_ID:-}
        BLACKFIRE_CLIENT_TOKEN: ${BLACKFIRE_CLIENT_TOKEN:-}
    networks:
      - php

  caddy:
    build:
      context: .
      target: app_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
    networks:
      - database
      - php

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

volumes:
  php_socket:
  caddy_data:
  caddy_config:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###

networks:
  database:
  php:
