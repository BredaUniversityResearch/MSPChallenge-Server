<?xml version="1.0"?>
<doc>
<assembly>
<name>
EwECore
</name>
</assembly>
<members>
<member name="T:EwECore.My.Resources.CoreDefaults">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.BITNESS_32">
<summary>
  Looks up a localized string similar to 32 bit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.BITNESS_64">
<summary>
  Looks up a localized string similar to 64 bit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_ALL_FLEETS">
<summary>
  Looks up a localized string similar to All fleets.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT">
<summary>
  Looks up a localized string similar to (default).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_ADVECTION">
<summary>
  Looks up a localized string similar to Advection.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_CELLAREA">
<summary>
  Looks up a localized string similar to Cell area.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_COMBINEDFLEETS">
<summary>
  Looks up a localized string similar to Combined fleets.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_DEPTH">
<summary>
  Looks up a localized string similar to Depth.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_DRIVER">
<summary>
  Looks up a localized string similar to Environmental driver {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_EFFORTZONE">
<summary>
  Looks up a localized string similar to Effort zones.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_ENVIRONMENT">
<summary>
  Looks up a localized string similar to Environment.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_EXCLUSION">
<summary>
  Looks up a localized string similar to Excluded cells.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_FISHMORTSHAPE">
<summary>
  Looks up a localized string similar to Fish mortality shape {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_FISHRATESHAPE">
<summary>
  Looks up a localized string similar to Fishing rate shape {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_HABITAT">
<summary>
  Looks up a localized string similar to Habitat {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_HABITAT_ALL">
<summary>
  Looks up a localized string similar to All.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_IMPORTANCE">
<summary>
  Looks up a localized string similar to Importance {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_LAYER">
<summary>
  Looks up a localized string similar to Layer {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_MEDIATIONSHAPE">
<summary>
  Looks up a localized string similar to Mediation function {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_MIGRATION">
<summary>
  Looks up a localized string similar to Migration {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_MIXEDLAYERDEPTH">
<summary>
  Looks up a localized string similar to Mixed layer depth.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_MPA">
<summary>
  Looks up a localized string similar to MPA {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_MPASEED">
<summary>
  Looks up a localized string similar to Seed cells.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_REGION">
<summary>
  Looks up a localized string similar to Regions.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_SAMPLE">
<summary>
  Looks up a localized string similar to Sample {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_SCENARIO">
<summary>
  Looks up a localized string similar to New Scenario.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_UPWELLING">
<summary>
  Looks up a localized string similar to Upwelling.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_WIND">
<summary>
  Looks up a localized string similar to Wind.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_X_VELOCITY">
<summary>
  Looks up a localized string similar to X velocity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_DEFAULT_Y_VELOCITY">
<summary>
  Looks up a localized string similar to Y velocity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_NEW_FORCINGSHAPE">
<summary>
  Looks up a localized string similar to New Forcing Shape.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_NEW_GROUP">
<summary>
  Looks up a localized string similar to New Group.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_NEW_MEDIATIONSHAPE">
<summary>
  Looks up a localized string similar to New Mediation Shape.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.CORE_NEW_OBJECT_CREATIONTIME">
<summary>
  Looks up a localized string similar to Created {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSAPCE_WRITER_ASC_COMPUTEDCAPACITY">
<summary>
  Looks up a localized string similar to Computed habitat capacity (ASCII maps).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_AREA_UNIT">
<summary>
  Looks up a localized string similar to Total area ({0}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_AVG_B_UNIT">
<summary>
  Looks up a localized string similar to Average biomass by group ({0}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_AVG_CATCH_UNIT">
<summary>
  Looks up a localized string similar to Average catch by fleet, group ({0}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_REGAVG_B_UNIT">
<summary>
  Looks up a localized string similar to Average regional biomass by group ({0}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_REGAVG_CATCH_UNIT">
<summary>
  Looks up a localized string similar to Average regional catch by fleet, group ({0}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_REGAVG_CONS_UNIT">
<summary>
  Looks up a localized string similar to Average regional consumption by pred, prey ({0}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_REGAVG_DATA_M0">
<summary>
  Looks up a localized string similar to Average Other Mortality across modeled area.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_REGION_AREA_UNIT">
<summary>
  Looks up a localized string similar to Region {0} area ({1}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_WRITER_ASC_BIOMASS">
<summary>
  Looks up a localized string similar to Biomass maps (ASCII format).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_WRITER_ASC_CATCH">
<summary>
  Looks up a localized string similar to Catch maps (ASCII format).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_WRITER_ASC_CONTAMINANTS">
<summary>
  Looks up a localized string similar to Contaminant Concentrations map (ASCII format).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_WRITER_ASC_DISCARDS">
<summary>
  Looks up a localized string similar to Total discards maps (ASCII format).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_WRITER_ASC_EFFORT">
<summary>
  Looks up a localized string similar to Effort maps (ASCII format).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_WRITER_REGAVG">
<summary>
  Looks up a localized string similar to Region averages (csv format).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.ECOSPACE_WRITER_XYZT">
<summary>
  Looks up a localized string similar to Biomass, Catch and Effort XYZT point values (csv format).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.MONTECARLO_WRITER_MULTIPLE">
<summary>
  Looks up a localized string similar to Separate files per trial.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.MONTECARLO_WRITER_ONEFILE">
<summary>
  Looks up a localized string similar to All results in one file.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.NET_VERSION">
<summary>
  Looks up a localized string similar to .NET version {0} ({1}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.OS_VERSION">
<summary>
  Looks up a localized string similar to Operating System {0} ({1}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_ALPHA">
<summary>
  Looks up a localized string similar to Alpha.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_BETA">
<summary>
  Looks up a localized string similar to Beta.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_END">
<summary>
  Looks up a localized string similar to End.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_LEFT_BOTTOM">
<summary>
  Looks up a localized string similar to Left bottom.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_LEFT_TOP">
<summary>
  Looks up a localized string similar to Left top.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_LEFTPOINT">
<summary>
  Looks up a localized string similar to Left point.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_LOGISTIC_INFLECTION">
<summary>
  Looks up a localized string similar to Inflection.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_LOGISTIC_SLOPE">
<summary>
  Looks up a localized string similar to Slope.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_LOGISTIC_XMAX">
<summary>
  Looks up a localized string similar to X max.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_LOGISTIC_XMIN">
<summary>
  Looks up a localized string similar to X min.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_MAX">
<summary>
  Looks up a localized string similar to Max..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_MEAN">
<summary>
  Looks up a localized string similar to Mean.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_RIGHT_BOTTOM">
<summary>
  Looks up a localized string similar to Right bottom.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_RIGHT_TOP">
<summary>
  Looks up a localized string similar to Right top.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_RIGHTPOINT">
<summary>
  Looks up a localized string similar to Right point.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_SD_LEFT">
<summary>
  Looks up a localized string similar to SD left.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_SD_RIGHT">
<summary>
  Looks up a localized string similar to SD right.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_SD_WIDTH">
<summary>
  Looks up a localized string similar to Data width.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_SIGMOID_SCALAR">
<summary>
  Looks up a localized string similar to Y axis max..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_SIGMOID_STEEP">
<summary>
  Looks up a localized string similar to Steep.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_SIGMOID_XMAX">
<summary>
  Looks up a localized string similar to X max..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_SIGMOID_XMID">
<summary>
  Looks up a localized string similar to X mid. point.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_SIGMOID_XMIN">
<summary>
  Looks up a localized string similar to X min..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_SIGMOID_XOPT">
<summary>
  Looks up a localized string similar to X opt. (y = 0.998).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_START">
<summary>
  Looks up a localized string similar to Start.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_STEEPNESS">
<summary>
  Looks up a localized string similar to Steep.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_WIDTH">
<summary>
  Looks up a localized string similar to Width.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_YBASE">
<summary>
  Looks up a localized string similar to Y base.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_YEND">
<summary>
  Looks up a localized string similar to Y end.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_YSCALAR">
<summary>
  Looks up a localized string similar to Y scalar.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PARAM_YZERO">
<summary>
  Looks up a localized string similar to Y zero.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_APPROX_INDIRECT">
<summary>
  Looks up a localized string similar to Approximate or indirect method|May include methods like remote sensing, etc..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_EMPERICAL">
<summary>
  Looks up a localized string similar to Empirical relationship.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_ESTIMATED">
<summary>
  Looks up a localized string similar to Estimated by Ecopath.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_FAO">
<summary>
  Looks up a localized string similar to FAO statistics.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_GENERAL_SAME">
<summary>
  Looks up a localized string similar to General knowledge for same group/species.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_GENERAL_SIM">
<summary>
  Looks up a localized string similar to General knowledge of related group/species.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_GUESSTIMATE">
<summary>
  Looks up a localized string similar to Guesstimate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_LOCAL_HIGH">
<summary>
  Looks up a localized string similar to Local study, high precision/complete.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_LOCAL_LOW">
<summary>
  Looks up a localized string similar to Local study, low precision/incomplete.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_NATIONAL">
<summary>
  Looks up a localized string similar to National statistics.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_OTHERMODEL">
<summary>
  Looks up a localized string similar to From other model.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_QUALDC">
<summary>
  Looks up a localized string similar to Qualitative diet composition study.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_QUANDC_DET">
<summary>
  Looks up a localized string similar to Quantitative, detailed, diet composition study.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_QUANDC_LIM">
<summary>
  Looks up a localized string similar to Quantitative but limited diet composition study.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_SAME_SAME">
<summary>
  Looks up a localized string similar to Same species, same system, high precision.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_SAME_SIM">
<summary>
  Looks up a localized string similar to Same species, similar system, high precision.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_SAMPLING_HIGH">
<summary>
  Looks up a localized string similar to Sampling/locally, high precision.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_SAMPLING_LOW">
<summary>
  Looks up a localized string similar to Sampling/locally, low precision.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_SIM_SAME">
<summary>
  Looks up a localized string similar to Similar species, same system, low precision.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.PEDIGREE_DEFAULT_SIM_SIM">
<summary>
  Looks up a localized string similar to Similar species, similar system, low precision.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.SOURCE_CLIPBOARD">
<summary>
  Looks up a localized string similar to From clipboard.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.SOURCE_PLUGINS">
<summary>
  Looks up a localized string similar to plug-in(s).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_ABSENCE">
<summary>
  Looks up a localized string similar to absence.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_AREA_KM2">
<summary>
  Looks up a localized string similar to km².
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_AREA_MI2">
<summary>
  Looks up a localized string similar to mi².
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_CURRENCY_CALORIE">
<summary>
  Looks up a localized string similar to kcal/m².
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_CURRENCY_CARBON">
<summary>
  Looks up a localized string similar to g/m².
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_CURRENCY_DRYWEIGHT">
<summary>
  Looks up a localized string similar to g/m².
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_CURRENCY_JOULES">
<summary>
  Looks up a localized string similar to J/m².
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_CURRENCY_NITROGEN">
<summary>
  Looks up a localized string similar to mg N/m².
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_CURRENCY_PHOSPOROUS">
<summary>
  Looks up a localized string similar to mg P/m².
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_CURRENCY_WETWEIGHT">
<summary>
  Looks up a localized string similar to t/km².
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_DECIMALDEGREE">
<summary>
  Looks up a localized string similar to dd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_KILOMETER">
<summary>
  Looks up a localized string similar to km.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_KILOWATTDAYS">
<summary>
  Looks up a localized string similar to kW days.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_METER">
<summary>
  Looks up a localized string similar to m.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_MULTIPLIER">
<summary>
  Looks up a localized string similar to multiplier.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_PRESENCE">
<summary>
  Looks up a localized string similar to presence.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_PROPORTION">
<summary>
  Looks up a localized string similar to proportion.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_TIME_DAY">
<summary>
  Looks up a localized string similar to day.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNIT_TIME_YEAR">
<summary>
  Looks up a localized string similar to year.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNITS_NUMBER">
<summary>
  Looks up a localized string similar to #.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.UNITS_WEIGHT">
<summary>
  Looks up a localized string similar to weight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ADJUSTSPACE">
<summary>
  Looks up a localized string similar to AdjustSpace.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ADVECTIONUPWELLINGPPMULTIPLIER">
<summary>
  Looks up a localized string similar to AdvectionUpwellingPPMultiplier.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ADVECTIONUPWELLINGTHRESHOLD">
<summary>
  Looks up a localized string similar to AdvectionUpwellingThreshold.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_AINLWINPUT">
<summary>
  Looks up a localized string similar to AinLWInput.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_AINLWOUTPUT">
<summary>
  Looks up a localized string similar to AinLWOutput.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ALPHA">
<summary>
  Looks up a localized string similar to Alpha.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_APPLIED">
<summary>
  Looks up a localized string similar to Applied.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_AREA">
<summary>
  Looks up a localized string similar to Area||Model area.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDCAPACITYGROUP">
<summary>
  Looks up a localized string similar to AscendCapacityGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDEXPORTPER">
<summary>
  Looks up a localized string similar to AscendExportPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDEXPORTTOT">
<summary>
  Looks up a localized string similar to AscendExportTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDFLOWPER">
<summary>
  Looks up a localized string similar to AscendFlowPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDFLOWTOT">
<summary>
  Looks up a localized string similar to AscendFlowTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDGROUP">
<summary>
  Looks up a localized string similar to AscendGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDIMPORTPER">
<summary>
  Looks up a localized string similar to AscendImportPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDIMPORTTOT">
<summary>
  Looks up a localized string similar to AscendImportTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDINFOGROUP">
<summary>
  Looks up a localized string similar to AscendInfoGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDOVERHEADGROUP">
<summary>
  Looks up a localized string similar to AscendOverheadGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDRESPPER">
<summary>
  Looks up a localized string similar to AscendRespPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDRESPTOT">
<summary>
  Looks up a localized string similar to AscendRespTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASCENDTHROUGHPUTGROUP">
<summary>
  Looks up a localized string similar to AscendThroughputGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASSIMILATION">
<summary>
  Looks up a localized string similar to Assimilation.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ASSUMESQUARECELLS">
<summary>
  Looks up a localized string similar to AssumeSquareCells.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_AUTHOR">
<summary>
  Looks up a localized string similar to Author.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BABSPLIT">
<summary>
  Looks up a localized string similar to BAB|BA/B||Relative biomass accumulation rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BARRIERAVOIDANCEWEIGHT">
<summary>
  Looks up a localized string similar to Barrier avoidance wt.||Barrier avoidance weight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BASEMAPSTEPSIZE">
<summary>
  Looks up a localized string similar to BasemapStepSize.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BAT">
<summary>
  Looks up a localized string similar to Bat.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BINLWINPUT">
<summary>
  Looks up a localized string similar to BinLWInput.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BINLWOUTPUT">
<summary>
  Looks up a localized string similar to BinLWOutput.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOACCUMINPUT">
<summary>
  Looks up a localized string similar to BA||Biomass accumulation.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOACCUMOUTPUT">
<summary>
  Looks up a localized string similar to BA||Biomass accumulation.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOACCUMRATE">
<summary>
  Looks up a localized string similar to BA rate||Biomass accumulation rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOACCUMRATEPERYEAR">
<summary>
  Looks up a localized string similar to BA rate (annual)||Biomass accumulation rate per year.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIODIVERSITYINDICATOR">
<summary>
  Looks up a localized string similar to BiodiversityIndicator.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIODIVERSITYINDICATORTYPE">
<summary>
  Looks up a localized string similar to BiodiversityIndicatorType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOMASS">
<summary>
  Looks up a localized string similar to B||Biomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOMASSAREAINPUT">
<summary>
  Looks up a localized string similar to B(a)|B area|Biomass in habitat area.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOMASSAREAOUTPUT">
<summary>
  Looks up a localized string similar to B(a)|B area|Biomass in habitat area.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOMASSAVGSZWT">
<summary>
  Looks up a localized string similar to BiomassAvgSzWt.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOMASSON">
<summary>
  Looks up a localized string similar to BiomassOn.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BIOMASSSZWT">
<summary>
  Looks up a localized string similar to BiomassSzWt.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_BUSEEFFORTDISTTHRESHOLD">
<summary>
  Looks up a localized string similar to bUseEffortDistThreshold.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPACITYEXPORTPER">
<summary>
  Looks up a localized string similar to CapacityExportPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPACITYEXPORTTOT">
<summary>
  Looks up a localized string similar to CapacityExportTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPACITYFLOWPER">
<summary>
  Looks up a localized string similar to CapacityFlowPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPACITYFLOWTOT">
<summary>
  Looks up a localized string similar to CapacityFlowTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPACITYIMPORTPER">
<summary>
  Looks up a localized string similar to CapacityImportPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPACITYIMPORTTOT">
<summary>
  Looks up a localized string similar to CapacityImportTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPACITYRESPPER">
<summary>
  Looks up a localized string similar to CapacityRespPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPACITYRESPTOT">
<summary>
  Looks up a localized string similar to CapacityRespTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPBASEGROWTH">
<summary>
  Looks up a localized string similar to Init. cap. growth rate||Initial capital growth rate (prop., annual).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CAPDEPRECIATE">
<summary>
  Looks up a localized string similar to Cap. depr. rate||Capital depreciation rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CB">
<summary>
  Looks up a localized string similar to CB||Consumption / Biomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CBENVIRONMENT">
<summary>
  Looks up a localized string similar to CBEnvironment.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CDECAY">
<summary>
  Looks up a localized string similar to CDecay.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CELLLENGTH">
<summary>
  Looks up a localized string similar to Cell length.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CELLSIZE">
<summary>
  Looks up a localized string similar to Cell size.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CENVIRONMENT">
<summary>
  Looks up a localized string similar to CEnvironment.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CEXCRETIONRATE">
<summary>
  Looks up a localized string similar to CExcretionRate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CIMMIG">
<summary>
  Looks up a localized string similar to CImmig.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CINFLOW">
<summary>
  Looks up a localized string similar to CInflow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CLASS">
<summary>
  Looks up a localized string similar to Class.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CLIMATETYPE">
<summary>
  Looks up a localized string similar to Climate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CODEAPHIA">
<summary>
  Looks up a localized string similar to Aphia id|||Aphia ID (WoRMS).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CODEAQUAMAPS">
<summary>
  Looks up a localized string similar to AquaMaps id|||Species ID in AquaMaps.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CODEECOBASE">
<summary>
  Looks up a localized string similar to Ecobase code.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CODEFAO">
<summary>
  Looks up a localized string similar to FAO id|||Taxonomy code according to FAO.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CODEFB">
<summary>
  Looks up a localized string similar to FB id|||Taxonomy code in FishBase.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CODELSID">
<summary>
  Looks up a localized string similar to LSID|||Taxonomy Life Sciences Identifier, as defined by the Taxonomy Database Working Group.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CODEOBIS">
<summary>
  Looks up a localized string similar to OBIS id|||Taxonomy number in OBIS.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CODESAUP">
<summary>
  Looks up a localized string similar to SAUP id|||Taxonomy code in the Sea Around Us databases.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CODESLB">
<summary>
  Looks up a localized string similar to SLB id|||Taxonomy code in SeaLifeBase.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CONCBIO">
<summary>
  Looks up a localized string similar to ConcBio.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CONCENTRATION">
<summary>
  Looks up a localized string similar to Concentration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CONFIDENCEINTERVAL">
<summary>
  Looks up a localized string similar to ConfidenceInterval.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CONFORCENUMBER">
<summary>
  Looks up a localized string similar to ConForceNumber.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CONSIMONECOSIM">
<summary>
  Looks up a localized string similar to ConSimOnEcoSim.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CONSIMONECOSPACE">
<summary>
  Looks up a localized string similar to ConSimOnEcoSpace.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CONSUMPTION">
<summary>
  Looks up a localized string similar to Consumption.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CONTACT">
<summary>
  Looks up a localized string similar to Contact||Contact information.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CORIOLIS">
<summary>
  Looks up a localized string similar to Coriolis.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_COUNTRY">
<summary>
  Looks up a localized string similar to Country.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_COUTFLOW">
<summary>
  Looks up a localized string similar to COutflow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CPUECOST">
<summary>
  Looks up a localized string similar to CPUE||Cost per unit of effort|Cost per unit of effort; costs that are a function of effort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CSUM">
<summary>
  Looks up a localized string similar to CSum.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CUSTOMVARIABLE">
<summary>
  Looks up a localized string similar to CustomVariable.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CYCLEPATH">
<summary>
  Looks up a localized string similar to CyclePath.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_CZERO">
<summary>
  Looks up a localized string similar to CZero.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DATAQ">
<summary>
  Looks up a localized string similar to DataQ.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DATASET">
<summary>
  Looks up a localized string similar to DataSet.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DATASS">
<summary>
  Looks up a localized string similar to DataSS.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DATVAL">
<summary>
  Looks up a localized string similar to DatVal.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DATYEAR">
<summary>
  Looks up a localized string similar to DatYear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DBID">
<summary>
  Looks up a localized string similar to ID||Unique ID.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DENDEPCATCHABILITY">
<summary>
  Looks up a localized string similar to DenDepCatchability.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DESCRIPTION">
<summary>
  Looks up a localized string similar to Description.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DETCONSFLOW">
<summary>
  Looks up a localized string similar to DetConsFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DETEXPORTFLOW">
<summary>
  Looks up a localized string similar to DetExportFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DETIMP">
<summary>
  Looks up a localized string similar to Det. import||Detritus import.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DETIMPORTFLOW">
<summary>
  Looks up a localized string similar to DetImportFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DETRESPFLOW">
<summary>
  Looks up a localized string similar to DetRespFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DETRITUSFATE">
<summary>
  Looks up a localized string similar to Det. fate||Detritus fate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DETTHROUGHFLOW">
<summary>
  Looks up a localized string similar to DetThroughFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DETTODETFLOW">
<summary>
  Looks up a localized string similar to DetToDetFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DIETCOMP">
<summary>
  Looks up a localized string similar to DC|Diet||Diet composition.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DISCARDFATE">
<summary>
  Looks up a localized string similar to Discard fate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DISCARDMORTALITY">
<summary>
  Looks up a localized string similar to Discard Mort.||Discard mort. rate|Discard mortality rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DISCARDS">
<summary>
  Looks up a localized string similar to Discards.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_DISCOUNT">
<summary>
  Looks up a localized string similar to Discount.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EAST">
<summary>
  Looks up a localized string similar to East.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOLOGYTYPE">
<summary>
  Looks up a localized string similar to Ecology.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHBIOMASS">
<summary>
  Looks up a localized string similar to EcopathBiomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHFIRSTYEAR">
<summary>
  Looks up a localized string similar to Year|||First year for the Ecopath model.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHNUMBER">
<summary>
  Looks up a localized string similar to EcopathNumber.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHNUMYEARS">
<summary>
  Looks up a localized string similar to No. years||Number of years|Number of years that the Ecopath model represents.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSCONNECTANCEINDEX">
<summary>
  Looks up a localized string similar to Connectance index.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSDIVERSITY">
<summary>
  Looks up a localized string similar to Diversity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSGROSSEFFICIENCY">
<summary>
  Looks up a localized string similar to Gross efficiency.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSMEANTROPHICLEVELCATCH">
<summary>
  Looks up a localized string similar to Mean TL of the catch.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSMEASUREOFFIT">
<summary>
  Looks up a localized string similar to Measure of fit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSNETSYSTEMPRODUCTION">
<summary>
  Looks up a localized string similar to NetSystemProduction.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSOMNIVINDEX">
<summary>
  Looks up a localized string similar to Omnivory index.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSPEDIGREE">
<summary>
  Looks up a localized string similar to Pedigree.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSPROFIT">
<summary>
  Looks up a localized string similar to Profit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALBNONDET">
<summary>
  Looks up a localized string similar to TotalBNonDet.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALBT">
<summary>
  Looks up a localized string similar to TotalBT.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALCATCH">
<summary>
  Looks up a localized string similar to Total catch.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALCONSUMPTION">
<summary>
  Looks up a localized string similar to Total consumption.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALCOST">
<summary>
  Looks up a localized string similar to Total cost.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALEXPORTS">
<summary>
  Looks up a localized string similar to Total exports.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALFIXEDCOST">
<summary>
  Looks up a localized string similar to Total fixed cost.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALFLOWDETRITUS">
<summary>
  Looks up a localized string similar to TotalFlowDetritus.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALMARKETVALUE">
<summary>
  Looks up a localized string similar to Total market value.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALNETPP">
<summary>
  Looks up a localized string similar to TotalNetPP.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALPB">
<summary>
  Looks up a localized string similar to TotalPB.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALPRESP">
<summary>
  Looks up a localized string similar to TotalPResp.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALPRODUCTION">
<summary>
  Looks up a localized string similar to Total production.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALRESPFLOW">
<summary>
  Looks up a localized string similar to TotalRespFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALSHADOWVALUE">
<summary>
  Looks up a localized string similar to Total shadow value.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALTHROUGHPUT">
<summary>
  Looks up a localized string similar to Total throughput.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALVALUE">
<summary>
  Looks up a localized string similar to Total value.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHSTATSTOTALVARCOST">
<summary>
  Looks up a localized string similar to Total variable cost.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOPATHWEIGHT">
<summary>
  Looks up a localized string similar to Weight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMAVGPRED">
<summary>
  Looks up a localized string similar to EcosimAvgPred.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMAVGPREY">
<summary>
  Looks up a localized string similar to EcosimAvgPrey.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMAVGWEIGHT">
<summary>
  Looks up a localized string similar to EcosimAvgWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMBIOMASS">
<summary>
  Looks up a localized string similar to EcosimBiomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMBIOMASSREL">
<summary>
  Looks up a localized string similar to EcosimBiomassRel.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMCATCHGROUPGEAR">
<summary>
  Looks up a localized string similar to EcosimCatchGroupGear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMCONSUMPBIOMASS">
<summary>
  Looks up a localized string similar to EcosimConsumpBiomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMECOSYSTEMSTRUCT">
<summary>
  Looks up a localized string similar to EcosimEcoSystemStruct.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMELECTIVITYTIME">
<summary>
  Looks up a localized string similar to EcosimElectivityTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFEEDINGTIME">
<summary>
  Looks up a localized string similar to EcosimFeedingTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFISHINGMORTGROUPGEAR">
<summary>
  Looks up a localized string similar to EcosimFishingMortGroupGear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFISHMORT">
<summary>
  Looks up a localized string similar to EcosimFishMort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETCATCHEND">
<summary>
  Looks up a localized string similar to EcosimFleetCatchEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETCATCHSTART">
<summary>
  Looks up a localized string similar to EcosimFleetCatchStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETCATCHTIME">
<summary>
  Looks up a localized string similar to EcosimFleetCatchTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETCOSTEND">
<summary>
  Looks up a localized string similar to EcosimFleetCostEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETCOSTSTART">
<summary>
  Looks up a localized string similar to EcosimFleetCostStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETEFFORT">
<summary>
  Looks up a localized string similar to EcosimFleetEffort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETJOBS">
<summary>
  Looks up a localized string similar to EcosimFleetJobs.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETPROFIT">
<summary>
  Looks up a localized string similar to EcosimFleetProfit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETVALUEEND">
<summary>
  Looks up a localized string similar to EcosimFleetValueEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETVALUESTART">
<summary>
  Looks up a localized string similar to EcosimFleetValueStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMFLEETVALUETIME">
<summary>
  Looks up a localized string similar to EcosimFleetValueTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMGROUPBIOMASSEND">
<summary>
  Looks up a localized string similar to EcosimGroupBiomassEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMGROUPBIOMASSSTART">
<summary>
  Looks up a localized string similar to EcosimGroupBiomassStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMGROUPCATCHEND">
<summary>
  Looks up a localized string similar to EcosimGroupCatchEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMGROUPCATCHSTART">
<summary>
  Looks up a localized string similar to EcosimGroupCatchStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMGROUPMAXMORT">
<summary>
  Looks up a localized string similar to EcosimGroupMaxMort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMGROUPVALUEEND">
<summary>
  Looks up a localized string similar to EcosimGroupValueEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMGROUPVALUESTART">
<summary>
  Looks up a localized string similar to EcosimGroupValueStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMISCATCHAGGREGATED">
<summary>
  Looks up a localized string similar to EcosimIsCatchAggregated.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMMORTVFISHING">
<summary>
  Looks up a localized string similar to EcosimMortVFishing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMMORTVFISHINGPM">
<summary>
  Looks up a localized string similar to EcosimMortVFishingPM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMMORTVPRED">
<summary>
  Looks up a localized string similar to EcosimMortVPred.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMMORTVPREDPM">
<summary>
  Looks up a localized string similar to EcosimMortVPredPM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMNYEARS">
<summary>
  Looks up a localized string similar to Number of Ecosim years.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMPREDCONSUMPTIME">
<summary>
  Looks up a localized string similar to EcosimPredConsumpTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMPREDMORT">
<summary>
  Looks up a localized string similar to EcosimPredMort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMPREDRATETIME">
<summary>
  Looks up a localized string similar to EcosimPredRateTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMPREYPERCENTAGETIME">
<summary>
  Looks up a localized string similar to EcosimPreyPercentageTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMPRODCONSUMP">
<summary>
  Looks up a localized string similar to EcosimProdConsump.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMSS">
<summary>
  Looks up a localized string similar to EcosimSS.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMSSGROUP">
<summary>
  Looks up a localized string similar to EcosimSSGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMSUMEND">
<summary>
  Looks up a localized string similar to EcosimSumEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMSUMNTIMESTEPS">
<summary>
  Looks up a localized string similar to EcosimSumNTimeSteps.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMSUMSTART">
<summary>
  Looks up a localized string similar to EcosimSumStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMTOTALMORT">
<summary>
  Looks up a localized string similar to EcosimTotalMort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMVALUEGROUP">
<summary>
  Looks up a localized string similar to EcosimValueGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMVALUEGROUPFLEET">
<summary>
  Looks up a localized string similar to EcosimValueGroupFleet.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMVALUEGROUPREL">
<summary>
  Looks up a localized string similar to EcosimValueGroupRel.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMYIELD">
<summary>
  Looks up a localized string similar to EcosimYield.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSIMYIELDREL">
<summary>
  Looks up a localized string similar to EcosimYieldRel.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEAREAOUTPUTDIR">
<summary>
  Looks up a localized string similar to EcospaceAreaOutputDir.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEBIOMASSOVERTIME">
<summary>
  Looks up a localized string similar to EcospaceBiomassOverTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACECAPCALTYPE">
<summary>
  Looks up a localized string similar to EcospaceCapCalType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFIRSTOUTPUTTIMESTEP">
<summary>
  Looks up a localized string similar to EcospaceFirstOutputTimeStep.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETCATCH">
<summary>
  Looks up a localized string similar to EcospaceFleetCatch.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETCATCHEND">
<summary>
  Looks up a localized string similar to EcospaceFleetCatchEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETCATCHSTART">
<summary>
  Looks up a localized string similar to EcospaceFleetCatchStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETCOSTEND">
<summary>
  Looks up a localized string similar to EcospaceFleetCostEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETCOSTSTART">
<summary>
  Looks up a localized string similar to EcospaceFleetCostStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETEFFORTES">
<summary>
  Looks up a localized string similar to EcospaceFleetEffortES.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETJOBS">
<summary>
  Looks up a localized string similar to EcospaceFleetJobs.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETPROFIT">
<summary>
  Looks up a localized string similar to EcospaceFleetProfit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETVALUE">
<summary>
  Looks up a localized string similar to EcospaceFleetValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETVALUEEND">
<summary>
  Looks up a localized string similar to EcospaceFleetValueEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFLEETVALUESTART">
<summary>
  Looks up a localized string similar to EcospaceFleetValueStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEFTARGET">
<summary>
  Looks up a localized string similar to Ftarget||Target mortality.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEGROUPBIOMASSEND">
<summary>
  Looks up a localized string similar to EcospaceGroupBiomassEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEGROUPBIOMASSSTART">
<summary>
  Looks up a localized string similar to EcospaceGroupBiomassStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEGROUPCATCHEND">
<summary>
  Looks up a localized string similar to EcospaceGroupCatchEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEGROUPCATCHOVERTIME">
<summary>
  Looks up a localized string similar to EcospaceGroupCatchOverTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEGROUPCATCHSTART">
<summary>
  Looks up a localized string similar to EcospaceGroupCatchStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEGROUPVALUEEND">
<summary>
  Looks up a localized string similar to EcospaceGroupValueEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEGROUPVALUEOVERTIME">
<summary>
  Looks up a localized string similar to EcospaceGroupValueOverTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEGROUPVALUESTART">
<summary>
  Looks up a localized string similar to EcospaceGroupValueStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEIBMMOVEPACKETONSTANZA">
<summary>
  Looks up a localized string similar to EcospaceIBMMovePacketOnStanza.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEISECOSIMBIOFORCINGLOADED">
<summary>
  Looks up a localized string similar to EcospaceIsEcosimBioForcingLoaded.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEMAPBIOMASS">
<summary>
  Looks up a localized string similar to Biomass map.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEMAPCATCH">
<summary>
  Looks up a localized string similar to Catch map.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEMAPEFFORT">
<summary>
  Looks up a localized string similar to Effort map.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEMAPOUTPUTDIR">
<summary>
  Looks up a localized string similar to EcospaceMapOutputDir.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEMAPSUMEFFORT">
<summary>
  Looks up a localized string similar to Total effort map.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACENUMBERSUMMARYTIMESTEPS">
<summary>
  Looks up a localized string similar to EcospaceNumberSummaryTimeSteps.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEREGIONBIOMASS">
<summary>
  Looks up a localized string similar to Biomass per region.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEREGIONBIOMASSEND">
<summary>
  Looks up a localized string similar to EcospaceRegionBiomassEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEREGIONBIOMASSSTART">
<summary>
  Looks up a localized string similar to EcospaceRegionBiomassStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEREGIONBIOMASSYEAR">
<summary>
  Looks up a localized string similar to EcospaceRegionBiomassYear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEREGIONCATCHEND">
<summary>
  Looks up a localized string similar to EcospaceRegionCatchEnd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEREGIONCATCHSTART">
<summary>
  Looks up a localized string similar to EcospaceRegionCatchStart.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEREGIONFLEETGROUPCATCH">
<summary>
  Looks up a localized string similar to EcospaceRegionFleetGroupCatch.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEREGIONFLEETGROUPCATCHYEAR">
<summary>
  Looks up a localized string similar to EcospaceRegionFleetGroupCatchYear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEREGIONNUMBER">
<summary>
  Looks up a localized string similar to Region no||Region number.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACERELATIVEBIOMASSOVERTIME">
<summary>
  Looks up a localized string similar to EcospaceRelativeBiomassOverTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACESS">
<summary>
  Looks up a localized string similar to Sum of squares.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACESSCALCULATED">
<summary>
  Looks up a localized string similar to EcospaceSSCalculated.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACESSGROUP">
<summary>
  Looks up a localized string similar to EcospaceSSGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACESUMMARYTIMEEND">
<summary>
  Looks up a localized string similar to Summary time end.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACESUMMARYTIMESTART">
<summary>
  Looks up a localized string similar to Summary time start.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEUSEANNUALOUTPUT">
<summary>
  Looks up a localized string similar to Use annual output.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEUSECOREOUTPUTDIR">
<summary>
  Looks up a localized string similar to EcospaceUseCoreOutputDir.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEUSEECOSIMBIOMASSFORCING">
<summary>
  Looks up a localized string similar to Use Ecosim biomass forcing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSPACEUSELOCALMEMORY">
<summary>
  Looks up a localized string similar to Use local memory.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ECOSYSTEMTYPE">
<summary>
  Looks up a localized string similar to Ecosystem type.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EEINPUT">
<summary>
  Looks up a localized string similar to EE||Ecotrophic Efficiency.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EEOUTPUT">
<summary>
  Looks up a localized string similar to EE||Ecotrophic Efficiency.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EFFECTIVEPOWER">
<summary>
  Looks up a localized string similar to EffectivePower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EFFORTDISTTHRESHOLD">
<summary>
  Looks up a localized string similar to Effort Distr. Threshold||Effort distribution threshold.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EGGATSPAWN">
<summary>
  Looks up a localized string similar to EggAtSpawn.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EMIG">
<summary>
  Looks up a localized string similar to Emigration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EMIGRATE">
<summary>
  Looks up a localized string similar to e||Emig. rate|Emigration rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ENDAGE">
<summary>
  Looks up a localized string similar to End age.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EPOWER">
<summary>
  Looks up a localized string similar to Effort response power.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EQUILIBRIUMSTEPSIZE">
<summary>
  Looks up a localized string similar to EquilibriumStepSize.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EQUILMAXFISHINGRATE">
<summary>
  Looks up a localized string similar to EquilMaxFishingRate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ESTIMATED">
<summary>
  Looks up a localized string similar to Estimated.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_EXPLOITATIONSTATUS">
<summary>
  Looks up a localized string similar to Exploitation||Exploitation status.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSANOMALYSEARCH">
<summary>
  Looks up a localized string similar to Use anomaly search.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSAPPLIEDWEIGHTS">
<summary>
  Looks up a localized string similar to Applied time series weights.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSCATCHANOMALY">
<summary>
  Looks up a localized string similar to F2TSCatchAnomaly.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSCATCHANOMALYSEARCHSHAPENUMBER">
<summary>
  Looks up a localized string similar to F2TSCatchAnomalySearchShapeNumber.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSFIRSTYEAR">
<summary>
  Looks up a localized string similar to Fit to time series first year.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSLASTYEAR">
<summary>
  Looks up a localized string similar to Fit to time series last year.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSNAICDATA">
<summary>
  Looks up a localized string similar to No. of AIC data points.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSNUMSPLINEPOINTS">
<summary>
  Looks up a localized string similar to No. of spline points.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSPPVARIANCE">
<summary>
  Looks up a localized string similar to PP variance.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSUSEDEFAULTV">
<summary>
  Looks up a localized string similar to Use defaul vulnerabilities.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSVULNERABILITYSEARCH">
<summary>
  Looks up a localized string similar to Use vulnerability search.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_F2TSVULNERABILITYVARIANCE">
<summary>
  Looks up a localized string similar to Vulnerability variance.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FAMILY">
<summary>
  Looks up a localized string similar to Family.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FEEDING">
<summary>
  Looks up a localized string similar to Feeding.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FEEDINGTIMEADJRATE">
<summary>
  Looks up a localized string similar to Feeding time adjustment rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FIB">
<summary>
  Looks up a localized string similar to FIB.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FIBPM">
<summary>
  Looks up a localized string similar to FIBPM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FISHMORTTOTMORT">
<summary>
  Looks up a localized string similar to F/Z||Fishing mort. over total mort.|Fishing mortality over total mortality rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FITRESPONSETYPE">
<summary>
  Looks up a localized string similar to Fit response||Movement response of migratory species to fitness.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FIXEDCOST">
<summary>
  Looks up a localized string similar to Fixed cost|||Fixed cost is the cost of operating a fleet unit, independent of effort, in the unit time defined in Ecopath.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FIXEDFECUNDITY">
<summary>
  Looks up a localized string similar to FixedFec|||Fixed fecundity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FLEETEFFORTCONVERSION">
<summary>
  Looks up a localized string similar to FleetEffortConversion.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FLEETINDEX">
<summary>
  Looks up a localized string similar to FleetIndex.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FLEETINDEX1">
<summary>
  Looks up a localized string similar to FleetIndex.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FLEETINDEX2">
<summary>
  Looks up a localized string similar to FleetIndex.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FLOWTODET">
<summary>
  Looks up a localized string similar to FlowToDet.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FORAGINGTIMELOWERLIMIT">
<summary>
  Looks up a localized string similar to Foraging lower limit|||In EwE version 6.4 and prior, Ecosim limits the foraging time to 0.1 of a time step. This limit can now be lowered to 0.01.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FORCINGFUNCTNUMBER">
<summary>
  Looks up a localized string similar to ForcingFunctNumber.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSBATCHRUN">
<summary>
  Looks up a localized string similar to FPSBatchRun.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSBIOMASSDIVERSITYWEIGHT">
<summary>
  Looks up a localized string similar to FPSBiomassDiversityWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSECONOMICWEIGHT">
<summary>
  Looks up a localized string similar to FPSEconomicWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSECOSYSTEMWEIGHT">
<summary>
  Looks up a localized string similar to FPSEcoSystemWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSEXISTENCEVALUE">
<summary>
  Looks up a localized string similar to FPSExistenceValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSFISHINGLIMIT">
<summary>
  Looks up a localized string similar to FPSFishingLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSFLEETJOBCATCHVALUE">
<summary>
  Looks up a localized string similar to FPSFleetJobCatchValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSFLEETTARGETPROFIT">
<summary>
  Looks up a localized string similar to FPSFleetTargetProfit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSGROUPMANDRELBIOM">
<summary>
  Looks up a localized string similar to FPSGroupMandRelBiom.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSGROUPSTRUCRELWEIGHT">
<summary>
  Looks up a localized string similar to FPSGroupStrucRelWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSINCLUDECOMP">
<summary>
  Looks up a localized string similar to FPSIncludeComp.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSINITOPTION">
<summary>
  Looks up a localized string similar to FPSInitOption.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSMANDATEDREBUILDINGWEIGHT">
<summary>
  Looks up a localized string similar to FPSMandatedRebuildingWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSMAXEFFCHANGE">
<summary>
  Looks up a localized string similar to FPSMaxEffChange.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSMAXNUMEVAL">
<summary>
  Looks up a localized string similar to FPSMaxNumEval.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSMAXPORTUTIL">
<summary>
  Looks up a localized string similar to FPSMaxPortUtil.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSNRUNS">
<summary>
  Looks up a localized string similar to FPSNRuns.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSOPTIMIZEAPPROACH">
<summary>
  Looks up a localized string similar to FPSOptimizeApproach.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSOPTIMIZEOPTIONS">
<summary>
  Looks up a localized string similar to FPSOptimizeOptions.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSPREDICTIONVARIANCE">
<summary>
  Looks up a localized string similar to FPSPredictionVariance.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSSEARCHOPTION">
<summary>
  Looks up a localized string similar to FPSSearchOption.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSSOCIALWEIGHT">
<summary>
  Looks up a localized string similar to FPSSocialWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSUSEECONOMICPLUGIN">
<summary>
  Looks up a localized string similar to FPSUseEconomicPlugin.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSUSEECOSPACE">
<summary>
  Looks up a localized string similar to FPSUseEcospace.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_FPSVALUECOMPONENTTYPE">
<summary>
  Looks up a localized string similar to FPSValueComponentType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_GEINPUT">
<summary>
  Looks up a localized string similar to GE|G/E|Production / consumption.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_GENUS">
<summary>
  Looks up a localized string similar to Genus.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_GEOUTPUT">
<summary>
  Looks up a localized string similar to GE|G/E|Production / consumption.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_GROUPDIGITS">
<summary>
  Looks up a localized string similar to Group digits.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_GROUPTAXA">
<summary>
  Looks up a localized string similar to GroupTaxa.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_GS">
<summary>
  Looks up a localized string similar to GS||Unassim. consumption|Unassimilated consumption.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_HABAREAPROPORTION">
<summary>
  Looks up a localized string similar to Hab area prop.||Habitat area proportion.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_HABITATAREA">
<summary>
  Looks up a localized string similar to Hab area|||Fraction of area used as habitat.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_HABITATFISHERY">
<summary>
  Looks up a localized string similar to Habitat fishery.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_HATCHCODE">
<summary>
  Looks up a localized string similar to Hatch code.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_HLAP">
<summary>
  Looks up a localized string similar to Hlap.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_IFDPOWER">
<summary>
  Looks up a localized string similar to IFDPower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_IMMIG">
<summary>
  Looks up a localized string similar to Immigration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_IMPAOPTTOUSE">
<summary>
  Looks up a localized string similar to MPA to use.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_IMPDIET">
<summary>
  Looks up a localized string similar to DCimp||Imported diet.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_IMPORTANCEWEIGHT">
<summary>
  Looks up a localized string similar to ImportanceWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_IMPORTEDCONSUMPTION">
<summary>
  Looks up a localized string similar to Imported consumption.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_INCOL">
<summary>
  Looks up a localized string similar to #cols||No. of columns.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_INDEX">
<summary>
  Looks up a localized string similar to #|No.||Sequential number.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_INDEXVALUE">
<summary>
  Looks up a localized string similar to Index value.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_INMIGAREAMOVEWEIGHT">
<summary>
  Looks up a localized string similar to Mig. in area movement|||Movement weight for species within migratory area.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_INROW">
<summary>
  Looks up a localized string similar to #rows||No. of rows.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ISADVECTED">
<summary>
  Looks up a localized string similar to Advected||Is advected|Is this group affected by advection?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ISECOSPACEMODELCOUPLED">
<summary>
  Looks up a localized string similar to IsEcospaceModelCoupled.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ISFISHED">
<summary>
  Looks up a localized string similar to Is fished.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ISMIGRATORY">
<summary>
  Looks up a localized string similar to Migratory||Is migratory|Is this a migratory group?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ISPRED">
<summary>
  Looks up a localized string similar to Is predator.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ISPREY">
<summary>
  Looks up a localized string similar to Is preyey.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_IUCNCONSERVATIONSTATUS">
<summary>
  Looks up a localized string similar to IUCN status||IUCN conservation status.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_KEMPTONSQ">
<summary>
  Looks up a localized string similar to KemptonsQ.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_KMOVEFITNESS">
<summary>
  Looks up a localized string similar to Rel. move speed to cell fitness|||Relative movement speed to cell fitness.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LANDINGS">
<summary>
  Looks up a localized string similar to Landings.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LASTSAVED">
<summary>
  Looks up a localized string similar to Last saved.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LASTUPDATED">
<summary>
  Looks up a localized string similar to LastUpdated.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LATITUDE">
<summary>
  Looks up a localized string similar to Latitude.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERADVECTION">
<summary>
  Looks up a localized string similar to Advection||Advection by month.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERADVECTIONFORCING">
<summary>
  Looks up a localized string similar to Advection||Advection forcing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERBIOMASSFORCING">
<summary>
  Looks up a localized string similar to Biomass (abs)||Absolute biomass forcing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERBIOMASSRELATIVEFORCING">
<summary>
  Looks up a localized string similar to Biomass (rel)||Relative Biomass forcing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERCONTAMINANTFORCINGABSOLUTE">
<summary>
  Looks up a localized string similar to Abs. C||Contaminant forcing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERCONTAMINANTRELATIVEDISTRIBUTION">
<summary>
  Looks up a localized string similar to Rel. C||Rel. contaminant distribution.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERDEPTH">
<summary>
  Looks up a localized string similar to Depth|||Depth (bathymetry).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERDRIVER">
<summary>
  Looks up a localized string similar to Driver||Environmental driver|Spatial distribution and intensity of an environmental driver.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYEREXCLUSION">
<summary>
  Looks up a localized string similar to Exclusion||Excluded cells|Cells to exclude from computations.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERHABITAT">
<summary>
  Looks up a localized string similar to Habitat|||Spatial distribution of a habitat.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERHABITATCAPACITY">
<summary>
  Looks up a localized string similar to Hab. cap. (out)||Habitat capacity (computed).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERHABITATCAPACITYINPUT">
<summary>
  Looks up a localized string similar to Hab. cap.||Habitat capacity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERIBMAGE1FORCING">
<summary>
  Looks up a localized string similar to IBM forcing||IBM first life stage forcing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERIMPORTANCE">
<summary>
  Looks up a localized string similar to Importance|||Importance map for spatial optimizations.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERM0MULT">
<summary>
  Looks up a localized string similar to M0 mult (out)|Other mort. mult. (out)|Other mortality multiplier (computed).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERM0MULTINPUT">
<summary>
  Looks up a localized string similar to M0 mult|Other mort. mult.|Other mortality multiplier (entered).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERMIGRATION">
<summary>
  Looks up a localized string similar to Migration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERMLD">
<summary>
  Looks up a localized string similar to MLD||Mixed layer depth.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERMPA">
<summary>
  Looks up a localized string similar to MPA||Marine Protected Area.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERMPARANDOM">
<summary>
  Looks up a localized string similar to Random MPA||Random MPA map.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERMPASEED">
<summary>
  Looks up a localized string similar to Seed cells.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERMPASEEDBEST">
<summary>
  Looks up a localized string similar to Best cells.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERMPASEEDCURRENT">
<summary>
  Looks up a localized string similar to Current seed cells.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERPORT">
<summary>
  Looks up a localized string similar to Ports||Ports map.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERREGION">
<summary>
  Looks up a localized string similar to Regions||Map of statistical regions.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERRELPP">
<summary>
  Looks up a localized string similar to PP||Primary Production.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERSAIL">
<summary>
  Looks up a localized string similar to Sailing cost|||Spatial distribution of sailing costs.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERUPWELLING">
<summary>
  Looks up a localized string similar to Upwelling.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LAYERWIND">
<summary>
  Looks up a localized string similar to Wind.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LEADINGBIOMASS">
<summary>
  Looks up a localized string similar to Leading B||Leading biomass|Leading (entry) life stage for calculating biomasses.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LEADINGCB">
<summary>
  Looks up a localized string similar to Leading QB|Leading Q/B||Leading (entry) life stage for calculating consumption/biomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LONGITUDE">
<summary>
  Looks up a localized string similar to Longitude.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LOOINPUT">
<summary>
  Looks up a localized string similar to Len. at inf||Length at infinity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LOOOUTPUT">
<summary>
  Looks up a localized string similar to Len. at inf||Length at infinity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_LORENZENMORTALITY">
<summary>
  Looks up a localized string similar to LorenzenMortality.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MAXEFFORT">
<summary>
  Looks up a localized string similar to Max. effort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MAXITERATIONS">
<summary>
  Looks up a localized string similar to MaxIterations.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MAXRELFEEDINGTIME">
<summary>
  Looks up a localized string similar to MaxRelFeedingTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MAXRELPB">
<summary>
  Looks up a localized string similar to MaxRelPB.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCB">
<summary>
  Looks up a localized string similar to B.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCBA">
<summary>
  Looks up a localized string similar to BA.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCBABF">
<summary>
  Looks up a localized string similar to BA (best fit).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCBACV">
<summary>
  Looks up a localized string similar to BA (cv).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCBALOWER">
<summary>
  Looks up a localized string similar to BA (lower).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCBAUPPER">
<summary>
  Looks up a localized string similar to BA (upper).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCBBF">
<summary>
  Looks up a localized string similar to B (best fit).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCBCV">
<summary>
  Looks up a localized string similar to B (cv).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCBLOWER">
<summary>
  Looks up a localized string similar to B (lower).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCBUPPER">
<summary>
  Looks up a localized string similar to B (upper).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCDIETCOMP">
<summary>
  Looks up a localized string similar to DC.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCDIETMULT">
<summary>
  Looks up a localized string similar to Diet multiplier.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCDIETSBF">
<summary>
  Looks up a localized string similar to DC (best fit).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCDISCARDS">
<summary>
  Looks up a localized string similar to Discards.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCDISCARDSBF">
<summary>
  Looks up a localized string similar to Discards (best fit).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCDISCARDSCV">
<summary>
  Looks up a localized string similar to Discards (cv).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCDISCARDSLOWER">
<summary>
  Looks up a localized string similar to Discards (lower).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCDISCARDSUPPER">
<summary>
  Looks up a localized string similar to Discards (upper).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCEE">
<summary>
  Looks up a localized string similar to EE.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCEEBF">
<summary>
  Looks up a localized string similar to EE (best fit).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCEECV">
<summary>
  Looks up a localized string similar to EE (cv).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCEELOWER">
<summary>
  Looks up a localized string similar to EE (lower).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCEEUPPER">
<summary>
  Looks up a localized string similar to EE (upper).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCLANDINGS">
<summary>
  Looks up a localized string similar to Landings.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCLANDINGSBF">
<summary>
  Looks up a localized string similar to Landings (best fit).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCLANDINGSCV">
<summary>
  Looks up a localized string similar to Landings (cv).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCLANDINGSLOWER">
<summary>
  Looks up a localized string similar to Landings (lower).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCLANDINGSUPPER">
<summary>
  Looks up a localized string similar to Landings (upper).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCPB">
<summary>
  Looks up a localized string similar to PB.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCPBBF">
<summary>
  Looks up a localized string similar to PB (best fit).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCPBCV">
<summary>
  Looks up a localized string similar to PB (cv).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCPBLOWER">
<summary>
  Looks up a localized string similar to PB (lower).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCPBUPPER">
<summary>
  Looks up a localized string similar to PB (upper).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCQB">
<summary>
  Looks up a localized string similar to QB.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCQBBF">
<summary>
  Looks up a localized string similar to QB (best fit).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCQBCV">
<summary>
  Looks up a localized string similar to QB (cv).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCQBLOWER">
<summary>
  Looks up a localized string similar to QB (lower).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCQBUPPER">
<summary>
  Looks up a localized string similar to QB (upper).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCVU">
<summary>
  Looks up a localized string similar to v.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCVUBF">
<summary>
  Looks up a localized string similar to v (best fit).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCVUCV">
<summary>
  Looks up a localized string similar to v (cv).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCVULOWER">
<summary>
  Looks up a localized string similar to v (lower).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MCVUUPPER">
<summary>
  Looks up a localized string similar to v (upper).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MEDFUNCTNUMBER">
<summary>
  Looks up a localized string similar to MedFunctNumber.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MIGRATIONCONCCOL">
<summary>
  Looks up a localized string similar to E/W mig. C.|E/W mig. concentration||East/West size of the migration concentration area.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MIGRATIONCONCROW">
<summary>
  Looks up a localized string similar to N/S mig. C.|N/S mig. concentration||North/South size of migration concentration area.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MIXEDTROPHICIMPACT">
<summary>
  Looks up a localized string similar to MixedTrophicImpact.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MODELFILENAME">
<summary>
  Looks up a localized string similar to File name.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MORTCOBIOACUMRATE">
<summary>
  Looks up a localized string similar to Bio accum. rate||Biomass accumulation rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MORTCOFISHRATE">
<summary>
  Looks up a localized string similar to Fishing mort. rate||Fishing moratility rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MORTCONETMIG">
<summary>
  Looks up a localized string similar to Net. migration rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MORTCOOTHERMORT">
<summary>
  Looks up a localized string similar to Other mort. rate||Other mortality rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MORTCOPB">
<summary>
  Looks up a localized string similar to MortCoPB.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MORTCOPREDMORT">
<summary>
  Looks up a localized string similar to Pred. mort. rate||Predation mortality rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPABUSECELLWEIGHT">
<summary>
  Looks up a localized string similar to MPAbUseCellWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAFISHERY">
<summary>
  Looks up a localized string similar to MPAFishery.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAMONTH">
<summary>
  Looks up a localized string similar to MPAMonth.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTAREABOUNDARY">
<summary>
  Looks up a localized string similar to MPAOptAreaBoundary.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTBESTCOL">
<summary>
  Looks up a localized string similar to MPAOptBestCol.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTBESTROW">
<summary>
  Looks up a localized string similar to MPAOptBestRow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTBIOMASSDIVERSITYVALUE">
<summary>
  Looks up a localized string similar to MPAOptBiomassDiversityValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTBOUNDARYWEIGHT">
<summary>
  Looks up a localized string similar to MPAOptBoundaryWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTCURCOL">
<summary>
  Looks up a localized string similar to MPAOptCurCol.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTCURROW">
<summary>
  Looks up a localized string similar to MPAOptCurRow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTECOLOGICALVALUE">
<summary>
  Looks up a localized string similar to MPAOptEcologicalValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTECONOMICVALUE">
<summary>
  Looks up a localized string similar to MPAOptEconomicValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTENDYEAR">
<summary>
  Looks up a localized string similar to MPAOptEndYear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTITERATIONS">
<summary>
  Looks up a localized string similar to MPAOptIterations.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTMANDATEDVALUE">
<summary>
  Looks up a localized string similar to MPAOptMandatedValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTMAXAREA">
<summary>
  Looks up a localized string similar to MPAOptMaxArea.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTMINAREA">
<summary>
  Looks up a localized string similar to MPAOptMinArea.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTPERCENTAGECLOSED">
<summary>
  Looks up a localized string similar to MPAOptPercentageClosed.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTSEARCHTYPE">
<summary>
  Looks up a localized string similar to MPAOptSearchType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTSOCIALVALUE">
<summary>
  Looks up a localized string similar to MPAOptSocialValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTSTARTYEAR">
<summary>
  Looks up a localized string similar to MPAOptStartYear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTSTEPSIZE">
<summary>
  Looks up a localized string similar to MPAOptStepSize.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MPAOPTTOTALVALUE">
<summary>
  Looks up a localized string similar to MPAOptTotalValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEASSESSMETHOD">
<summary>
  Looks up a localized string similar to MSEAssessMethod.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEASSESSPOWER">
<summary>
  Looks up a localized string similar to MSEAssessPower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHFLOWER">
<summary>
  Looks up a localized string similar to MSEBatchFLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHFMANAGED">
<summary>
  Looks up a localized string similar to MSEBatchFManaged.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHFNITERATION">
<summary>
  Looks up a localized string similar to MSEBatchFNIteration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHFUPPER">
<summary>
  Looks up a localized string similar to MSEBatchFUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHFVALUES">
<summary>
  Looks up a localized string similar to MSEBatchFValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHGROUPRUNTYPE">
<summary>
  Looks up a localized string similar to MSEBatchGroupRunType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHITERCALCTYPE">
<summary>
  Looks up a localized string similar to MSEBatchIterCalcType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHOUPUTDIR">
<summary>
  Looks up a localized string similar to MSEBatchOuputDir.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHOUTPUTBIOMASS">
<summary>
  Looks up a localized string similar to MSEBatchOutputBiomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHOUTPUTCATCH">
<summary>
  Looks up a localized string similar to MSEBatchOutputCatch.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHOUTPUTCONBIO">
<summary>
  Looks up a localized string similar to MSEBatchOutputConBio.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHOUTPUTFEEDINGTIME">
<summary>
  Looks up a localized string similar to MSEBatchOutputFeedingTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHOUTPUTFISHINGMORTRATE">
<summary>
  Looks up a localized string similar to MSEBatchOutputFishingMortRate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHOUTPUTPREDRATE">
<summary>
  Looks up a localized string similar to MSEBatchOutputPredRate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHTACLOWER">
<summary>
  Looks up a localized string similar to MSEBatchTACLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHTACMANAGED">
<summary>
  Looks up a localized string similar to MSEBatchTACManaged.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHTACNITERATION">
<summary>
  Looks up a localized string similar to MSEBatchTACNIteration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHTACUPPER">
<summary>
  Looks up a localized string similar to MSEBatchTACUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHTACVALUES">
<summary>
  Looks up a localized string similar to MSEBatchTACValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBATCHTFMMANAGED">
<summary>
  Looks up a localized string similar to MSEBatchTFMManaged.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBBASE">
<summary>
  Looks up a localized string similar to MSE base biomass .
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBESTTOTALVALUE">
<summary>
  Looks up a localized string similar to MSEBestTotalValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOCV">
<summary>
  Looks up a localized string similar to MSEBioCV.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTABOVELIMIT">
<summary>
  Looks up a localized string similar to MSEBioEstAboveLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTBELOWLIMIT">
<summary>
  Looks up a localized string similar to MSEBioEstBelowLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTBINS">
<summary>
  Looks up a localized string similar to MSEBioEstBins.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTBINWIDTHS">
<summary>
  Looks up a localized string similar to MSEBioEstBinWidths.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTCV">
<summary>
  Looks up a localized string similar to MSEBioEstCV.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTHISTOGRAM">
<summary>
  Looks up a localized string similar to MSEBioEstHistogram.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTMAX">
<summary>
  Looks up a localized string similar to MSEBioEstMax.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTMEANVALUES">
<summary>
  Looks up a localized string similar to MSEBioEstMeanValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTMIN">
<summary>
  Looks up a localized string similar to MSEBioEstMin.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTSTD">
<summary>
  Looks up a localized string similar to MSEBioEstStd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOESTVALUES">
<summary>
  Looks up a localized string similar to MSEBioEstValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASS">
<summary>
  Looks up a localized string similar to MSEBiomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSABOVELIMIT">
<summary>
  Looks up a localized string similar to MSEBiomassAboveLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSABOVELIMITPM">
<summary>
  Looks up a localized string similar to MSEBiomassAboveLimitPM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSBELOWLIMIT">
<summary>
  Looks up a localized string similar to MSEBiomassBelowLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSBELOWLIMITPM">
<summary>
  Looks up a localized string similar to MSEBiomassBelowLimitPM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSBINS">
<summary>
  Looks up a localized string similar to MSEBiomassBins.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSBINWIDTHS">
<summary>
  Looks up a localized string similar to MSEBiomassBinWidths.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSCV">
<summary>
  Looks up a localized string similar to MSEBiomassCV.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSCVPM">
<summary>
  Looks up a localized string similar to MSEBiomassCVPM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSHISTOGRAM">
<summary>
  Looks up a localized string similar to MSEBiomassHistogram.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSMAX">
<summary>
  Looks up a localized string similar to MSEBiomassMax.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSMEANVALUES">
<summary>
  Looks up a localized string similar to MSEBiomassMeanValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSMIN">
<summary>
  Looks up a localized string similar to MSEBiomassMin.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSSDT">
<summary>
  Looks up a localized string similar to MSEBiomassSdt.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBIOMASSVALUES">
<summary>
  Looks up a localized string similar to MSEBiomassValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEBLIM">
<summary>
  Looks up a localized string similar to MSEBLim.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSECATCHBYFLEET">
<summary>
  Looks up a localized string similar to MSECatchByFleet.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSECATCHBYGROUP">
<summary>
  Looks up a localized string similar to MSECatchByGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEECOLOGICALVALUE">
<summary>
  Looks up a localized string similar to MSEEcologicalValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEECONOMICVALUE">
<summary>
  Looks up a localized string similar to MSEEconomicValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORT">
<summary>
  Looks up a localized string similar to MSEEffort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTABOVELIMIT">
<summary>
  Looks up a localized string similar to MSEEffortAboveLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTBELOWLIMIT">
<summary>
  Looks up a localized string similar to MSEEffortBelowLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTBINS">
<summary>
  Looks up a localized string similar to MSEEffortBins.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTBINWIDTHS">
<summary>
  Looks up a localized string similar to MSEEffortBinWidths.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTCV">
<summary>
  Looks up a localized string similar to MSEEffortCV.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTHISTOGRAM">
<summary>
  Looks up a localized string similar to MSEEffortHistogram.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTMAX">
<summary>
  Looks up a localized string similar to MSEEffortMax.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTMEANVALUES">
<summary>
  Looks up a localized string similar to MSEEffortMeanValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTMIN">
<summary>
  Looks up a localized string similar to MSEEffortMin.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTSOURCE">
<summary>
  Looks up a localized string similar to MSEEffortSource.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTSTD">
<summary>
  Looks up a localized string similar to MSEEffortStd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEFFORTVALUES">
<summary>
  Looks up a localized string similar to MSEEffortValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEEMPLOYVALUE">
<summary>
  Looks up a localized string similar to MSEEmployValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFIXEDESCAPEMENT">
<summary>
  Looks up a localized string similar to MSEFixedEscapement.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFIXEDF">
<summary>
  Looks up a localized string similar to MSEFixedF.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETCV">
<summary>
  Looks up a localized string similar to MSEFleetCV.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUEABOVELIMIT">
<summary>
  Looks up a localized string similar to MSEFleetValueAboveLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUEBELOWLIMIT">
<summary>
  Looks up a localized string similar to MSEFleetValueBelowLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUEBINS">
<summary>
  Looks up a localized string similar to MSEFleetValueBins.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUEBINWIDTHS">
<summary>
  Looks up a localized string similar to MSEFleetValueBinWidths.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUECV">
<summary>
  Looks up a localized string similar to MSEFleetValueCV.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUEHISTOGRAM">
<summary>
  Looks up a localized string similar to MSEFleetValueHistogram.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUEMAX">
<summary>
  Looks up a localized string similar to MSEFleetValueMax.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUEMEANVALUES">
<summary>
  Looks up a localized string similar to MSEFleetValueMeanValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUEMIN">
<summary>
  Looks up a localized string similar to MSEFleetValueMin.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUESTD">
<summary>
  Looks up a localized string similar to MSEFleetValueStd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETVALUEVALUES">
<summary>
  Looks up a localized string similar to MSEFleetValueValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFLEETWEIGHT">
<summary>
  Looks up a localized string similar to MSEFleetWeight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFMAX">
<summary>
  Looks up a localized string similar to MSEFmax.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFMAXPM">
<summary>
  Looks up a localized string similar to MSEFmaxPM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFMIN">
<summary>
  Looks up a localized string similar to MSEFmin.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFORCASTGAIN">
<summary>
  Looks up a localized string similar to MSEForcastGain.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATABOVELIMIT">
<summary>
  Looks up a localized string similar to MSEFStatAboveLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATBELOWLIMIT">
<summary>
  Looks up a localized string similar to MSEFStatBelowLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATBINS">
<summary>
  Looks up a localized string similar to MSEFStatBins.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATBINWIDTHS">
<summary>
  Looks up a localized string similar to MSEFStatBinWidths.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATCV">
<summary>
  Looks up a localized string similar to MSEFStatCV.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATHISTOGRAM">
<summary>
  Looks up a localized string similar to MSEFStatHistogram.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATMAX">
<summary>
  Looks up a localized string similar to MSEFStatMax.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATMEANVALUES">
<summary>
  Looks up a localized string similar to MSEFStatMeanValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATMIN">
<summary>
  Looks up a localized string similar to MSEFStatMin.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATSTD">
<summary>
  Looks up a localized string similar to MSEFStatStd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEFSTATVALUES">
<summary>
  Looks up a localized string similar to MSEFStatValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHABOVELIMIT">
<summary>
  Looks up a localized string similar to MSEGroupCatchAboveLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHBELOWLIMIT">
<summary>
  Looks up a localized string similar to MSEGroupCatchBelowLimit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHBINS">
<summary>
  Looks up a localized string similar to MSEGroupCatchBins.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHBINWIDTHS">
<summary>
  Looks up a localized string similar to MSEGroupCatchBinWidths.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHCV">
<summary>
  Looks up a localized string similar to MSEGroupCatchCV.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHHISTOGRAM">
<summary>
  Looks up a localized string similar to MSEGroupCatchHistogram.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHMAX">
<summary>
  Looks up a localized string similar to MSEGroupCatchMax.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHMEANVALUES">
<summary>
  Looks up a localized string similar to MSEGroupCatchMeanValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHMIN">
<summary>
  Looks up a localized string similar to MSEGroupCatchMin.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHSTD">
<summary>
  Looks up a localized string similar to MSEGroupCatchStd.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEGROUPCATCHVALUES">
<summary>
  Looks up a localized string similar to MSEGroupCatchValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSELOWERLPEFFORT">
<summary>
  Looks up a localized string similar to MSELowerLPEffort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSELOWERRISK">
<summary>
  Looks up a localized string similar to MSELowerRisk.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSELOWERRISKPERCENT">
<summary>
  Looks up a localized string similar to MSELowerRiskPercent.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSELPSOLUTION">
<summary>
  Looks up a localized string similar to MSELPSolution.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEMANDATEDVALUE">
<summary>
  Looks up a localized string similar to MSEMandatedValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEMAXEFFORT">
<summary>
  Looks up a localized string similar to MSEMaxEffort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEMEANECOLOGICALVALUE">
<summary>
  Looks up a localized string similar to MSEMeanEcologicalValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEMEANECONOMICVALUE">
<summary>
  Looks up a localized string similar to MSEMeanEconomicValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEMEANEMPLOYVALUE">
<summary>
  Looks up a localized string similar to MSEMeanEmployValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEMEANMANDATEDVALUE">
<summary>
  Looks up a localized string similar to MSEMeanMandatedValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSENTRIALS">
<summary>
  Looks up a localized string similar to MSENTrials.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEPREDICTEFFORT">
<summary>
  Looks up a localized string similar to MSEPredictEffort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEQINCREASE">
<summary>
  Looks up a localized string similar to MSEQIncrease.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSERECRUITMENTCV">
<summary>
  Looks up a localized string similar to MSERecruitmentCV.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFBIOESTLOWER">
<summary>
  Looks up a localized string similar to MSERefBioEstLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFBIOESTUPPER">
<summary>
  Looks up a localized string similar to MSERefBioEstUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFBIOLOWER">
<summary>
  Looks up a localized string similar to MSERefBioLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFBIOUPPER">
<summary>
  Looks up a localized string similar to MSERefBioUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFFLEETCATCHLOWER">
<summary>
  Looks up a localized string similar to MSERefFleetCatchLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFFLEETCATCHUPPER">
<summary>
  Looks up a localized string similar to MSERefFleetCatchUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFFLEETEFFORTLOWER">
<summary>
  Looks up a localized string similar to MSERefFleetEffortLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFFLEETEFFORTUPPER">
<summary>
  Looks up a localized string similar to MSERefFleetEffortUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFGROUPCATCHLOWER">
<summary>
  Looks up a localized string similar to MSERefGroupCatchLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREFGROUPCATCHUPPER">
<summary>
  Looks up a localized string similar to MSERefGroupCatchUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEREGULATORYMODE">
<summary>
  Looks up a localized string similar to MSERegulatoryMode.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSERESULTSENDYEAR">
<summary>
  Looks up a localized string similar to MSEResultsEndYear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSERESULTSSTARTYEAR">
<summary>
  Looks up a localized string similar to MSEResultsStartYear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSESTARTYEAR">
<summary>
  Looks up a localized string similar to MSEStartYear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSESTOP">
<summary>
  Looks up a localized string similar to MSEStop.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETAC">
<summary>
  Looks up a localized string similar to MSETAC.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMBBASELOWER">
<summary>
  Looks up a localized string similar to MSETFMBBaseLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMBBASEUPPER">
<summary>
  Looks up a localized string similar to MSETFMBBaseUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMBBASEVALUES">
<summary>
  Looks up a localized string similar to MSETFMBBaseValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMBLIMLOWER">
<summary>
  Looks up a localized string similar to MSETFMBLimLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMBLIMUPPER">
<summary>
  Looks up a localized string similar to MSETFMBLimUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMBLIMVALUES">
<summary>
  Looks up a localized string similar to MSETFMBLimValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMFOPTLOWER">
<summary>
  Looks up a localized string similar to MSETFMFOptLower.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMFOPTUPPER">
<summary>
  Looks up a localized string similar to MSETFMFOptUpper.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMFOPTVALUES">
<summary>
  Looks up a localized string similar to MSETFMFOptValues.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETFMNITERATION">
<summary>
  Looks up a localized string similar to MSETFMNIteration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSETRIALNUMBER">
<summary>
  Looks up a localized string similar to MSETrialNumber.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEUPPERLPEFFORT">
<summary>
  Looks up a localized string similar to MSEUpperLPEffort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEUPPERRISK">
<summary>
  Looks up a localized string similar to MSEUpperRisk.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEUPPERRISKPERCENT">
<summary>
  Looks up a localized string similar to MSEUpperRiskPercent.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEUSEECONOMICPLUGIN">
<summary>
  Looks up a localized string similar to MSEUseEconomicPlugin.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEVALUEBYFLEET">
<summary>
  Looks up a localized string similar to MSEValueByFleet.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSEWEIGHTEDTOTALVALUE">
<summary>
  Looks up a localized string similar to MSEWeightedTotalValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYASSESSMENT">
<summary>
  Looks up a localized string similar to MSYAssessment.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYEQUILIBRIUMSTEPSIZE">
<summary>
  Looks up a localized string similar to MSYEquilibriumStepSize.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYEVALUATEFLEET">
<summary>
  Looks up a localized string similar to MSYEvaluateFleet.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYEVALVALUE">
<summary>
  Looks up a localized string similar to MSYEvalValue.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYFSELECTION">
<summary>
  Looks up a localized string similar to MSYFSelection.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYFSELECTIONMODE">
<summary>
  Looks up a localized string similar to MSYFSelectionMode.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYMAXFISHINGRATE">
<summary>
  Looks up a localized string similar to MSYMaxFishingRate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYNUMTRIALYEARS">
<summary>
  Looks up a localized string similar to MSYNumTrialYears.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYRUNLENGTHMODE">
<summary>
  Looks up a localized string similar to MSYRunLengthMode.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYRUNSILENT">
<summary>
  Looks up a localized string similar to MSYRunSilent.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MSYSTARTTIME">
<summary>
  Looks up a localized string similar to MSYStartTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_MVEL">
<summary>
  Looks up a localized string similar to Base disp. rate||Base dispersal rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NAME">
<summary>
  Looks up a localized string similar to Name.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NATMORTPERTOTMORT">
<summary>
  Looks up a localized string similar to NatMortPerTotMort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NDATYEARS">
<summary>
  Looks up a localized string similar to nDatYears.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NEFFORTDISTTHREADS">
<summary>
  Looks up a localized string similar to nEffortDistThreads.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NETEFFICIENCY">
<summary>
  Looks up a localized string similar to Net efficiency.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NETMIGRATION">
<summary>
  Looks up a localized string similar to Net migration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NETWORKABSFLOW">
<summary>
  Looks up a localized string similar to NetworkAbsFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NETWORKRELFLOW">
<summary>
  Looks up a localized string similar to NetworkRelFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NGRIDSOLVERTHREADS">
<summary>
  Looks up a localized string similar to No. solver threads.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NOMINALEFFORT">
<summary>
  Looks up a localized string similar to Nom. Eff.||Nominal effort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NONMARKETVALUE">
<summary>
  Looks up a localized string similar to Shadow price|||Shadow price or non-market value represents the value of a resource in the ecosystem, e.g., for non-exploitative uses.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NORTH">
<summary>
  Looks up a localized string similar to North.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NOTSET">
<summary>
  Looks up a localized string similar to (None)||(No variable).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NSPACETHREADS">
<summary>
  Looks up a localized string similar to nSpaceThreads.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NTROPHICLEVELS">
<summary>
  Looks up a localized string similar to nTrophicLevels.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NUDGECHECKED">
<summary>
  Looks up a localized string similar to NudgeChecked.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NUMDIGITS">
<summary>
  Looks up a localized string similar to Number of decimal digits.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NUMPTSMOVAVG">
<summary>
  Looks up a localized string similar to NumPtsMovAvg.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NUMSTEPAVG">
<summary>
  Looks up a localized string similar to NumStepAvg.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NUMTIMESTEPSPERYEAR">
<summary>
  Looks up a localized string similar to No. time steps per year.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NUTBASEFREEPROP">
<summary>
  Looks up a localized string similar to NutBaseFreeProp.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NUTFORCEFUNCTIONNUMBER">
<summary>
  Looks up a localized string similar to Nutrition forcing function.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_NUTPBMAX">
<summary>
  Looks up a localized string similar to NutPBMax.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OCCURRENCESTATUS">
<summary>
  Looks up a localized string similar to Occurrence||Occurrence status.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OFFVESSELPRICE">
<summary>
  Looks up a localized string similar to Price||Off-vessel price.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OMNIVORYINDEX">
<summary>
  Looks up a localized string similar to Omnivory index.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ORDER">
<summary>
  Looks up a localized string similar to Order.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_ORGANISMTYPE">
<summary>
  Looks up a localized string similar to Organism.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OTHERMORTFEEDINGTIME">
<summary>
  Looks up a localized string similar to OtherMortFeedingTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OTHERMORTINPUT">
<summary>
  Looks up a localized string similar to M0||Other mortality.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OVERHEADEXPORTPER">
<summary>
  Looks up a localized string similar to OverheadExportPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OVERHEADEXPORTTOT">
<summary>
  Looks up a localized string similar to OverheadExportTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OVERHEADFLOWPER">
<summary>
  Looks up a localized string similar to OverheadFlowPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OVERHEADFLOWTOT">
<summary>
  Looks up a localized string similar to OverheadFlowTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OVERHEADIMPORTPER">
<summary>
  Looks up a localized string similar to OverheadImportPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OVERHEADIMPORTTOT">
<summary>
  Looks up a localized string similar to OverheadImportTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OVERHEADRESPPER">
<summary>
  Looks up a localized string similar to OverheadRespPer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_OVERHEADRESPTOT">
<summary>
  Looks up a localized string similar to OverheadRespTot.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PACKETSMULTIPLIER">
<summary>
  Looks up a localized string similar to PacketsMultiplier.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PBINPUT">
<summary>
  Looks up a localized string similar to PB|P/B|Production / biomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PBOUTPUT">
<summary>
  Looks up a localized string similar to PB|P/B|Production / biomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PCAPBASE">
<summary>
  Looks up a localized string similar to Initial effort / capital capacity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PHYLUM">
<summary>
  Looks up a localized string similar to Phylum.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PLAP">
<summary>
  Looks up a localized string similar to Plap.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_POOLCOLOR">
<summary>
  Looks up a localized string similar to PoolColor.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PP">
<summary>
  Looks up a localized string similar to PP|%PP|Percentage of Primary Production.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PPCONSFLOW">
<summary>
  Looks up a localized string similar to PPConsFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PPEXPORTFLOW">
<summary>
  Looks up a localized string similar to PPExportFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PPIMPORTFLOW">
<summary>
  Looks up a localized string similar to PPImportFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PPRESPFLOW">
<summary>
  Looks up a localized string similar to PPRespFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PPTHROUGHFLOW">
<summary>
  Looks up a localized string similar to PPThroughFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PPTODETFLOW">
<summary>
  Looks up a localized string similar to PPToDetFlow.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PREDEFFECTFEEDINGTIME">
<summary>
  Looks up a localized string similar to PredEffectFeedingTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PREDICTEFFORT">
<summary>
  Looks up a localized string similar to PredictEffort.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PREDMORT">
<summary>
  Looks up a localized string similar to M2||Pred. mort.|Predation mortality.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PREFERREDHABITAT">
<summary>
  Looks up a localized string similar to PreferredHabitat.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PRODRESP">
<summary>
  Looks up a localized string similar to Production / respiration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PROJECTIONSTRING">
<summary>
  Looks up a localized string similar to ProjectionString.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PSD">
<summary>
  Looks up a localized string similar to PSD.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PSDCOMPUTED">
<summary>
  Looks up a localized string similar to PSDComputed.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PSDENABLED">
<summary>
  Looks up a localized string similar to PSDEnabled.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PSDFIRSTWEIGHTCLASS">
<summary>
  Looks up a localized string similar to PSDFirstWeightClass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PSDINCLUDED">
<summary>
  Looks up a localized string similar to PSDIncluded.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PSDMORTALITYTYPE">
<summary>
  Looks up a localized string similar to PSDMortalityType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PSDNUMWEIGHTCLASSES">
<summary>
  Looks up a localized string similar to PSDNumWeightClasses.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PUBLICATIONDOI">
<summary>
  Looks up a localized string similar to DOI||Digital Object Identifier|Digital Object Identifier of the publication.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PUBLICATIONREFERENCE">
<summary>
  Looks up a localized string similar to PublicationReference.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_PUBLICATIONURI">
<summary>
  Looks up a localized string similar to URL||Publication URL|Hyperlink to publication.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_QBINPUT">
<summary>
  Looks up a localized string similar to QB|Q/B|Consumption / biomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_QBMAXQBIO">
<summary>
  Looks up a localized string similar to QBMaxQBio.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_QBOUTPUT">
<summary>
  Looks up a localized string similar to QB|Q/B|Consumption / biomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_QUOTASHARE">
<summary>
  Looks up a localized string similar to QuotaShare.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_QUOTATYPE">
<summary>
  Looks up a localized string similar to QuotaType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_RECPOWERSPLIT">
<summary>
  Looks up a localized string similar to Rec. rate||Relative recruitment rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_RELAXATION">
<summary>
  Looks up a localized string similar to Relaxation.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_RELMOVEBAD">
<summary>
  Looks up a localized string similar to IBM disp. bad habitat.||IBM dispersal in bad habitat.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_RELVULBAD">
<summary>
  Looks up a localized string similar to Rel. vul to pred. in bad hab.|||Relative vulnerability to predation in bad habitat (proportion for primary producers).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_RESPASSIM">
<summary>
  Looks up a localized string similar to Respiration / assimilation.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_RESPBIOM">
<summary>
  Looks up a localized string similar to Respiration / biomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_RESPIRATION">
<summary>
  Looks up a localized string similar to Respiration.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_RHALFB0RATIO">
<summary>
  Looks up a localized string similar to RHalfB0Ratio.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SAILCOST">
<summary>
  Looks up a localized string similar to Sail cost||Cost of sailing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SALINITYOPT">
<summary>
  Looks up a localized string similar to Sal opt||Optimum salinity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SALINITYSPREADLEFT">
<summary>
  Looks up a localized string similar to Sal tol below||Salinity tolerance below optimum.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SALINITYSPREADRIGHT">
<summary>
  Looks up a localized string similar to Sal tol above||Salinity tolerance above optimum.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SAMPLERATING">
<summary>
  Looks up a localized string similar to SampleRating.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SEARCHBASEYEAR">
<summary>
  Looks up a localized string similar to SearchBaseYear.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SEARCHBLOCK">
<summary>
  Looks up a localized string similar to SearchBlock.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SEARCHDISCOUNTRATE">
<summary>
  Looks up a localized string similar to SearchDiscountRate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SEARCHFISHINGMORTALITYPENALTY">
<summary>
  Looks up a localized string similar to SearchFishingMortalityPenalty.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SEARCHGENDISCRATE">
<summary>
  Looks up a localized string similar to SearchGenDiscRate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SEARCHPREVCOSTEARNING">
<summary>
  Looks up a localized string similar to SearchPrevCostEarning.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SEARCHRATE">
<summary>
  Looks up a localized string similar to SearchRate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SEMULT">
<summary>
  Looks up a localized string similar to Tot.Eff.Mult.||Total effort multiplier.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SHANNONDIVERSITY">
<summary>
  Looks up a localized string similar to ShannonDiversity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SOR">
<summary>
  Looks up a localized string similar to SOR.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SORWV">
<summary>
  Looks up a localized string similar to SorWv.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SOURCE">
<summary>
  Looks up a localized string similar to Source.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SOURCEKEY">
<summary>
  Looks up a localized string similar to SourceKey.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SOUTH">
<summary>
  Looks up a localized string similar to South.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SPAWNPROP">
<summary>
  Looks up a localized string similar to Spawning|||Proportion of life stage allowed to spawn.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SPECIES">
<summary>
  Looks up a localized string similar to Species.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STANZABIOMASS">
<summary>
  Looks up a localized string similar to StanzaBiomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STANZABIOMASSATAGE">
<summary>
  Looks up a localized string similar to StanzaBiomassAtAge.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STANZACB">
<summary>
  Looks up a localized string similar to StanzaCB.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STANZAGROUP">
<summary>
  Looks up a localized string similar to StanzaGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STANZAMORTAILITY">
<summary>
  Looks up a localized string similar to StanzaMortaility.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STANZAMORTALITY">
<summary>
  Looks up a localized string similar to Z||Tot. mort. rate|Total mortality rate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STANZANUMBERATAGE">
<summary>
  Looks up a localized string similar to StanzaNumberAtAge.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STANZAWEIGHTATAGE">
<summary>
  Looks up a localized string similar to StanzaWeightAtAge.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STARTAGE">
<summary>
  Looks up a localized string similar to StartAge.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_STEPSIZE">
<summary>
  Looks up a localized string similar to StepSize.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SWITCHINGPOWER">
<summary>
  Looks up a localized string similar to Switching power.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_SYSTEMRECOVERY">
<summary>
  Looks up a localized string similar to SystemRecovery.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_T0INPUT">
<summary>
  Looks up a localized string similar to t0Input.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_T0OUTPUT">
<summary>
  Looks up a localized string similar to t0Output.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONGROUP">
<summary>
  Looks up a localized string similar to TaxonGroup.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONMAXLENGTH">
<summary>
  Looks up a localized string similar to Max length.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONMEANLENGTH">
<summary>
  Looks up a localized string similar to Mean length.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONMEANLIFESPAN">
<summary>
  Looks up a localized string similar to Mean life span.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONMEANWEIGHT">
<summary>
  Looks up a localized string similar to Mean weight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONPROPBIOMASS">
<summary>
  Looks up a localized string similar to Prop. B||Biomass contribution|Contribution to the functional group biomass.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONPROPCATCH">
<summary>
  Looks up a localized string similar to Prop. catch||Catch contribution|Contribution to the functional group catch.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONSEARCHFIELDS">
<summary>
  Looks up a localized string similar to TaxonSearchFields.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONSTANZA">
<summary>
  Looks up a localized string similar to TaxonStanza.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONVBGFK">
<summary>
  Looks up a localized string similar to TaxonvbgfK.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONVULNERABILITYINDEX">
<summary>
  Looks up a localized string similar to Vul. index||Vulnerability index.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TAXONWINF">
<summary>
  Looks up a localized string similar to TaxonWinf.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TCATCHINPUT">
<summary>
  Looks up a localized string similar to Catch.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TCATCHOUTPUT">
<summary>
  Looks up a localized string similar to TCatchOutput.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TEMPERATUREOPT">
<summary>
  Looks up a localized string similar to T opt||Optimum temperature.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TEMPERATURESPREADLEFT">
<summary>
  Looks up a localized string similar to T tol below||Temperature tolerance below optimum.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TEMPERATURESPREADRIGHT">
<summary>
  Looks up a localized string similar to Ttol above||Temperature tolerance above optimum.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TIMESERIESTYPE">
<summary>
  Looks up a localized string similar to TimeSeriesType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TL">
<summary>
  Looks up a localized string similar to TL||Trophic level.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TLCATCH">
<summary>
  Looks up a localized string similar to TLCatch.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TLCATCHPM">
<summary>
  Looks up a localized string similar to TLCatchPM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TLPM">
<summary>
  Looks up a localized string similar to TLPM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TMAXINPUT">
<summary>
  Looks up a localized string similar to TmaxInput.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TMAXOUTPUT">
<summary>
  Looks up a localized string similar to TmaxOutput.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TOLERANCE">
<summary>
  Looks up a localized string similar to Tolerance.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TOTALCATCH">
<summary>
  Looks up a localized string similar to TotalCatch.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TOTALTIME">
<summary>
  Looks up a localized string similar to TotalTime.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_TTLX">
<summary>
  Looks up a localized string similar to TTLX||Trophic level.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_UNITAREA">
<summary>
  Looks up a localized string similar to Area unit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_UNITAREACUSTOMTEXT">
<summary>
  Looks up a localized string similar to Custom area unit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_UNITCURRENCY">
<summary>
  Looks up a localized string similar to Currency||Currency unit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_UNITCURRENCYCUSTOMTEXT">
<summary>
  Looks up a localized string similar to Custom currency unit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_UNITMONETARY">
<summary>
  Looks up a localized string similar to Monetary||Monetary unit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_UNITTIME">
<summary>
  Looks up a localized string similar to t||Time unit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_UNITTIMECUSTOMTEXT">
<summary>
  Looks up a localized string similar to Custom time unit.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_USEEXACT">
<summary>
  Looks up a localized string similar to UseExact.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_USEIBM">
<summary>
  Looks up a localized string similar to UseIBM.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_USENEWMULTISTANZA">
<summary>
  Looks up a localized string similar to UseNewMultiStanza.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_USEVARPQ">
<summary>
  Looks up a localized string similar to UseVarPQ.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_VARIABLENAME">
<summary>
  Looks up a localized string similar to VariableName.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_VBK">
<summary>
  Looks up a localized string similar to K||von Bertalanffy curvature parameter.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_VULMULT">
<summary>
  Looks up a localized string similar to v||Vulnerability.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_WEST">
<summary>
  Looks up a localized string similar to West.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_WINFINPUT">
<summary>
  Looks up a localized string similar to Wt. at inf||Weight at infinity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_WINFOUTPUT">
<summary>
  Looks up a localized string similar to Wt. at inf||Weight at infinity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_WMATWINF">
<summary>
  Looks up a localized string similar to WmatWinf|Wmat/Winf||Weight at maturity over weight at infancy.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_WTTYPE">
<summary>
  Looks up a localized string similar to WtType.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_XVELOCITY">
<summary>
  Looks up a localized string similar to X vel.||X velocity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_YVELOCITY">
<summary>
  Looks up a localized string similar to Y vel.||Y velocity.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VARIABLE_Z">
<summary>
  Looks up a localized string similar to Z|Tot. mort.|Total mortality.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreDefaults.VERSION_EXT_COMPILED">
<summary>
  Looks up a localized string similar to {0} (compiled {1}).
</summary>
</member>
<member name="T:EwECore.My.Resources.CoreMessages">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ADVECTION_ERROR">
<summary>
  Looks up a localized string similar to An error occurred running the advection computations: {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.AREA_RANGE">
<summary>
  Looks up a localized string similar to Area must be greater then zero and less than or equal to one ( &gt; 0 and &lt;= 1)..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ASCII_READ_ERROR_MISSINGFIELD">
<summary>
  Looks up a localized string similar to Failed to read ASCII file with missing header fields.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ASCII_READ_ERROR_UNKNOWNFIELD">
<summary>
  Looks up a localized string similar to Failed to read ASCII file with unknown header field {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.B_MISSING_GROUP">
<summary>
  Looks up a localized string similar to B missing for group &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.BIOACCUM_RANGE">
<summary>
  Looks up a localized string similar to BioAccum must be greater than or equal to zero..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.BIOMASS_RANGE">
<summary>
  Looks up a localized string similar to Biomass must be greater than or equal to zero..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.BIOMASSAREA_RANGE">
<summary>
  Looks up a localized string similar to BiomassArea must be greater then zero..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.COMPUTATION_ALREADY_RUNNING">
<summary>
  Looks up a localized string similar to Only one computation can run at a time..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.CORE_INIT_CRITICAL_GENERIC">
<summary>
  Looks up a localized string similar to The EwE6 core could not be initialized. The following critical error occurred: {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.CORE_INIT_CRITICAL_VALIDATORS">
<summary>
  Looks up a localized string similar to The EwE6 core could not be initialized. The following critical error occurred while creating validators: {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DATA_INVALID">
<summary>
  Looks up a localized string similar to Data validation for &apos;{0}&apos; was unsuccessful..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DATA_VALID">
<summary>
  Looks up a localized string similar to Data validation for &apos;{0}&apos; was successful..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DATA_VALIDATION">
<summary>
  Looks up a localized string similar to Data validation for &apos;{0}&apos;..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DATABASE_BACKUP_FAILED">
<summary>
  Looks up a localized string similar to Failed to make a backup copy of model to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DATABASE_BACKUP_PROMPT">
<summary>
  Looks up a localized string similar to Model &apos;{0}&apos; was last accessed by {1}  and will be updated. Do you wish to create a backup copy of this model?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DATABASE_BACKUP_SUCCESS">
<summary>
  Looks up a localized string similar to A backup copy of your model was made to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DATABASE_UPDATE_FAILED">
<summary>
  Looks up a localized string similar to Model update {0} failed.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DATABASE_UPDATE_FAILED_DETAIL">
<summary>
  Looks up a localized string similar to Model update {0} failed: {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DETIMP_RANGE">
<summary>
  Looks up a localized string similar to Imported detritus must be greater than or equal to zero..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DIETCOMP_MISSING">
<summary>
  Looks up a localized string similar to Diets for group {0} have not been entered.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DIETCOMP_NOT_SUM_ONE">
<summary>
  Looks up a localized string similar to Diet composition does not sum to one for one or more predators.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DIETCOMP_PROMPT_CORRECTTO15PERC">
<summary>
  Looks up a localized string similar to Group &apos;{0}&apos; gets {1}% of it&apos;s diet from higher TL groups. Do you want to reduce it to 15%? (Doing so will not change your input data).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DIETCOMP_PROMPT_MISSING">
<summary>
  Looks up a localized string similar to Diets for one or more groups have not been entered.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DIETCOMP_PROMPT_SUMTOONE">
<summary>
  Looks up a localized string similar to Diet for one or more groups does not sum to 1. Do you want to normalize diets to 1 for ALL predator groups?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DIETCOMP_RANGE">
<summary>
  Looks up a localized string similar to Diet Comp must be greater than or equal to zero..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DIETCOMP_SUMTOONE_PRED">
<summary>
  Looks up a localized string similar to Diet for predator &apos;{0}&apos; does not sum to 1.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DIETCOMP_VALIDATION_ERROR">
<summary>
  Looks up a localized string similar to Error during validation of &apos;DietComp&apos;. &apos;DietComp&apos; will not be valid..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DLLFACTORY_FILENOTFOUND">
<summary>
  Looks up a localized string similar to The file &apos;{0}&apos; could not be found..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DLLFACTORY_LOAD_ERROR">
<summary>
  Looks up a localized string similar to Error loading &apos;{0}&apos; from file &apos;{1}&apos;. Error: {2}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.DLLFACTORY_TYPE_NOT_FOUND">
<summary>
  Looks up a localized string similar to Component &apos;{0}&apos; could not be found in &apos;{1}&apos;..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_DIETCOMP_NOTSUMTOONE">
<summary>
  Looks up a localized string similar to DC does not sum to one for group {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_DIETCOMP_NOTSUMTOONE_GENERIC">
<summary>
  Looks up a localized string similar to Diet composition (DC) does not sum to one for one or more groups..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_ERROR_NOMODEL">
<summary>
  Looks up a localized string similar to Failed to run EcoPath, a model has not yet been initialized..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_ESTIMATED">
<summary>
  Looks up a localized string similar to The following variables were estimated:.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_ESTIMATED_BA">
<summary>
  Looks up a localized string similar to Biomass Accumulation for group &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_ESTIMATED_EE">
<summary>
  Looks up a localized string similar to EE for group &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_ESTIMATED_EMIGRATION">
<summary>
  Looks up a localized string similar to Emigration for group &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_ESTIMATED_IMMIGRATION">
<summary>
  Looks up a localized string similar to Immigration for group &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_GROUPMERGE_SUCCESS">
<summary>
  Looks up a localized string similar to Groups {0} and {1} have been merged into {2}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_GROUPSPLIT_SUCCESS">
<summary>
  Looks up a localized string similar to Groups {0} has been split into {1} and {2}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_GS_WARNING">
<summary>
  Looks up a localized string similar to WARNING: Please check your data Unassimilated Consumption (GS) cannot be greater than one. Your data has been modified!.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_DFLARGERTHANONE">
<summary>
  Looks up a localized string similar to Your model has {0} group(s) for which the Detritus fate (DF) sum to more than 1.You should go back to your input data, and make sure the DF&apos;s sum to max 1 only..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_DFLARGERTHANONE_GROUP">
<summary>
  Looks up a localized string similar to Group &apos;{0}&apos; has Detritus Fate larger than one..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_DIETIMPORTONLY">
<summary>
  Looks up a localized string similar to Your model has {0} group(s) that have a diet with imports only. Such groups are not well defined, will have trophic levels of 1, and will not show any flow on trophic level decomposition interfaces..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_DIETIMPORTONLY_GROUP">
<summary>
  Looks up a localized string similar to Group &apos;{0}&apos; has an import-only diet.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_EE">
<summary>
  Looks up a localized string similar to Computed EE value {1} invalid for group &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_EE_GENERIC">
<summary>
  Looks up a localized string similar to Your model is NOT mass-balanced!
Computed Ecotrophic Efficiencies (EE) invalid for one or more group(s)..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_INSUFFICIENTDATA">
<summary>
  Looks up a localized string similar to Insufficient data, please edit your model..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_MISSING_B_QB">
<summary>
  Looks up a localized string similar to Aborting, missing B and QB for group &apos;{0}&apos;. Please edit your data..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_MISSINGDISCARDFATE">
<summary>
  Looks up a localized string similar to Your model has {0} gear(s) for which the Discard fate is not specified. You should go back to your input data and make sure to specify what happens to the discards. Discards must be directed to a detritus group, if this  is not the case in your case, you should perhaps treat  the discards from the given fleet as landings with zero value..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_MISSINGDISCARDFATE_FLEET">
<summary>
  Looks up a localized string similar to Fleet &apos;{0}&apos; is missing Discard fate.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_PB0">
<summary>
  Looks up a localized string similar to Estimated PB = 0 for group &apos;{0}&apos;..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_PB0_GENERIC">
<summary>
  Looks up a localized string similar to The program has estimated the production / biomass (P/B) ratio for one or more groups to be 0. Please edit your data.

Note that for unexploited top-predators it may not be possible to estimate P/B (no mortality, no production needed)..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_QB0">
<summary>
  Looks up a localized string similar to Estimated QB = 0 for group &apos;{0}&apos;..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_QB0_GENERIC">
<summary>
  Looks up a localized string similar to The program has estimated the consumption / biomass (Q/B) ratio for one or more groups to be 0. Please edit your data..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_RESPLARGERTHANDETIMP">
<summary>
  Looks up a localized string similar to Respiration exceeds input to detritus for one or more group(s)..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_INVALIDMODEL_RESPLARGERTHANDETIMP_GROUP">
<summary>
  Looks up a localized string similar to Group &apos;{0}&apos; has a respiration value exceeding input to detritus..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_LOAD_FAILED">
<summary>
  Looks up a localized string similar to Ecopath model &apos;{0}&apos; failed to load. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_LOAD_SUCCESS">
<summary>
  Looks up a localized string similar to Ecopath model &apos;{0}&apos; loaded..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_LOADED">
<summary>
  Looks up a localized string similar to Loaded model &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_MERGESPLIT_ERROR_HASECOSIM">
<summary>
  Looks up a localized string similar to Cannot automatically merge or split groups for models with Ecosim scenarios.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_MERGESPLIT_ERROR_NOMODEL">
<summary>
  Looks up a localized string similar to Please load a model before attempting to merge groups.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_MISSINGPARAM_CATCH_GENERIC">
<summary>
  Looks up a localized string similar to Catch information (Landing + Discard) is missing for one of more fleets..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_MISSINGPARAM_DISCARD">
<summary>
  Looks up a localized string similar to Discard information is missing for fleet {0}, group {1}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_MISSINGPARAM_LANDING">
<summary>
  Looks up a localized string similar to Landing information is missing for fleet {0}, group {1}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_MODEL_UPDATE_FAILED">
<summary>
  Looks up a localized string similar to Model failed to update to EwE version {0}!.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_MODEL_UPDATE_SUCCESS">
<summary>
  Looks up a localized string similar to Model was updated to EwE version {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_NEGATIVE_RESPIR_WARNING">
<summary>
  Looks up a localized string similar to Respiration cannot be negative. Summary statistics for the system are suppressed. Please check parameters and rerun program..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_B">
<summary>
  Looks up a localized string similar to Biomass could not be estimated for group {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_B_FISHERIY">
<summary>
  Looks up a localized string similar to Ecopath has estimated the biomass for group {0} ({1}) to be ({2}). This is because the fishery + migration + biomass accumulation is estimated to sum to a negative value. Please edit your data, allowing e.g. for biomass accumulation for this group..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_B0_FISHERY">
<summary>
  Looks up a localized string similar to Ecopath has estimated the biomass for group {0} ({1}) to be 0. This is because the fishery + migration + biomass accumulation is estimated to sum to 0. Please edit your data, allowing e.g. for biomass accumulation for this group..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_EE">
<summary>
  Looks up a localized string similar to Ecotrophic Efficiencies (EE) could not be estimated for group {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_EE_BA">
<summary>
  Looks up a localized string similar to Estimated Biomass Accumulation (BA) is negative for group {0}, which may be related to the failure to estimate EE..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_MANYMISSING">
<summary>
  Looks up a localized string similar to The parameter estimation routine can work only with one of B, P/B, and EE unknown per group. Here, more than one of these are unknown for group &apos;{0}&apos;.{1}{1}In addition, the Q/B may be unknown for a given predator, i.e., IF: B, PB, QB and EE are known for one of its prey, and IF: all groups that prey on these two groups have known B and QB.{1}{1}Please re-edit the input parameters..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_MISSINGGENERIC">
<summary>
  Looks up a localized string similar to Ecopath failed to estimate one or more parameters..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_NOTUNIQUE">
<summary>
  Looks up a localized string similar to The generalized inverse routine is trying to estimate {0} unknown from {1} equations. The solution will not be unique. Check the estimated values carefully..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_PB">
<summary>
  Looks up a localized string similar to Production / biomass ratio (PB) could not be estimated for group {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_PRODxEE">
<summary>
  Looks up a localized string similar to Ecopath has estimated the production * EE for group {0} ({1}), to be {2}. This is less than the estimated &apos;cannibalism&apos; for this group..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PARAMESTIMATION_FAILED_QB">
<summary>
  Looks up a localized string similar to Consumption / biomass ratio (QB) could not be estimated for group {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PREDMORT_CANN">
<summary>
  Looks up a localized string similar to Your data are not consistent. In algorithm 4 your estimate of: P/Bi * EEi - Q/Bi * DCii is negative for group &apos;{0}&apos;, i.e. &apos;cannibalism&apos; exceeds the predation mortality. Do you want to have cannibalism reduced (to 20 of used production) for all groups where this problem occurs? Note: your input data will not be changed..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PROMPT_ENTER_B_BEFORE_PROCEEDING">
<summary>
  Looks up a localized string similar to Enter Biomass for all detritus groups before proceeding to Ecosim..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PROMPT_ESTIMATE_BA_FOR_B_PB_EE">
<summary>
  Looks up a localized string similar to Biomass, PB and EE for &apos;{0}&apos; are entered. Do you want to estimate biomass accumulation?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PROMPT_ESTIMATE_BA_FOR_B_PB_QB_EE">
<summary>
  Looks up a localized string similar to Biomass, PB, QB and EE for &apos;{0}&apos; are entered. Do you want to estimate biomass accumulation?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PROMPT_ESTIMATE_NETMIGRATION">
<summary>
  Looks up a localized string similar to Do you want to estimate net migration for &apos;{0}&apos;?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_PROMPT_STANZA_WHOLE_AREA">
<summary>
  Looks up a localized string similar to Multi-stanza calculations do not work correctly with fractional habitat areas. Please set all Ecopath habitat area proportions to 1 for stanza groups, and instead correct the biomass of the leading life stage.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_RESULTS_SAVED_FAILED">
<summary>
  Looks up a localized string similar to Ecopath estimates failed to save to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_RESULTS_SAVED_SUCCESS">
<summary>
  Looks up a localized string similar to Ecopath estimates saved to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_RUN_ERROR">
<summary>
  Looks up a localized string similar to Ecopath failed to run..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_RUN_ERROR_EXCEPTION">
<summary>
  Looks up a localized string similar to Ecopath failed to run. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_RUN_SUCCESS">
<summary>
  Looks up a localized string similar to Ecopath run completed..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Ecopath model &apos;{0}&apos; failed to save.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_SAVETO_FAILED">
<summary>
  Looks up a localized string similar to Ecopath model failed to save to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOPATH_SAVETO_SUCCESS">
<summary>
  Looks up a localized string similar to Ecopath model succesfully saved to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSAMPLER_BATCHRUN_ABORT_NOBALANCE">
<summary>
  Looks up a localized string similar to Baseline does not balance. Ecosampler batch run aborted.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSAMPLER_BATCHRUN_BASELINE">
<summary>
  Looks up a localized string similar to Ecosampler batch running baseline.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSAMPLER_BATCHRUN_COMPLETED">
<summary>
  Looks up a localized string similar to Ecosampler batch run completed.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSAMPLER_BATCHRUN_SAMPLE">
<summary>
  Looks up a localized string similar to Ecosampler running sample {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSAMPLER_BATCHRUN_SAMPLE_NOBALANCE">
<summary>
  Looks up a localized string similar to Ecosampler sample {0} does not balance.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSAMPLER_BATCHRUN_STARTED">
<summary>
  Looks up a localized string similar to Ecosampler batch run started.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSAMPLER_INCOMPATIPLE_PROMPT">
<summary>
  Looks up a localized string similar to Your model has changed and is not compatible anymore with {0} samples. Do you want to save your changes and lose those samples?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSEED_RESULTS_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Failed to save spatial optimization results &apos;{1}&apos; to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSEED_RESULTS_SAVE_SUCCESS">
<summary>
  Looks up a localized string similar to Spatial optimization results saved to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_ERROR_FEEDARENA">
<summary>
  Looks up a localized string similar to Feeding proportions by arenas not set properly.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_LOAD_FAILED">
<summary>
  Looks up a localized string similar to Ecosim scenario &apos;{0}&apos; failed to load. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_LOAD_SUCCESS">
<summary>
  Looks up a localized string similar to Ecosim scenario &apos;{0}&apos; loaded..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_RESPONSE_DIET">
<summary>
  Looks up a localized string similar to This group contains imported diet that will not be affected by the applied functional response..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_RESPONSE_NO_OVERLAP">
<summary>
  Looks up a localized string similar to Warning: please check your functional response and forcing data. The applied functional response does not overlap with forcing data at time step 1..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_RESULTS_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Failed to save Ecosim results &apos;{1}&apos; to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_RESULTS_SAVE_SUCCESS">
<summary>
  Looks up a localized string similar to Ecosim results saved to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_RUN_ERROR_MISSINGPREDATION">
<summary>
  Looks up a localized string similar to Ecosim total predation not accounted for one or more groups.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_RUN_ERROR_MISSINGPREDATION_DETAIL">
<summary>
  Looks up a localized string similar to Total predation on prey {0} by predator {1} is {2}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Ecosim scenario &apos;{0}&apos; failed to save. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSIM_SAVE_SUCCESS">
<summary>
  Looks up a localized string similar to Ecosim scenario &apos;{0}&apos; has been saved..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_EXPORT_ASCII_SUCCESS">
<summary>
  Looks up a localized string similar to Ecospace result .asc files have been written to {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_EXPORT_CSV_SUCCESS">
<summary>
  Looks up a localized string similar to Ecospace result .csv files have been written to {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_EXPORT_FAILED">
<summary>
  Looks up a localized string similar to Ecospace failed to save file {0}. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_GENERIC_ERROR">
<summary>
  Looks up a localized string similar to An error occurred in Ecospace. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_HABCAP_COMPUTE_ERROR">
<summary>
  Looks up a localized string similar to Ecospace failed to update capacity maps. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_INIT_ERROR">
<summary>
  Looks up a localized string similar to Ecospace will not be able to run due to an error during initialization..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_LOAD_FAILED">
<summary>
  Looks up a localized string similar to Ecospace scenario &apos;{0}&apos; failed to load. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_LOAD_SUCCESS">
<summary>
  Looks up a localized string similar to Ecospace scenario &apos;{0}&apos; loaded..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_LOWEFFPOWER">
<summary>
  Looks up a localized string similar to The following fleets have low Effort Power, effectively disabling effort distributions. Do you want to continue?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_LOWEFFPOWER_FLEET">
<summary>
  Looks up a localized string similar to Fleet {0} has a effort power of {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_LOWHABITAT_CAP">
<summary>
  Looks up a localized string similar to WARNING: The following group(s) have a low average habitat capacity. Do you want to continue?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_LOWHABITAT_CAP_GROUP">
<summary>
  Looks up a localized string similar to Group &apos;{0}&apos; average capacity per cell {1}%.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_NO_SIM_SCENARIO">
<summary>
  Looks up a localized string similar to An Ecosim and Ecospace scenario must be loaded before Ecospace can be run..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_NO_SPACE_SCENARIO">
<summary>
  Looks up a localized string similar to An Ecospace scenario must be loaded before Ecospace can be run..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_OUT_OF_MEMORY">
<summary>
  Looks up a localized string similar to Ecospace has run out of memory. Please try reducing the number of Regions and/or Timesteps..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_RUN_COMPLETED">
<summary>
  Looks up a localized string similar to Ecospace has completed a model run..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_RUN_ERROR">
<summary>
  Looks up a localized string similar to Run Ecospace Error. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_RUNNING">
<summary>
  Looks up a localized string similar to Ecospace is already running you must either stop the current run or wait for it to complete before starting another run..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Ecospace scenario &apos;{0}&apos; failed to save. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_SAVE_SUCCES">
<summary>
  Looks up a localized string similar to Ecospace scenario &apos;{0}&apos; has been saved..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_SAVED_AVERAGES_ERROR">
<summary>
  Looks up a localized string similar to Ecospace average results failed to save to {0}. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_SAVED_AVERAGES_SUCCESS">
<summary>
  Looks up a localized string similar to Ecospace average results saved to {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_SAVEMAP_FAILED">
<summary>
  Looks up a localized string similar to Ecospace failed to save result maps. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_SIM_INIT_FAILED">
<summary>
  Looks up a localized string similar to Ecospace failed to initialize Ecosim. Please try loading a different Ecosim scenario and re-running Ecospace..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_LOAD_DATES">
<summary>
  Looks up a localized string similar to Ecospace Time Series dates {0} to {1} do not overlap with current model dates. Check Model date or dates in input file..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_LOAD_EXCEPTION">
<summary>
  Looks up a localized string similar to Ecospace could not load time series data due to error: {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_LOAD_FAILED">
<summary>
  Looks up a localized string similar to Ecospace Time Series failed to load any records from the file..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_LOAD_MAP_EXTENTS">
<summary>
  Looks up a localized string similar to Ecospace Time Series map extents outside the currently load map..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_LOAD_NO_DATE">
<summary>
  Looks up a localized string similar to EwE Model date has not been set. You must set this to use Ecospace time series data..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_NRECORDS_LOADED">
<summary>
  Looks up a localized string similar to Ecospace Time Series {0} records loaded..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_OUTPUT_SET">
<summary>
  Looks up a localized string similar to Ecospace Time Series output file set..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_READ_FAIL_MESSAGE">
<summary>
  Looks up a localized string similar to Ecospace Time Series failed to read.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_READ_FAIL_REASON">
<summary>
  Looks up a localized string similar to  {0}  records because of {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_RESULTS_SAVED">
<summary>
  Looks up a localized string similar to Ecospace Time Series residuals saved to file {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOSPACE_TIMESERIES_SAVE_EXCEPTION">
<summary>
  Looks up a localized string similar to Ecospace Time Series exception saving output file: {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOTRACER_LOAD_FAILED">
<summary>
  Looks up a localized string similar to Ecotracer scenario &apos;{0}&apos; failed to load. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOTRACER_LOAD_SUCCESS">
<summary>
  Looks up a localized string similar to Ecotracerscenario &apos;{0}&apos; loaded..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOTRACER_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Ecotracer scenario &apos;{0}&apos; failed to save. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOTRACER_SAVE_PROMPT">
<summary>
  Looks up a localized string similar to Ecotracer scenario &apos;{0}&apos; has changed since the last time you saved. If you proceed these changes may be lost.\n\nYes - save changes\nNo - revert to last saved scenario\nCancel - abort this operation..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ECOTRACER_SAVE_SUCCES">
<summary>
  Looks up a localized string similar to Ecotracer scenario &apos;{0}&apos; has been saved..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.EE_CLEARED">
<summary>
  Looks up a localized string similar to EE cleared..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.EE_RANGE">
<summary>
  Looks up a localized string similar to EE must be between zero and one..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ERROR_VARIABLE_OUT_OF_RANGE">
<summary>
  Looks up a localized string similar to Unable to locate {0} at index {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.EXPORT_PROGRESS_DATASET">
<summary>
  Looks up a localized string similar to Exporting dataset {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_ABORTED">
<summary>
  Looks up a localized string similar to Fit to Time Series aborted..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_ERROR">
<summary>
  Looks up a localized string similar to An error occurred in Fit to Time Series. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_ERROR_ESTIMATION">
<summary>
  Looks up a localized string similar to Fit to Time Series estimation Error &apos;{0}&apos;, original parameter values have been restored..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_ERROR_INTERACTIONS">
<summary>
  Looks up a localized string similar to Fit to Time Series found nothing to estimate, exiting search. Sketch interactions before searching again..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_ERROR_NO_TS">
<summary>
  Looks up a localized string similar to No time series have been loaded; Fit to Time Series cannot run..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_ERROR_SENSITIVITY_SETBLOCKS">
<summary>
  Looks up a localized string similar to Sensitivity routine has not been run. The blocks can not be set..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_PRERUN_CHECK_MISSING_PARAMETERS">
<summary>
  Looks up a localized string similar to Fit to time series cannot run; some parameters have not been set correctly.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_PROMPT_CONVERGED">
<summary>
  Looks up a localized string similar to Fit to Time Series estimates have converged. Do you want to do more iterations?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_PROMPT_ITERATIONS">
<summary>
  Looks up a localized string similar to More Fit to Time Series iterations?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_SENS_PRED_ERROR">
<summary>
  Looks up a localized string similar to Fit to timeseries, sensitvity to predator search encountered an error. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_SENS_PREDPREY_ERROR">
<summary>
  Looks up a localized string similar to Fit to timeseries, sensitvity to predator prey search encountered an error. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_SENSITIVITY_CSV_SAVE_ERROR">
<summary>
  Looks up a localized string similar to Fit to time series sensitivity CSV file could not be saved to {0}. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.F2TS_SENSITIVITY_CSV_SAVE_SUCCESS">
<summary>
  Looks up a localized string similar to Fit to time series sensitivity CSV file saved to {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.FMSY_RESULTS_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Failed to save MSY results &apos;{1}&apos; to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.FMSY_RESULTS_SAVE_SUCCESS">
<summary>
  Looks up a localized string similar to Fmsy results saved to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.FMSY_STATUS_NOTFOUND">
<summary>
  Looks up a localized string similar to Fmsy not found in given F range.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.FMSY_STATUS_RUNNING">
<summary>
  Looks up a localized string similar to Running Fmsy {0}, assessing {1}....
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.FORCING_DATA_CHANGED">
<summary>
  Looks up a localized string similar to Forcing shape data has changed..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.FPS_RUN_ERROR">
<summary>
  Looks up a localized string similar to Fishing Policy Search encountered an error. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.FPS_RUN_SUCCESS">
<summary>
  Looks up a localized string similar to Fishing Policy Search run completed.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.GE_CLEARED">
<summary>
  Looks up a localized string similar to GE cleared..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.GE_RANGE">
<summary>
  Looks up a localized string similar to GE must be greater than zero and less than or equal to 1..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.GENERIC_ABORTING_EDIT_DATA">
<summary>
  Looks up a localized string similar to Aborting, please edit your data..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.GENERIC_PROMPT_ESTIMATED">
<summary>
  Looks up a localized string similar to The following variables were estimated:.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.GENERIC_SAVE_RESOLUTION">
<summary>
  Looks up a localized string similar to Try to save your model under a new name..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.GENERIC_STATUS_INITIALIZING">
<summary>
  Looks up a localized string similar to Initializing....
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.GS_CLEARED">
<summary>
  Looks up a localized string similar to GS cleared..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.GS_RANGE">
<summary>
  Looks up a localized string similar to Unassimilated consumption must be between zero and one..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.ICORE_ADD_NULL">
<summary>
  Looks up a localized string similar to Sorry, this Input or Output cannot be left empty..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_ERROR_CANNOTACCESS">
<summary>
  Looks up a localized string similar to Unable to access newly created database at location {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_ERROR_CANNOTCREATE">
<summary>
  Looks up a localized string similar to Unable to create new database at location {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_ERROR_COMMIT">
<summary>
  Looks up a localized string similar to Unable to store data for &apos;{0}&apos;, the database rejected imported values. This indicates a programming error. Please notify the EwE development team.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_ERROR_INCOMPATIBLE">
<summary>
  Looks up a localized string similar to Database {0} has version {1}, which is incompatible with this version. Use the latest version of Ecopath 5 to update the database first..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_FIX_CREATEECOSIMGROUP">
<summary>
  Looks up a localized string similar to Creating missing group {0} ({1}) for Ecosim scenario {2} with default values, please review..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_FIX_CREATEECOSPACEFLEET">
<summary>
  Looks up a localized string similar to Creating missing fleet {0} ({1}) for Ecospace scenario {2} with default values, please review..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_FIX_CREATEECOSPACEGROUP">
<summary>
  Looks up a localized string similar to Creating missing group {0} ({1}) for Ecospace scenario {2} with default values, please review..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_FIX_CREATEFISHMORTSHAPE">
<summary>
  Looks up a localized string similar to Creating missing fish mortality shape {0} for ecosim group {1}, ecosim scenario {2} with default values, please review..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_FIX_GROUPAREA">
<summary>
  Looks up a localized string similar to Group &apos;{0}&apos; area corrected to {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_FIX_GROUPUNASSIM">
<summary>
  Looks up a localized string similar to Group &apos;{0}&apos; is a producer, Unassim corrected to {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_NO_DESCRIPTION">
<summary>
  Looks up a localized string similar to No description available..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_POGRESS_DIETCOMP">
<summary>
  Looks up a localized string similar to Importing diets.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_CATCH">
<summary>
  Looks up a localized string similar to Importing Ecopath catches.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_COMPLETE">
<summary>
  Looks up a localized string similar to Import complete.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOPATHGROUPS">
<summary>
  Looks up a localized string similar to Importing Ecopath groups.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECORANGER">
<summary>
  Looks up a localized string similar to Import Ecoranger.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSIMFLEETS">
<summary>
  Looks up a localized string similar to Importing Ecosim fleets.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSIMFLEETS_AT">
<summary>
  Looks up a localized string similar to Importing Ecosim fleet {0} - {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSIMGROUPS">
<summary>
  Looks up a localized string similar to Importing Ecosim groups.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSIMGROUPS_AT">
<summary>
  Looks up a localized string similar to Importing Ecosim group {0} - {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSPACEBASEMAP">
<summary>
  Looks up a localized string similar to Importing Ecospace basemap.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSPACEFLEETS">
<summary>
  Looks up a localized string similar to Importing Ecospace fleets.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSPACEGROUPS">
<summary>
  Looks up a localized string similar to Importing Ecospace groups.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSPACEMPAS">
<summary>
  Looks up a localized string similar to Importing Ecospace marine protected areas.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSPACEREGIONS">
<summary>
  Looks up a localized string similar to Importing Ecospace regions.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOSPACESCENARIOS">
<summary>
  Looks up a localized string similar to Importing Ecospace scenarios.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOTRACER">
<summary>
  Looks up a localized string similar to Importing Ecotracer scenarios.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_ECOTRACERGROUPS">
<summary>
  Looks up a localized string similar to Importing Ecotracer groups.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_FAILED">
<summary>
  Looks up a localized string similar to Import of model {0} failed at {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_FLEET">
<summary>
  Looks up a localized string similar to Importing Ecopath fleets.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_FORCINGAPPLICATIONS">
<summary>
  Looks up a localized string similar to Importing Ecosim forcing and mediation applications.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_FORCINGMEDIATION">
<summary>
  Looks up a localized string similar to Importing Ecosim forcing and mediation shapes.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_MODEL">
<summary>
  Looks up a localized string similar to Importing model {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_PEDIGREE">
<summary>
  Looks up a localized string similar to Importing pedigree.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_QUOTES">
<summary>
  Looks up a localized string similar to Importing quotes.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_SCENARIO">
<summary>
  Looks up a localized string similar to Importing Ecosim scenarios.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_STANZA">
<summary>
  Looks up a localized string similar to Importing Multi-stanza configurations.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_STARTED">
<summary>
  Looks up a localized string similar to Import of model {0} started at {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_SUCCES">
<summary>
  Looks up a localized string similar to Import of model {0} completed succesfully at {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_TAXONOMY">
<summary>
  Looks up a localized string similar to Importing taxonomy.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROGRESS_TIMESERIES">
<summary>
  Looks up a localized string similar to Importing Ecosim time series.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_PROPRESS_ECOSPACEHABITATS">
<summary>
  Looks up a localized string similar to Importing Ecospace habitats.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_ECORANGER">
<summary>
  Looks up a localized string similar to Ecoranger is no longer supported in EwE6. Existing Ecoranger data is not imported..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_FORCINGDUPLICATE">
<summary>
  Looks up a localized string similar to Forcing shape {0} failed to import as {1}; shape defined more than once due to an internal error..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_FORCINGMULTIPLEASSIGNMENTS">
<summary>
  Looks up a localized string similar to Forcing data {0} used to drive both egg production and another function. Imported only as {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_FORCINGNOTIMPORTED">
<summary>
  Looks up a localized string similar to Forcing data {0} failed to import as {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_FORCINGTYPEMISSING">
<summary>
  Looks up a localized string similar to Unable to determine type of forcing data {0}, data not imported.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_MULTISTANZASHAPE">
<summary>
  Looks up a localized string similar to Unable to determine egg production and/or hatchery stocking data across Ecosim scenarios for stanza configuration {0}. You will need to select and re-assign this data in the EwE6 interface..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_PAIRDETAILS">
<summary>
  Looks up a localized string similar to Pair {0} not converted: {1}, {2}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_PAIRSNOTSUPPORTED">
<summary>
  Looks up a localized string similar to Ecosim pairs are no longer supported. You will need to translate one or more EwE5 pairs to an EwE6 multi-stanza configuration..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_TIMESERIESFLEET">
<summary>
  Looks up a localized string similar to Time Series {0} ({1}) not imported because fleet number {2} could not be resolved.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_TIMESERIESTYPE">
<summary>
  Looks up a localized string similar to Time Series {0} ({1}) is not imported because its type {2} is not supported..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.IMPORT_WARNING_TIMESIERIESGROUP">
<summary>
  Looks up a localized string similar to Time Series {0} ({1}) not imported because group number {2} could not be resolved.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.LOAD_ERROR_MODEL">
<summary>
  Looks up a localized string similar to Error &apos;{0}&apos; has occurred while loading Model.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MAP_INVALID_NOPP">
<summary>
  Looks up a localized string similar to Your map does not have any primary production..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MAP_INVALID_NOWATERCELLS">
<summary>
  Looks up a localized string similar to Your map does not have any water cells..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MEDIATION_ZERO_BASE">
<summary>
  Looks up a localized string similar to One or more mediation shapes cannot be used. Please edit your data..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MEDIATION_ZERO_BASE_DETAIL">
<summary>
  Looks up a localized string similar to Trophic mediation function &apos;{0}&apos; has zero value at Ecopath base..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MIGRATION_MISSING_GROUPS">
<summary>
  Looks up a localized string similar to Set monthly migration patterns for group {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MIGRATION_MISSING_MAPS">
<summary>
  Looks up a localized string similar to WARNING: Monthly migration patterns have not been set for the following group(s). Do you want to continue?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MODEL_READONLY">
<summary>
  Looks up a localized string similar to The model &apos;{0}&apos; was opened in read-only mode and cannot be saved..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MODELFRIMSIM_BA_ENDYEAR_ADJ">
<summary>
  Looks up a localized string similar to Last year for averaging BA has been changed to the last Ecosim year.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MODELFRIMSIM_BA_STARTYEAR_ADJ">
<summary>
  Looks up a localized string similar to Start year for averaging BA has been changed to the first Ecosim year.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MODELFROMSIM_GENERATED">
<summary>
  Looks up a localized string similar to Generated Ecopath models from Ecosim..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MONTECARLO_APPLY_ERROR">
<summary>
  Looks up a localized string similar to Monte Carlo failed to apply best fits. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MONTECARLO_ECOPATH_ERROR">
<summary>
  Looks up a localized string similar to An error occurred in Ecopath. Monte Carlo trials could not be run..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MONTECARLO_ECOPATH_TOOMANYMISSING">
<summary>
  Looks up a localized string similar to Monte Carlo has found too many missing parameters to run Ecopath. Check your input parameters..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MONTECARLO_ECOSIM_MISSING">
<summary>
  Looks up a localized string similar to Please load an Ecosim scenario before running Monte Carlo..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MONTECARLO_RESTORE_FAILED">
<summary>
  Looks up a localized string similar to Warning: Monte Carlo failed to set Ecopath back to its original state. You may need to close the model without saving to restore your original data..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MONTECARLO_RESULTS_SAVED_ERROR">
<summary>
  Looks up a localized string similar to Failed to save Monte Carlo results to {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MONTECARLO_RESULTS_SAVED_SUCCESS">
<summary>
  Looks up a localized string similar to Monte Carlo results saved to {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MONTECARLO_RUN_ERROR">
<summary>
  Looks up a localized string similar to Error running the Monte Carlo trials. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MONTECARLO_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Failed to save Monte Carlo data to file. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MPAOPT_ERROR">
<summary>
  Looks up a localized string similar to MPA optimization encountered an error. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MPAOPT_NODATA_RESUME">
<summary>
  Looks up a localized string similar to No seed cells selected nor MPAs set. MPA optimzation may yield unreliable results. Would you like to continue?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MPAOPT_SAVE_SUCCESS">
<summary>
  Looks up a localized string similar to MPA optimization search results saved to {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MPARND_PRERUN_CHECK_REGIONSIZE">
<summary>
  Looks up a localized string similar to One or more regions contain less than 5 cells. MPA randome search will not run.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSE_DISCARD_TIMESERIES_WARNING">
<summary>
  Looks up a localized string similar to Having time series {0} applied could give erroneous results in the Management Strategy Evalutions. Are you sure you want to continue running?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSE_FIXF_FIXESC_FAILEDVALIDATION">
<summary>
  Looks up a localized string similar to Failed to set the value. Fix F and Fixed escapement cannot both contain a value..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSE_LPSOLVER_NONOPTIMAL">
<summary>
  Looks up a localized string similar to MSE Linear Programing Solution failed to find an optimal solution for &apos;{0}&apos; time steps. Check your target fishing mortality rates to make sure you have not overly constrained your model..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSE_RUN_CALC_FMSY_ERROR">
<summary>
  Looks up a localized string similar to Management Strategy Evaluation encountered an error calculatung FMSY. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSE_RUN_CALC_MSY_ERROR">
<summary>
  Looks up a localized string similar to Management Strategy Evaluation encountered an error calculatung MSY. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSE_RUN_ERROR">
<summary>
  Looks up a localized string similar to Management Strategy Evaluation encountered an error. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSE_VALIDATION_EFFORT">
<summary>
  Looks up a localized string similar to Effort for fleet(s) &apos;{0}&apos; may need to increased for the quota regulations to have an effect..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSE_VALIDATION_FIXEDESCAPEMENT">
<summary>
  Looks up a localized string similar to Fixed escapement, fixed fishing mortalities and  have all been set for group(s) &apos;{0}&apos; only the Fixed Escapement regulations will be used..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSE_VALIDATION_QUOTAS">
<summary>
  Looks up a localized string similar to No regulatory control types have been set. Do you want to cancel the run?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSY_RESULTS_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Failed to save MSY results &apos;{1}&apos; to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSY_RESULTS_SAVE_SUCCESS">
<summary>
  Looks up a localized string similar to MSY results saved to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSY_RUN_ERROR">
<summary>
  Looks up a localized string similar to An error occurred while running MSY. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSY_RUN_FMSY_ERROR">
<summary>
  Looks up a localized string similar to An error occurred while running FMSY. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSY_STATUS_RUNNING">
<summary>
  Looks up a localized string similar to Running MSY {0}....
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.MSY_WARNING_TIMESERIES">
<summary>
  Looks up a localized string similar to MSY will not produce reliably results when there are time series loaded. It is advised to unload time series before running the MSY. Do you want to continue the MSY run?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.OUTPUT_DIRECTORY_MISSING">
<summary>
  Looks up a localized string similar to Output directory does not exist..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.OUTPUT_NOT_EDITABLE">
<summary>
  Looks up a localized string similar to Output data are not editable..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PB_CLEARED">
<summary>
  Looks up a localized string similar to PB cleared.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PB_RANGE">
<summary>
  Looks up a localized string similar to PB must be greater than zero..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PEDIGREE_OUTOFRANGE">
<summary>
  Looks up a localized string similar to The pedigree value is out of range.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PLUGIN_PROMPT_DISABLE">
<summary>
  Looks up a localized string similar to The following error occurred in a &apos;{0}&apos;{1}{1}Do you wish to disable this plug-in next time EwE is started?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PLUGIN_SAVE_PROMPT">
<summary>
  Looks up a localized string similar to One or more plug-ins contain changes that have not been saved. If you proceed these changes may be lost.\n\nYes - save changes\nNo - possibly loose changes\nCancel - abort this operation..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PROMPT_DISCARD_CHANGES">
<summary>
  Looks up a localized string similar to Your model has changed but the database is read-only. If you continue your changes may be lost. Do you wish to proceed?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PROMPT_SAVE_CHANGES">
<summary>
  Looks up a localized string similar to Model data has changed since the last time you saved. Do you wish to save these changes?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PROMPT_SAVE_CHANGES_DETAILED">
<summary>
  Looks up a localized string similar to Unsaved changes in {0} will be lost if you proceed. Do you wish to save these changes?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PSD_ERROR_WEIGHTCLASSES">
<summary>
  Looks up a localized string similar to The PSD estimation routine can work only when groups fall into at least two weight classes. Please redefine the weight range by adjusting the number of weight classes and/or the lowest weight class..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PSD_MISSING_INPUT">
<summary>
  Looks up a localized string similar to The PSD estimation routine can work only with either &apos;L at infinity&apos; or &apos;W at infinity&apos; as unknown per group. &apos;K in VBGF&apos; must be known for each group.  Here, one or more of these are unknown:.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PSD_REQ_K_VBGF">
<summary>
  Looks up a localized string similar to Required &apos;K in VBGF&apos; missing for group {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PSD_REQ_LW">
<summary>
  Looks up a localized string similar to Required &apos;L at infinity&apos; or &apos;W at infinity&apos; missing for group {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PSD_RUN_ERROR">
<summary>
  Looks up a localized string similar to Particle Size Distribution failed to run..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.PSD_RUN_SUCCESS">
<summary>
  Looks up a localized string similar to Particle Size Distribution run completed..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.QB_CLEARED">
<summary>
  Looks up a localized string similar to QB cleared..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.QB_MISSING_GROUP">
<summary>
  Looks up a localized string similar to Q/B missing for group &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.QB_RANGE">
<summary>
  Looks up a localized string similar to QB must be greater then zero..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.RELOAD_ECOSPACE">
<summary>
  Looks up a localized string similar to You must re-load Ecospace for your changes to take affect..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SAMPLES_IMPORT_ERROR_INCOMPATIBLE">
<summary>
  Looks up a localized string similar to Model &apos;{0}&apos; is incompatible, and cannot be used to import samples from.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SAMPLES_IMPORT_ERROR_NOSAMPLES">
<summary>
  Looks up a localized string similar to Model &apos;{0}&apos; does not contain any samples.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SAMPLES_IMPORT_SUCCESS">
<summary>
  Looks up a localized string similar to {0} sample(s) imported.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SCENARIO_DELETE_LOADED">
<summary>
  Looks up a localized string similar to You cannot delete a loaded scenario..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SHAPE_IMPORT_DETAIL">
<summary>
  Looks up a localized string similar to Shape {0} imported.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SHAPE_IMPORT_FAILED">
<summary>
  Looks up a localized string similar to Failed to import shapes of type {0}, please check the data..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SHAPE_IMPORT_SUCCESS">
<summary>
  Looks up a localized string similar to Shapes of type {0} imported successfully.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_LOAD_ERROR_DETAIL">
<summary>
  Looks up a localized string similar to Unable to load plug-in &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_LOAD_ERROR_GENERIC">
<summary>
  Looks up a localized string similar to Failed to reload one or more external spatial-temporal data connections. Are you missing a required plug-in?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_MISSINGDATA">
<summary>
  Looks up a localized string similar to Some external spatial-temporal data connections will not be able to access their data. Do you want to continue?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_MISSINGDATA_DETAIL">
<summary>
  Looks up a localized string similar to Data connection {0} cannot locate its data.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_POP_FAILED_LOAD">
<summary>
  Looks up a localized string similar to Expected data was not read or converted correctly for layer {0}, time {1}, ext({2},{3}) to ({4},{5}), cell size {6}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_POP_FAILED_LOCK">
<summary>
  Looks up a localized string similar to Expected data could not be accessed for layer {0}, time {1}, ext({2},{3}) to ({4},{5}), cell size {6}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_RUN_ISSUES">
<summary>
  Looks up a localized string similar to Ecospace experienced problems with external spatial temporal data. See the spatial log file for details.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_SAVE_ERROR">
<summary>
  Looks up a localized string similar to Failed to save data set(s) to {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_SAVE_EXCEPTION">
<summary>
  Looks up a localized string similar to An error occurred while saving external data. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_SAVE_SUCCESS">
<summary>
  Looks up a localized string similar to {0} data set(s) successfully exported to {1}. This folder is ready to be transferred to another computer.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.SPATIALTEMPORAL_TOOMANYTIMESTEPS">
<summary>
  Looks up a localized string similar to Ecospace is set to run with more than twelve time steps per year, while external data can only be delivered for the first day of a month. Your model may not be able to obtain the correct data for every time step. Do you want to continue?.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_APPLY_DATAERROR">
<summary>
  Looks up a localized string similar to A critical data error has occurred while applying new stanza data: {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_CALCULATEPARMS_DATAERROR">
<summary>
  Looks up a localized string similar to A critical data error has occurred while calculating stanza parameters: {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_CALCULATEPARMS_TOOMANYMISSING">
<summary>
  Looks up a localized string similar to Missing parameters B, CB or Mortality for stanza group {0}. Stanza calculation can not be done..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_CANCEL_DATAERROR">
<summary>
  Looks up a localized string similar to A critical data error has occurred while rolling back stanza data: {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_KinVGBF_MISSING">
<summary>
  Looks up a localized string similar to Missing K of VBGF for multi stanza group &apos;{0}&apos;..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_LEADING_ADJUSTED">
<summary>
  Looks up a localized string similar to Leading B and/or CB groups have been adjusted for one or more multi-stanza groups, please validate..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_LEADING_MISSING">
<summary>
  Looks up a localized string similar to Leading group not specified for &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_LEADINGB_ADJUSTED">
<summary>
  Looks up a localized string similar to Leading B adjusted for stanza {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_LEADINGCB_ADJUSTED">
<summary>
  Looks up a localized string similar to Leading CB adjusted for stanza {0}..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STANZA_MORT_MISSING">
<summary>
  Looks up a localized string similar to Missing mortality (Z) for &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_DATABASE_UPDATE">
<summary>
  Looks up a localized string similar to Executing database update {0}: &apos;{1}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_EXCEPTION">
<summary>
  Looks up a localized string similar to An internal error occurred. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_INDEXING_DATASET">
<summary>
  Looks up a localized string similar to Indexing external data &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_PLUGIN_LOADED">
<summary>
  Looks up a localized string similar to Plug-in {0} loaded.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_PLUGIN_SANDBOXED">
<summary>
  Looks up a localized string similar to Plug-in {0} sandboxed.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_PLUGIN_UNLOADED">
<summary>
  Looks up a localized string similar to Plug-in {0} unloaded.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_PLUGIN_USERDISABLED">
<summary>
  Looks up a localized string similar to Plug-in {0} disabled from loading via user settings.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_SAVING_CHANGES">
<summary>
  Looks up a localized string similar to Saving changes, please wait....
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_SPATIALTEMPORAL_ADAPTERROR">
<summary>
  Looks up a localized string similar to Failed to update cell({0}, {1}) with value {2}. {3}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_SPATIALTEMPORAL_APPLIED">
<summary>
  Looks up a localized string similar to Applied {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_SPATIALTEMPORAL_LOADING">
<summary>
  Looks up a localized string similar to Accessing external data into {0} ({1}) at step {2} ({3:yyyy/MM}).
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_SPATIALTEMPORAL_SAVED">
<summary>
  Looks up a localized string similar to Spatial operations log saved to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.STATUS_SPATIALTERMPORAL_CALCULATING">
<summary>
  Looks up a localized string similar to Calculating scaling factor for &apos;{0}&apos; using data set &apos;{1}&apos;, converter &apos;{2}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_CVFORMAT">
<summary>
  Looks up a localized string similar to One or more cv values cannot be read.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_CVVALUEMISSING">
<summary>
  Looks up a localized string similar to CV value(s) missing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_GROUP_NOTFISHED">
<summary>
  Looks up a localized string similar to Group &apos;{0}&apos; is not fished.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_IDENTICALSEPARATORS">
<summary>
  Looks up a localized string similar to Decimal and column separator cannot be the same..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_INVALIDFLEET">
<summary>
  Looks up a localized string similar to Invalid fleet number {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_INVALIDGROUP">
<summary>
  Looks up a localized string similar to Invalid group number {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_LINEMISSING">
<summary>
  Looks up a localized string similar to Data row expected.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_MISSING">
<summary>
  Looks up a localized string similar to Data row for {0} missing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_POOLFORMAT">
<summary>
  Looks up a localized string similar to One or more pool code values cannot be read.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_POOLLINEMISSING">
<summary>
  Looks up a localized string similar to Header &apos;{0}&apos; not recognized, expected &apos;pool&apos;, &apos;group&apos; or &apos;fleet&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_POOLVALUEMISSING">
<summary>
  Looks up a localized string similar to Pool code value missing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_TOOMANYWEIGHTS">
<summary>
  Looks up a localized string similar to Cannot specify both CV and Weight.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_TYPEFORMAT">
<summary>
  Looks up a localized string similar to One or more type code values cannot be read.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_TYPELINEMISSING">
<summary>
  Looks up a localized string similar to Header &apos;{0}&apos; not recognized, expected &apos;type&apos;, &apos;code&apos; or &apos;dat type&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_TYPEVALUEMISSING">
<summary>
  Looks up a localized string similar to Type code value missing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_VALUEFORMAT">
<summary>
  Looks up a localized string similar to One or more values cannot be read.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_VALUEMISSING">
<summary>
  Looks up a localized string similar to Value(s) missing for row {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_VALUENEGATIVE">
<summary>
  Looks up a localized string similar to Value cannot be negative.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_WEIGHTFORMAT">
<summary>
  Looks up a localized string similar to One or more weight values cannot be read.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_ERROR_WEIGHTVALUEMISSING">
<summary>
  Looks up a localized string similar to Weight value missing.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_EXPORT_FAILED">
<summary>
  Looks up a localized string similar to Failed to export time series &apos;{0}&apos; to &apos;{1}&apos;: {2}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_EXPORT_SUCCESS">
<summary>
  Looks up a localized string similar to Time series dataset &apos;{0}&apos; exported to &apos;{1}&apos;..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_LOAD_FAILED">
<summary>
  Looks up a localized string similar to Time Series dataset &apos;{0}&apos; failed to load. {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_LOAD_SUCCESS">
<summary>
  Looks up a localized string similar to Time Series dataset &apos;{0}&apos; loaded..
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_UNLOAD_FAILED">
<summary>
  Looks up a localized string similar to Time Series failed to unload. {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TIMESERIES_UNLOAD_SUCCESS">
<summary>
  Looks up a localized string similar to Time Series unloaded successfully.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TRACER_RESULTS_SAVE_FAILED">
<summary>
  Looks up a localized string similar to Failed to save contaminant tracer results &apos;{1}&apos; to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.TRACER_RESULTS_SAVE_SUCCESS">
<summary>
  Looks up a localized string similar to Contaminant tracer results saved to &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.UPDATE_600007_ERROR">
<summary>
  Looks up a localized string similar to MPA fishery settings may contain errors in Ecospace scenario(s) {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.UPDATE_NEED_REVIEW">
<summary>
  Looks up a localized string similar to The update process identified some possible problems that you should review!.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.UPDATE_RUNNING">
<summary>
  Looks up a localized string similar to Applying model update {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_NOT_FOUND">
<summary>
  Looks up a localized string similar to Unable to find variable for &apos;{0}&apos;.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_NOT_SET">
<summary>
  Looks up a localized string similar to Unable to set variable &apos;{0}&apos;, Error: {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_ADJUSTED">
<summary>
  Looks up a localized string similar to {0} has been corrected.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_CLEARED">
<summary>
  Looks up a localized string similar to {0} cleared.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_FAILED">
<summary>
  Looks up a localized string similar to {0} cannot be {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_FAILED_DETAIL">
<summary>
  Looks up a localized string similar to {0} cannot be {1}. {2}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_FAILED_EVEN">
<summary>
  Looks up a localized string similar to {0} must be even, and cannot be {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_FAILED_MUSTBEX">
<summary>
  Looks up a localized string similar to {0} must be {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_FAILED_ODD">
<summary>
  Looks up a localized string similar to {0} must be odd, and cannot be {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_FAILED_OUTOFRANGE">
<summary>
  Looks up a localized string similar to Value is out of range.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_FAILED_TOOLONG">
<summary>
  Looks up a localized string similar to Text cannot exceed {0} characters.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_PASSED">
<summary>
  Looks up a localized string similar to {0} set to {1}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VARIABLE_VALIDATION_RSTANZA">
<summary>
  Looks up a localized string similar to The target stanza has driven recruitment. Unable to set variable {0}.
</summary>
</member>
<member name="P:EwECore.My.Resources.CoreMessages.VULNERABILITIES_PROMPT_RESET">
<summary>
  Looks up a localized string similar to Reset vulnerabilities to a default value of {0}?.
</summary>
</member>
<member name="T:EwECore.Ecospace.Advection.cAdvection">
 -----------------------------------------------------------------------
 <summary>
 Advection patterns calculator class.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.Ecospace.Advection.cAdvection.m_core">
 <summary>Core to operate on.</summary>
</member>
<member name="F:EwECore.Ecospace.Advection.cAdvection.m_ecospace">
 <summary>Ecospace model to work with.</summary>
</member>
<member name="F:EwECore.Ecospace.Advection.cAdvection.m_data">
 <summary>Ecospace data structures to operate on.</summary>
</member>
<member name="F:EwECore.Ecospace.Advection.cAdvection.m_RunStartedDelegate">
 <summary>Delegate to notify that calculations have started.</summary>
</member>
<member name="F:EwECore.Ecospace.Advection.cAdvection.m_RunProgressDelegate">
 <summary>Delegate to notify that calculations have progressed through another iteration.</summary>
</member>
<member name="F:EwECore.Ecospace.Advection.cAdvection.m_RunCompletedDelegate">
 <summary>Delegate to notify that calculations have ended.</summary>
</member>
<member name="F:EwECore.Ecospace.Advection.cAdvection.m_iter">
 <summary>Iteration counter.</summary>
</member>
<member name="F:EwECore.Ecospace.Advection.cAdvection.m_bInterrupted">
 <summary>Iteration interrupt flag.</summary>
</member>
<member name="F:EwECore.Ecospace.Advection.cAdvection.m_bBadFlow">
 <summary>Iteration results quality flag.</summary>
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvection.Iteration">
 -------------------------------------------------------------------
 <summary>
 Get the current iteration that has been computed.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvection.Interrupted">
 -------------------------------------------------------------------
 <summary>
 Get/set whether the calculations should be interrupted.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvection.BadFlow">
 -------------------------------------------------------------------
 <summary>
 Get whether the calculations produced bad flows.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvection.RunStartedCallBack">
 -------------------------------------------------------------------
 <summary>
 Get/set the delegate to call when a computations have started.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvection.ProgressCallback">
 -------------------------------------------------------------------
 <summary>
 Get/set the delegate to call when a new iteration has been calculated.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvection.RunCompletedCallback">
 -------------------------------------------------------------------
 <summary>
 Get/set the delegate to call when a computations have completed.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvection.Revert">
 -------------------------------------------------------------------
 <summary>
 Revert XVel and YVel to their initial state.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvection.SetVtot(System.Single[0:,0:],System.Single[0:,0:],System.Single,System.Single)">
 -------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="XvTot"></param>
 <param name="YvTot"></param>
 <param name="Corio"></param>
 <param name="Hstress"></param>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Ecospace.Advection.cAdvectionManager">
 -----------------------------------------------------------------------
 <summary>
 Manager for user interfaces to interact with the Ecospace Advection
 calculations.
 </summary>
 <remarks>
 <para>Remote processes can <see cref="M:EwECore.Ecospace.Advection.cAdvectionManager.Connect(EwECore.Ecospace.Advection.cAdvectionManager.ComputationStartedDelegate,EwECore.Ecospace.Advection.cAdvectionManager.ComputationCompletedDelegate,EwECore.Ecospace.Advection.cAdvectionManager.ComputationProgressDelegate)">connect</see>
 to this class, providing three delegates to track the progress of advection calculations:
 <list type="bullet">
 <item><description><see cref="T:EwECore.Ecospace.Advection.cAdvectionManager.ComputationStartedDelegate">ComputationStartedDelegate</see></description></item>
 <item><description><see cref="T:EwECore.Ecospace.Advection.cAdvectionManager.ComputationProgressDelegate">ComputationProgressDelegate</see></description></item>
 <item><description><see cref="T:EwECore.Ecospace.Advection.cAdvectionManager.ComputationCompletedDelegate">ComputationCompletedDelegate</see></description></item>
 </list>
 Make sure to properly <see cref="M:EwECore.Ecospace.Advection.cAdvectionManager.Disconnect">Disconnect</see>
 from the manager when it is no longer needed.</para>
 <para>Any remote process can parameterize the advection calculations
 via <see cref="P:EwECore.Ecospace.Advection.cAdvectionManager.ModelParameters">ModelParameters</see>. The
 computations use a series of Ecospace layers for input, please see the
 internals of <see cref="T:EwECore.Ecospace.Advection.cAdvection">cAdvection</see> for details.</para>
 <para>Advection computations are started via <see cref="M:EwECore.Ecospace.Advection.cAdvectionManager.RunPhysicsModel">Run</see>.
 Computed results are exposed by the Ecospace <see cref="T:EwECore.cEcospaceLayerAdvection">advection layer</see>,
 which can be obtained via <see cref="P:EwECore.cEcospaceBasemap.LayerAdvection">cEcospaceBasemap.LayerAdvection</see>.
 </para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.Ecospace.Advection.cAdvectionManager.ComputationStartedDelegate">
 -------------------------------------------------------------------
 <summary>Delegate that will be called when advection computations are about to start.</summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Ecospace.Advection.cAdvectionManager.ComputationProgressDelegate">
 -------------------------------------------------------------------
 <summary>Delegate that will be called at the end of each advection iteration.</summary>
 <param name="iIteration">The number of the iteration.</param>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Ecospace.Advection.cAdvectionManager.ComputationCompletedDelegate">
 -------------------------------------------------------------------
 <summary>Delegate that will be called when advection computations have finished.</summary>
 <param name="iIteration">The number of completed iterations.</param>
 <param name="bInterrupted">Flag stating whether the iterations were interrupted by the user.</param>
 <param name="bBadFlow">Flag stating whether the computed flow was considered 'bad'.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvectionManager.#ctor">
 -------------------------------------------------------------------
 <summary>
 Hidden constructor; the manager should be created only once by the 
 EwE core.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvectionManager.Connect(EwECore.Ecospace.Advection.cAdvectionManager.ComputationStartedDelegate,EwECore.Ecospace.Advection.cAdvectionManager.ComputationCompletedDelegate,EwECore.Ecospace.Advection.cAdvectionManager.ComputationProgressDelegate)">
 -------------------------------------------------------------------
 <summary>
 Connect to the Advection manager.
 </summary>
 <param name="ComputationStartedCallBack">Delegate that will be called when 
 advection computations are <see cref="T:EwECore.Ecospace.Advection.cAdvectionManager.ComputationStartedDelegate">about to start</see>.</param>
 <param name="ComputationCompletedBack">Delegate that will be called at the
 end of <see cref="T:EwECore.Ecospace.Advection.cAdvectionManager.ComputationProgressDelegate">each iteration</see> of 
 advection computations.</param>
 <param name="ComputationProgressCallBack">Delegate that will be called when 
 advection computations <see cref="T:EwECore.Ecospace.Advection.cAdvectionManager.ComputationCompletedDelegate">have completed</see>.</param>
 <remarks>Make sure to properly <see cref="M:EwECore.Ecospace.Advection.cAdvectionManager.Disconnect">Disconnect</see>
 when this manager is no longer needed.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvectionManager.Disconnect">
 -------------------------------------------------------------------
 <summary>
 Disconnect from the Advection manager previously connected via
 <see cref="M:EwECore.Ecospace.Advection.cAdvectionManager.Connect(EwECore.Ecospace.Advection.cAdvectionManager.ComputationStartedDelegate,EwECore.Ecospace.Advection.cAdvectionManager.ComputationCompletedDelegate,EwECore.Ecospace.Advection.cAdvectionManager.ComputationProgressDelegate)">Connect</see>.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvectionManager.Init(EwECore.cCore,EwECore.cEcoSpace)">
 -------------------------------------------------------------------
 <summary>
 Initialize the manager for operation.
 </summary>
 <param name="theCore">Core instance to operate upon.</param>
 <param name="theEcospace">Ecospace instance to operate upon.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvectionManager.Load">
 -------------------------------------------------------------------
 <summary>
 Load data into existing interface objects
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvectionManager.Update">
 -------------------------------------------------------------------
 <summary>
 Update the underlying data with values from the interface
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvectionManager.Clear">
 -------------------------------------------------------------------
 <summary>
 Clear the manager data, but leaves the manager ready for future use.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvectionManager.ModelParameters">
 -------------------------------------------------------------------
 <summary>
 Get configurable advection parameters.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvectionManager.Iteration">
 -------------------------------------------------------------------
 <summary>
 Count of the Advection calculations run.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvectionManager.RunPhysicsModel">
 <summary>
 Overloaded version to run the PhysicsModel on a single thread
 </summary>
 <remarks></remarks>
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvectionManager.DataType">
 -------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.DataType"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvectionManager.CoreComponent">
 -------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.CoreComponent"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvectionManager.DBID">
 -------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.DBID"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecospace.Advection.cAdvectionManager.GetID">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.ICoreInterface.GetID"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvectionManager.Index">
 -------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.Index"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecospace.Advection.cAdvectionManager.Name">
 -------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.Name"/>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Ecospace.Advection.cAdvectionParameters">
 -----------------------------------------------------------------------
 <summary>
 Inputs for Ecospace Advection calculations.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.Auxiliary.cAuxiliaryData">
 =======================================================================
 <summary>
 <para>
 This class represents all Auxiliary data that can be associated with
 any value in the EwECore or an EwE user interface. This data is loose-typed;
 each core and user interface value that requires Auxiliary data must define
 a unique ID via which associated Auxillary data is stored and retreived.
 </para>
 <para>
 When associated with <see cref="T:EwECore.ICoreInterface">ICoreInterface</see>
 -derived objects, cAuxillaryData offers the ability to maintain a
 <see cref="P:EwECore.ICoreInterface.DataType">data type</see> and 
 <see cref="P:EwECore.ICoreInterface.DBID">database ID</see> pair to uniquely
 identify the object instance this data is associated with.
 </para>
 </summary>
 =======================================================================
</member>
<member name="F:EwECore.Auxiliary.cAuxiliaryData.m_strRemark">
 <summary>Remark text for this data.</summary>
</member>
<member name="F:EwECore.Auxiliary.cAuxiliaryData.m_visualstyle">
 <summary>Visual style for this data.</summary>
</member>
<member name="M:EwECore.Auxiliary.cAuxiliaryData.#ctor(EwECore.cCore,System.String)">
 -------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of cAuxiliaryData.
 </summary>
 <param name="core"></param>
 <param name="strValueID">Unique ID to assign to this cAuxillaryData instance.</param>
 <remarks>
 <para>This constructor should be used when defining cAuxilaryData for derived 
 values and values from objects that do not originate from the EwE core.</para>
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Auxiliary.cAuxiliaryData.#ctor(EwECore.cCore,EwECore.cValueID)">
 -------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of cAuxiliaryData that is soft-linked
 to an <see cref="T:EwECore.ICoreInterface">ICoreInterface</see>-derived object. 
 </summary>
 <param name="core"></param>
 <param name="key"></param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.AllowValidation">
 -------------------------------------------------------------------
 <summary>
 Get/set whether this object is allowed to report data changes to the core.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.Key">
 -------------------------------------------------------------------
 <summary>
 Get the key for this data.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.ID">
 -------------------------------------------------------------------
 <summary>
 Get the unique ID assigned to this data.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.Remark">
 -------------------------------------------------------------------
 <summary>
 Get or set the remark text for this data.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.VisualStyle">
 -------------------------------------------------------------------
 <summary>
 Get or set the visual style for this data.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.Settings">
 -------------------------------------------------------------------
 <summary>
 Get or set settings for this data.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.IsEmpty">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an instance holds any data.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Auxiliary.cAuxiliaryData.Update">
 -----------------------------------------------------------------------
 <summary>
 Update auxillary data changes to the core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.CoreComponent">
 -----------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.CoreComponent" />
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.DataType">
 -----------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.CoreComponent" />
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.DBID">
 -----------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.CoreComponent" />
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Auxiliary.cAuxiliaryData.GetID">
 -----------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.CoreComponent" />
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.Index">
 -----------------------------------------------------------------------
 <summary>
 Get/set the ordinal number in the core storage structures for a core 
 data entity.
 </summary>
 <remarks>
 Since AuxillaryData are indexed via HashTables this property is not used.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cAuxiliaryData.Name">
 -----------------------------------------------------------------------
 <inheritdoc cref="P:EwECore.ICoreInterface.Name" />
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.Auxiliary.cVisualStyle.eVisualStyleTypes">
 -----------------------------------------------------------------------
 <summary>
 Helper class, stores custom visualization information for data entities.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.Auxiliary.cVisualStyle.m_gradientID">
 <summary>To identify stock gradients</summary>
</member>
<member name="M:EwECore.Auxiliary.cVisualStyle.#ctor">
 -----------------------------------------------------------------------
 <summary>
 Default constructor.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Auxiliary.cVisualStyle.Clone">
 -----------------------------------------------------------------------
 <summary>
 Create a clone of a Visual Style instance.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.ForeColour">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:System.Drawing.Color">foreground colour</see> for a visual style, if any.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.BackColour">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:System.Drawing.Color">background colour</see> for a visual style, if any.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.Image">
 -----------------------------------------------------------------------
 <summary>
 Get/set the image for a visual style, if any.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.HatchStyle">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="P:EwECore.Auxiliary.cVisualStyle.HatchStyle">hatch style</see> for a visual style, if any.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.FontName">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="P:System.Drawing.Font.Name">font name</see> for a visual style, if any.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.FontSize">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="P:System.Drawing.Font.Size">font size</see> for a visual style, if any.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.FontStyle">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="P:System.Drawing.Font.Style">font style</see> for a visual style, if any.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.ColorRampBreaks">
 -----------------------------------------------------------------------
 <summary>
 Get/set the break values for a gradient.
 </summary>
 <remarks>
 The number of gradient breaks should match the number of <see cref="P:EwECore.Auxiliary.cVisualStyle.ColorRampColors">
 gradient colours</see>.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.ColorRampColors">
 -----------------------------------------------------------------------
 <summary>
 Get/set the color values for a gradient.
 </summary>
 <remarks>
 The number of gradient colours should match the number of <see cref="P:EwECore.Auxiliary.cVisualStyle.ColorRampBreaks">
 gradient breaks</see>.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.ColorRampID">
 -----------------------------------------------------------------------
 <summary>
 Get/set the EwE stock gradient ID, where 0 is the standard EwE gradient.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.ColorRampName">
 -----------------------------------------------------------------------
 <summary>
 Get/set the EwE gradient name.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Auxiliary.cVisualStyle.Equals(System.Object)">
 -----------------------------------------------------------------------
 <summary>
 States whether a style equals another.
 </summary>
 <param name="obj">The visual style to compare to.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Auxiliary.cVisualStyle.Container">
 -----------------------------------------------------------------------
 <summary>
 Get/set the Auxillary data that contains this visual style.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Auxiliary.cVisualStyle.Update">
 -----------------------------------------------------------------------
 <summary>
 Update visual style content change to the core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.Auxiliary.cVisualStyleReader">
 ===========================================================================
 <summary>
 Helper class for serializing a visual style to text.
 </summary>
 ===========================================================================
</member>
<member name="T:EwECore.cEcotracerGroupInput">
 ---------------------------------------------------------------------------
 <summary>
 
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcotracerGroupOutput.Dispose">
 <inheritdoc cref="M:EwECore.cCoreInputOutputBase.Dispose"/>
</member>
<member name="M:EwECore.cEcotracerGroupOutput.Clear">
 <inheritdoc cref="M:EwECore.cCoreInputOutputBase.Clear"/>
</member>
<member name="T:EwECore.cEcotracerModelParameters">
 ---------------------------------------------------------------------------
 <summary>
 
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcotracerModelParameters.ConForceNumber">
 <summary>
 Concentration forcing function number
 </summary>
</member>
<member name="T:EwECore.cEcotracerResultWriter">
 <summary>
 Ecostracer result writer.
 </summary>
</member>
<member name="M:EwECore.cEcotracerResultWriter.OpenWriter(System.String)">
 -------------------------------------------------------------------
 <summary>
 Open a CSV file writer.
 </summary>
 <param name="strFile">File name to open the writer for.</param>
 <returns>The writer, or nothing if an error occurred.</returns>
 <remarks>Close the writer with <see cref="M:EwECore.cEcotracerResultWriter.CloseWriter(System.IO.StreamWriter,System.String)"/>.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcotracerResultWriter.CloseWriter(System.IO.StreamWriter,System.String)">
 -------------------------------------------------------------------
 <summary>
 Close a CSV file writer.
 </summary>
 <param name="sw">The writer to close.</param>
 <param name="strPath ">The path to the file of the writer.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcotracerResultWriter.WriteHeader(System.IO.StreamWriter,System.Boolean,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Write CSV header information.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcotracerResultWriter.SendErrorMessage(System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Message to use to report an error.
 </summary>
 <param name="strPath">Output file name.</param>
 <param name="strReason">Reason of failure, most likely the text obtained from an exception.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcotracerResultWriter.SendSuccessMessage(System.String)">
 -------------------------------------------------------------------
 <summary>
 Message to use to report a succes.
 </summary>
 <param name="strPath">Output file name.</param>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcotracerScenario">
 ---------------------------------------------------------------------------
 <summary>
 
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cContaminantTracerDataStructures">
 <summary>
 Public variables need by the <see cref="T:EwECore.cContaminantTracer">contaminant tracing model</see>. 
 </summary>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.cdecay">
 <summary>
 Decay rate per year
 </summary>
 <remarks>
 The zero element holds the Enviroment value 
 1 to ngroups is for the groups
 </remarks>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.Czero">
 <summary>
 Initial concentration of contaminants in t/km2
 </summary>
 <remarks>
 The zero element holds the Environment value 
 1 to ngroups is for the groups
 </remarks>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.Cinflow">
 <summary>
 Base inflow rate to environment t/km2/year in Zero element
 </summary>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.Cenv">
 <summary>
 Absorption rate t/t/t/year (concentration in prey/consumption/year ???)
 </summary>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.Cimmig">
 <summary>
 Concentration in immigrating groups t/t
 </summary>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.CoutFlow">
 <summary>
 Volume exchange loss rate zero element for environment
 </summary>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.CassimProp">
 <summary>
 Pool excretion rate.
 </summary>
 <remarks>
 <para>C.J.Walters, per email 25Nov2007:</para>
 <para>
 One way to improve ecotracer would be to add a pool-specific instantaneous
 excretion rate, with the excretion flow going back into the 0 (environment)
 pool. Such flows should be very low for lipophilic compounds, close to the
 metabolic rate for compounds that are lost in proportion to routine tissue
 metabolism (eg conversion of carbon 14 organic form to c14-02).
 </para>
 <para>Villy, per email 7Jun2016:</para>
 <para>
 CexcretionRate is renamed in the database to: CassimProp, (so existing 
 models don’t need to be changed).
 </para>
 </remarks>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.CmetabolismRate">
 <summary>
 Added cMetabolismRate (unit: per year)
 </summary>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.TracePlotCB">
 <summary>
 Plot contr/biomass
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.TracerConc">
 <summary>Results over time (group x time step)</summary>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.TracerConcByRegion">
 <summary>Concentration over time by region (region x group x time).</summary>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.TracerCBRegion">
 <summary>Concentration over biomass (region x group x time).</summary>
</member>
<member name="F:EwECore.cContaminantTracerDataStructures.ConcMax">
 <summary>Max concentration of contaminant at the current time step by group</summary>
</member>
<member name="P:EwECore.cContaminantTracerDataStructures.EcoSimConSimOn">
 <summary>Ecosim tracer enabled state flag.</summary>
</member>
<member name="P:EwECore.cContaminantTracerDataStructures.EcoSpaceConSimOn">
 <summary>Ecospace tracer enabled state flag.</summary>
</member>
<member name="T:EwECore.cContaminantTracer">
 <summary>
 Contaminant tracing model.
 </summary>
</member>
<member name="F:EwECore.cContaminantTracer.ConKtrophic">
 <summary>
 Flow rate of biomass to pred from prey for each spatial unit set in Ecosim.Derivt and SpaceSolver.DerivtRed (eaten / biomass(iPrey))
 </summary>
 <remarks>[biomass consumed by pred]/[biomass of prey]</remarks>
</member>
<member name="F:EwECore.cContaminantTracer.ConKdet">
 <summary>
 Flow rate of detritus from a living group to a detrius group by a fishing fleet
 ConKdet(iLivingGroup,iDetritusGroup,iFleet)
 </summary>
 <remarks>
 see <see>eEcosim.SimDetritus</see> for how this is populated
 [sum of discarded detritus from group for fleet]/[biomass of group]
 </remarks>
</member>
<member name="F:EwECore.cContaminantTracer.ConcTr">
 <summary>
 Concentration of contaminants at each time step
 </summary>
 <remarks>
 updated in Cupdate() for each time step in Ecosim. 
 In Ecospace this will remain constant based on the value set by Ecoism.Derivt() during initialzation of Ecospace.
  </remarks>
</member>
<member name="F:EwECore.cContaminantTracer.loss">
 <summary>
 Loss computed by Ecosim.Derivt or Ecospace.DerivtRed for each time step 
 </summary>
 <remarks>This must be set to the local loss by the calling routine for each time step</remarks>
</member>
<member name="T:EwECore.cCore">
 ---------------------------------------------------------------------------
 <summary>
 Class to handle all interactions between a user interface layer, a 
 <see cref="T:EwECore.DataSources.IEwEDataSource">data source</see> and the 
 <see cref="T:EwECore.Ecopath.cEcopathModel">Ecopath</see>, <see cref="T:EwECore.Ecosim.cEcosimModel">EcoSim</see> 
 and <see cref="T:EwECore.cEcoSpace">EcoSpace</see> models.
 </summary>
 <remarks>
 <para>This class provides a wrapper for the underlying EcoPath, EcoSim and
 EcoSpace models.</para>
 <para>The underlying model data structures have been converted into classes
 that an interface can program against. For instance, cEcopathFleetInput is the
 representation of a fishing fleet.</para>
 <para>The <see cref="P:EwECore.cCore.EcopathFleetInputs(System.Int32)"/>(iFleet) property provides a way for 
 a user interface to interact with the underlying data structures that represent 
 a fishing fleet without having to understand the modeling array structures.</para>
 <para>Most conversions from interface objects (cEcopathFleetInput or cEcoSimResults) into
 model data structures are handled by the core.</para>
 <para>Data structures for each model that need to be made public for setting
 of parameters or storing to file are held in a wrapper class for each model
 (<see cref="T:EwECore.cEcopathDataStructures"/> or <see cref="T:EwECore.cEcosimDatastructures"/>). 
 These classes provide a thin wrapper, and a means to pass data back and forth between 
 each other and a <see cref="T:EwECore.DataSources.IEwEDataSource">data source</see>.</para>
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cCore.NULL_VALUE">
 <summary>The NULL or 'no data' value for values maintained in the EwE Core.</summary>
</member>
<member name="F:EwECore.cCore.MAX_AGE">
 <summary>The maximum age of a stanza life stage.</summary>
</member>
<member name="F:EwECore.cCore.N_MONTHS">
 <summary>The number of months in a year.</summary><remarks type="bs">A petition to change the number of months per year to 10 has been submitted to the international organization for standardization (ISO) dd Jun02, 2007. We sincerely hope that the next addendum to ISO 9000 will include this change to facilitate our computational models. Unfortunately, until this change has globally been implemented issued, Ecopath will be using the more conventional assumption of 12 months per year.</remarks>
</member>
<member name="F:EwECore.cCore.MAX_RUN_LENGTH">
 <summary>Max number of years ecosim or ecospace can run for</summary>
</member>
<member name="T:EwECore.cCore.CoreMessageDelegate">
 <summary>
 Delegate defintion used to pass a message from the core to the interface.
 </summary>
 <remarks>
 Used by cMessageHandler to pass messages to an interface.
 </remarks>
</member>
<member name="T:EwECore.cCore.EcoSpaceInterfaceDelegate">
 <summary>
 Delegate defintion used to inform external processes on the progress of
 Ecospace.
 </summary>
 <param name="EcospaceResults">Ecospace results for a single time step.</param>
</member>
<member name="T:EwECore.cCore.StopRunDelegate">
 <summary>
 Delegate that can be passed to the core to allow interruption of a run or search
 </summary>
</member>
<member name="T:EwECore.cCore.MessagePumpDelegate">
 <summary>
 Delegate used by <see cref="T:EwECore.cThreadWaitBase">cThreadWaitBase</see> to run the interface message pump when waiting for a thread to complete 
 </summary>
 <remarks>Set <see cref="M:EwECore.cCore.SetMessagePumpDelegate(EwECore.cCore.MessagePumpDelegate)">cCore.setMessagePumpDelegate(MessagePumpDelegate)</see> from the interface to allow the interface to process messages while waiting for a thread to complete.</remarks>
</member>
<member name="F:EwECore.cCore.m_DataSource">
 <summary>Datasource used by the core for reading and writing model data.</summary>
</member>
<member name="F:EwECore.cCore._m_pluginManager">
 <summary>Plug-in manager.</summary>
</member>
<member name="F:EwECore.cCore._m_StateMonitor">
 <summary>Core state monitor</summary>
</member>
<member name="F:EwECore.cCore.m_SyncObj">
 <summary>Core thread synchronization object for thread marshalling.</summary>
</member>
<member name="F:EwECore.cCore.m_StateManager">
 <summary>Core state manager</summary>
 <remarks>performs actions to bring core state up-to-date</remarks>
</member>
<member name="F:EwECore.cCore.m_gameManager">
 <summary>Manager to access interface specific to the "Game" interface </summary>
</member>
<member name="F:EwECore.cCore.m_Functions">
 <summary>Class to wrap stand alone functions for internal and external access.</summary>
</member>
<member name="F:EwECore.cCore.m_dtAuxiliaryData">
 <summary>Auxillary data not stored in a list, needs to be quickly accessible via hash keys</summary>
 <remarks>Dictionary is 'friend' to be accessible to data source.</remarks>
</member>
<member name="F:EwECore.cCore.m_publisher">
 <summary>The central core message publisher.</summary>
</member>
<member name="F:EwECore.cCore.m_ThreadedProcesses">
 <summary>
 List of all multi threaded models/processes <see cref="T:EwECore.IThreadedProcess">IThreadedProcess</see> that the core can run.
 </summary>
 <remarks>This list is used by the core to stop all running models when something major happens.</remarks>
</member>
<member name="F:EwECore.cCore.m_dgtStop">
 <summary>Delegate to interrupt a run.</summary>
</member>
<member name="F:EwECore.cCore.m_MSYData">
 <summary>Data for the Ecosim MSY search.</summary>
</member>
<member name="F:EwECore.cCore.m_bCoreIsInit">
 <summary>Has the Core been initialized.</summary>
 <remarks>True if a Core has been initialized.</remarks>
</member>
<member name="M:EwECore.cCore.GetCoreCounter(EwEUtils.Core.eCoreCounterTypes)">
 <summary>
 Returns the value the Core holds for a given eCoreCounterTypes enumerator. These
 values are referred to as Core Counters.
 </summary>
 <param name="counterType">The core counter to find a value for.</param>
 <returns>Value of a core counter.</returns>
 <remarks>
 <para>This is used by any object that needs to know the size of one of the core counters.</para>
 <para>For example:</para>
 <code>
 Dim iNumGroups As Integer = core.GetCoreCounter(eCoreCounterTypes.nGroups)
 </code>
 </remarks>
</member>
<member name="M:EwECore.cCore.GetCoreCounter(EwEUtils.Core.eCoreCounterTypes,System.Int32)">
 <summary>
 Overloaded getCoreCounter() for counters that are specific to a group. E.g. nStanzasForStanzaGroup number of stanzas (life stages) in a StanzaGroup
 </summary>
 <param name="SizeType"></param>
 <param name="iIndex"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cCore.nGroups">
 <summary>
 Total number of groups across all models.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nGroups"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nDetritusGroups">
 <summary>
 Number of detritus groups across all models.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nDetritus"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nLivingGroups">
 <summary>
 Number of living groups across all models.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nLivingGroups"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nFleets">
 <summary>
 Number of fishing fleets across all models.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nFleets"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nHabitats">
 <summary>
 Number of Ecospace habitats.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nHabitats"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nRegions">
 <summary>
 Number of Ecospace regions.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nRegions"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nEffortZones">
 <summary>
 Number of Ecospace effort zones.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nEffortZones"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nMPAs">
 <summary>
 Number of Ecospace MPAs.
 </summary>
</member>
<member name="P:EwECore.cCore.nImportanceLayers">
 <summary>
 Number of Ecospace Importance layers.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nImportanceLayers"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nEnvironmentalDriverLayers">
 <summary>
 Number of Ecospace <see cref="T:EwECore.cEcospaceLayerDriver">environmental driver layers</see>.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nEnvironmentalDriverLayers"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nEcospaceYears">
 <summary>
 Number of years to run an Ecospace model.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nEcospaceYears"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nEcospaceTimeSteps">
 <summary>
 Number time steps in an Ecospace model.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nEcospaceYears"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nEcosimYears">
 <summary>
 Number of years to run an Ecosim model.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nEcosimYears"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nEcosimTimeSteps">
 <summary>
 Number of time steps in an Ecosim run.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nEcosimTimeSteps"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nMaxStanza">
 <summary>
 Max number of groups in a single stanza configuration over all stanza groups.
 <seealso cref="P:EwECore.cCore.nStanzas"/>
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nMaxStanza"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nStanzas">
 <summary>
 Number of stanza configurations. 
 <seealso cref="P:EwECore.cCore.nMaxStanza"/>
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nStanzas"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nTimeSeries">
 <summary>
 Number of available time series.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nTimeSeries"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nTimeSeriesEnabled">
 <summary>
 Number of applied time series.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nTimeSeriesApplied"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nTimeSeriesYears">
 <summary>
 Number of applied time series.
 </summary>
 <remarks>
 See <see cref="F:EwEUtils.Core.eCoreCounterTypes.nTimeSeriesApplied"/>.
 </remarks>
</member>
<member name="P:EwECore.cCore.nTaxon">
 <summary>
 Get the number of taxonomy groups.
 <seealso cref="F:EwEUtils.Core.eCoreCounterTypes.nTaxon"/>
 </summary>
</member>
<member name="P:EwECore.cCore.nPedigreeVariables">
 <summary>
 Get the number of pedigree variables.
 <seealso cref="F:EwEUtils.Core.eCoreCounterTypes.nPedigreeVariables"/>
 </summary>
</member>
<member name="P:EwECore.cCore.nCapacityMaps">
 <summary>
 Get the number of capacity maps
 <seealso cref="F:EwEUtils.Core.eCoreCounterTypes.nCapacityMaps"/>.
 </summary>
</member>
<member name="M:EwECore.cCore.#ctor">
 -----------------------------------------------------------------------
 <summary>
 Constructor
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.Name">
 -----------------------------------------------------------------------
 <summary>
 Get/set the name to identify a core instance with.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.Version(System.Boolean,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Get the Core assembly version, formatted as a string.
 </summary>
 <param name="bIncludeBitness">Inlcude 32 or 64 bitness in version string.</param>
 <param name="bIncludeCompilationDate">Inlcude compilation date in version string.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.StateMonitor">
 -----------------------------------------------------------------------
 <summary>
 Returns the <see cref="T:EwECore.cCoreStateMonitor">state monitor</see> that
 reflects the running state and data state of this core instance.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.StateManager">
 -----------------------------------------------------------------------
 <summary>
 Returns the <see cref="T:EwECore.cCoreStateManager">state manager</see> that
 provides methods to bring the core execution state up-to-date.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.Messages">
 -----------------------------------------------------------------------
 <summary>
 Exposes the MessagePublisher instance so that an interface can add message handlers to the message publisher
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.Export(EwECore.DataSources.IEwEDataSource)">
 -----------------------------------------------------------------------
 <summary>
 Export the Ecopath model to a new Datasource
 </summary>
 <param name="ds"><see cref="T:EwECore.DataSources.IEwEDataSource">DataSource</see> to save to</param>
 <returns>True if successful.</returns>
 <remarks>This will perform a full model save to the temporary data source
 passed to this method.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cCore.eBatchChangeLevelFlags">
 <summary>
 Enum describing the impact level of batch operations on EwE
 </summary>
 <remarks>
 The value of bacth change level flags is crucial to the implementation of
 determining the most serious level of impact. Please leave the values intact.
 </remarks>
</member>
<member name="T:EwECore.cCore.eBatchLockType">
 <summary>
 Enum describing the type of batch lock that is currently active.
 </summary>
</member>
<member name="F:EwECore.cCore.eBatchLockType.NotSet">
 <summary>Lock is not active.</summary>
</member>
<member name="F:EwECore.cCore.eBatchLockType.Update">
 <summary>Lock is set for updating values.</summary>
</member>
<member name="F:EwECore.cCore.eBatchLockType.Restructure">
 <summary>Lock is set for restructuring data, e.g. adding, removing or reordering items.</summary>
</member>
<member name="F:EwECore.cCore.m_batchLockType">
 <summary>Batch operation lock type.</summary>
</member>
<member name="F:EwECore.cCore.m_batchChangeLevel">
 <summary>Batch level impact.</summary>
</member>
<member name="F:EwECore.cCore.m_iBatchLock">
 <summary>Batch operation lock count.</summary>
</member>
<member name="M:EwECore.cCore.SetBatchLock(EwECore.cCore.eBatchLockType)">
 -----------------------------------------------------------------------
 <summary>
 Begin a batch operation of additions and removals of Core objects.
 All messages will be locked while a batch operation is active.
 </summary>
 <param name="batchLockType">The type of lock to set. Values are interpreted as follows:
 <list type="table">
 <item>
 <term>NotSet</term>
 <description>There is no lock active.</description>
 </item>
 <item>
 <term>Update</term>
 <description>Values will be modified during the lock. Upon releasing such a lock,
 held messages will be sent and no data will be reloaded.</description>
 </item>
 <item>
 <term>Restructure</term>
 <description>Core data will be restructured during the lock. Upon releasing such a lock,
 the core will reload affected components of the core.</description>
 </item>
 </list>
 </param>
 <returns>True if batch lock succesfully set.</returns>
 <remarks>
 <para>End the batch operation by calling <see cref="M:EwECore.cCore.ReleaseBatchLock(EwECore.cCore.eBatchChangeLevelFlags,System.Boolean)">ReleaseBatchLock</see>.</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.ReleaseBatchLock(EwECore.cCore.eBatchChangeLevelFlags,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 End a batch operation of additions and removals of Core objects.
 Relevant data is reloaded and all locked messages will be sent to allow
 listening user interfaces to catch up.
 </summary>
 <param name="batchChangeLevel">The level of impact on EwE of releasing the batch lock.
 This level will be used to reload the most severe impact level when the last
 batch lock is released.</param>
 <param name="bCommit">States whether any database changes must be committed (true)
 or rolled back (false).</param>
 <returns>Always true.</returns>
 <remarks>
 This method completes a batch operation initiated via <see cref="M:EwECore.cCore.SetBatchLock(EwECore.cCore.eBatchLockType)">SetBatchLock</see>.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.IsBatchLocked">
 -----------------------------------------------------------------------
 <summary>
 Returns whether a <see cref="M:EwECore.cCore.SetBatchLock(EwECore.cCore.eBatchLockType)">batch lock</see> is active.
 </summary>
 <returns>True if a <see cref="M:EwECore.cCore.SetBatchLock(EwECore.cCore.eBatchLockType)">batch lock</see> is active.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddGroup(System.String,System.Single,System.Single,System.Int32@,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add a Group
 </summary>
 <param name="strName">Name of the group.</param>
 <param name="sPP"><see cref="T:EwECore.ePrimaryProductionTypes">Primary Production type</see> of the group (producer, consumer or detritus).</param>
 <param name="iGroup">Position to insert group into the current group list. This position may be modified by this call.</param>
 <param name="iGroupID">Database ID assigned to the new group.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveGroup(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove a group from the EwE model.
 </summary>
 <param name="iGroup"><see cref="P:EwECore.cCoreInputOutputBase.Index">One-based index of 
 the group</see> to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.MoveGroup(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Move a group to a new position in the EwE model.
 </summary>
 <param name="iGroup"><see cref="P:EwECore.cCoreInputOutputBase.Index">One-based index of 
 the group</see> to remove.</param>
 <param name="iIndex">New, one-based position of the group in the group list.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddShape(System.String,EwEUtils.Core.eDataTypes,System.Int32@,System.Single[],System.Int64,System.Single[])">
 -----------------------------------------------------------------------
 <summary>
 Adds a shape to the core.
 </summary>
 <param name="strName"></param>
 <param name="DataType"></param>
 <param name="newDBID"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveShape(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove a shape from the EwE model.
 </summary>
 <param name="iDBID"><see cref="P:EwECore.cShapeData.DBID">database ID</see> of the 
 shape to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.HasUnusedShapeData">
 -----------------------------------------------------------------------
 <summary>
 Returns whether Ecosim has unused shape data - shape data allocated by
 earlier, longer Ecosim runs - that is currently not used. This data can
 be trimmed via <see cref="M:EwECore.cCore.TrimUnusedShapeData"/>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.TrimUnusedShapeData">
 -----------------------------------------------------------------------
 <summary>
 Trim forcing functions to the Ecosim number of time steps. To determine
 if there is unused shape data check <see cref="M:EwECore.cCore.HasUnusedShapeData"/>.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.InitCore">
 <summary>
 Initialize all core objects
 </summary>
 <returns></returns>
 <remarks>This initializes all the object that the core need to run a basic model (EcoPath). This does not load the model that happens in LoadModel(DataSource)</remarks>
</member>
<member name="M:EwECore.cCore.DataAddedOrRemovedMessage(System.String@,EwEUtils.Core.eCoreComponentType,EwEUtils.Core.eDataTypes,EwECore.cVariableStatus[])">
 <summary>
 Send a Data <see cref="F:EwEUtils.Core.eMessageType.DataAddedOrRemoved">added or removed</see> message.
 </summary>
 <param name="message">Test of the message</param>
 <param name="dataType">eDataTypes enumerator for the type of data</param>
 <remarks>This is just to wrap the creation and sending of a data added or removed message to clean up the code a bit</remarks>
</member>
<member name="M:EwECore.cCore.DataModifiedMessage(System.String@,EwEUtils.Core.eCoreComponentType,EwEUtils.Core.eDataTypes,EwECore.cVariableStatus[])">
 <summary>
 Send a <see cref="F:EwEUtils.Core.eMessageType.DataModified">data modified</see> message.
 </summary>
 <param name="message">Test of the message</param>
 <param name="dataType">eDataTypes enumerator for the type of data</param>
 <remarks>This is just to wrap the creation and sending of a data modified message to clean up the code a bit</remarks>
</member>
<member name="M:EwECore.cCore.checkBiomassForDetritus">
 <summary>
 Is the a Biomass/Area for all detritus groups
 </summary>
 <returns>True if all detritus groups have a Biomass/Area (density)</returns>
 <remarks>This was part of FindMissing in EwE5</remarks>
</member>
<member name="M:EwECore.cCore.ImportEcosimTimeSeries(EwECore.cTimeSeriesImport,System.Int32)">
 <summary>
 Import one time series into the database.
 </summary>
 <param name="ts">The <see cref="T:EwECore.cTimeSeries">cTimeSeries-derived</see> object to import.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.InitEcosimTimeSeries">
 <summary>
 Initialize Time Series interface objects.
 </summary>
</member>
<member name="M:EwECore.cCore.LoadEcosimTimeSeries">
 <summary>
 Populate Time Series interface objects
 </summary>
</member>
<member name="M:EwECore.cCore.UpdateEcosimTimeSeries">
 -----------------------------------------------------------------------
 <summary>
 Store TS Input/output data in the core.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.ActiveTimeSeriesDatasetIndex">
 -----------------------------------------------------------------------
 <summary>
 Gets the one-based index of the active <see cref="T:EwECore.cTimeSeriesDataset">TimeSeries Dataset</see>.
 If no time series are loaded, a value &lt; 1 is returned.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.TimeSeriesDataset(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Obtain a <see cref="T:EwECore.cTimeSeriesDataset">time series dataset</see>.
 </summary>
 <param name="iDatasetIndex">One-based index of the dataset to retrieve [1, <see cref="P:EwECore.cCore.ActiveTimeSeriesDatasetIndex">#sets</see>].</param>
 <returns>A <see cref="T:EwECore.cTimeSeriesDataset">time series dataset</see>.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SendTimeSeriesLoadMessage(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="strDataset">Name of dataset that was loaded</param>
 <param name="strError"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cCore.LoadTimeSeries(EwECore.cTimeSeriesDataset,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Load (and optionally apply) a single time series dataset
 </summary>
 <param name="tsd">The dataset to load. Provide 'nothing' to unload any dataset.</param>
 <param name="bEnable">Flag stating whether loaded time series should be enabled immediately.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.LoadTimeSeries(System.Int32,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Load (and optionally apply) a single time series dataset
 </summary>
 <param name="iDataset">One-based index of the dataset to load. Provide 0 to unload any dataset.</param>
 <param name="bEnable">Flag stating whether loaded time series should be enabled immediately.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.EcosimTimeSeries(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Obtain a cTimeSeries-derived instance from the core.
 </summary>
 <param name="iIndex">One-based index indicating the time series to obtain.</param>
 <returns>A cTimeSeries-derived object, or Nothing if an error occurs.</returns>
 <remarks>
 How to use this:
 <code>
 Dim core As cCore = cCore.GetInstance()
 Dim ts As cTimeSeries = Nothing
 Dim iYearStart As Integer = Integer.MaxValue
 Dim iYearEnd As Integer = Integer.MinValue
 Dim asValues() As Single = Nothing
 Dim sX As Single = 0.0
 Dim sY As Single = 0.0
 
 For i As Integer = 1 To core.nTimeSeries
    ts = core.EcosimTimeSeries(i)
    ' Determine year range
    If ts.TimeSeriesType = eTimeSeriesType.BiomassForcing Then
       iYearStart = Math.Min(iYearStart, ts.FirstYear)
       iYearEnd = Math.Max(iYearEnd, ts.FirstYear + ts.NumYears)
    End If
 Next i
 
 ' Now plot
 For i As Integer = 1 To core.nTimeSeries
    ts = core.EcosimTimeSeries(i)
    ' Determine year range
    If ts.TimeSeriesType = eTimeSeriesType.BiomassForcing Then
       asValues = ts.Values()
       For iValue As Integer = 0 To asValues.Length - 1
          sX = CSng(ts.FirstYear - iYearStart)
          sY = asValues(iValue)
 
          ' Plot here...
 
       Next iValue
    End If
 Next i
 </code>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.UpdateTimeSeries(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Apply all <see cref="T:EwECore.cTimeSeries">Time Series</see> that are flagged as
 <see cref="P:EwECore.cTimeSeries.Enabled">Enabled</see> to the Ecosim model.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.HasTimeSeries">
 -----------------------------------------------------------------------
 <summary>
 Helper method, states whether the model has time series loaded.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.HasAppliedTimeSeries">
 -----------------------------------------------------------------------
 <summary>
 Helper method, states whether the model has time series applied.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddTimeSeries(System.String,System.Int32,System.Int32,EwECore.eTimeSeriesType,System.Single,System.Single[],System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add an Ecosim Time Series to the data source.
 </summary>
 <param name="strName">Name of the new Time Series to add.</param>
 <param name="iPool">Index of item to assign this TS to.</param>
 <param name="iPoolSec">Index of secundary item to assign this TS to.</param>
 <param name="timeSeriesType"><see cref="T:EwECore.eTimeSeriesType">Type</see> of the time series.</param>
 <param name="asValues">Initial values to set in the TS.</param>
 <param name="iDBID">Database ID assigned to the new TS.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveTimeSeries(EwECore.cTimeSeries)">
 -----------------------------------------------------------------------
 <summary>
 Remove an Ecosim Time Series from the data source.
 </summary>
 <param name="TS"><see cref="T:EwECore.cTimeSeries">Time Series instance</see> to remove.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveTimeSeries(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove an Ecosim Time Series from the data source.
 </summary>
 <param name="DBID">Database ID of the time series to remove.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AppendTimeSeriesDataset(System.String,System.String,System.String,System.String,System.Int32,System.Int32,EwECore.eTSDataSetInterval,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Append a time series dataset to the core.
 </summary>
 <param name="strName"></param>
 <param name="strDescription"></param>
 <param name="strAuthor"></param>
 <param name="strContact"></param>
 <param name="iFirstYear"></param>
 <param name="iNumPoints">The number of data points in the dataset.</param>
 <param name="interval">The <see cref="T:EwECore.eTSDataSetInterval">interval</see> between two points in the dataset.</param>
 <param name="iDataset">Index of the new time series dataset if the 
 operation completed succesfully.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CreateMessage(System.String,EwEUtils.Core.eCoreComponentType,EwEUtils.Core.eMessageType)">
 <summary>
 Creates a new cMessage Object
 </summary>
 <param name="message">Message to send</param>
 <param name="source">Source of the message</param>
 <param name="MessageType">Type of message</param>
 <returns>A new cMessage Object</returns>
 <remarks>Used as a simple way to build a new message instance.</remarks>
</member>
<member name="M:EwECore.cCore.SaveChanges(System.Boolean,EwECore.cCore.eBatchChangeLevelFlags)">
 -------------------------------------------------------------------------
 <summary>
 Public interface to save changes.
 </summary>
 <param name="bQuiet">Flag stating whether to suppress any user prompts.</param>
 <param name="savelevel">The MINIMUM level of data to save. For instance,
 when loading a new Ecospace scenario, any pending Ecospace changes have
 to be stored but there is no need to save Sim or Path. A savelevel value 
 of <see cref="F:EwECore.cCore.eBatchChangeLevelFlags.Ecospace">Ecospace</see> would 
 achieve this.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.DiscardChanges">
 -------------------------------------------------------------------------
 <summary>
 Discard any unsaved data change flags.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Although data is not physically discarded, the core will no longer attempt 
 to <see cref="M:EwECore.cCore.SaveChanges(System.Boolean,EwECore.cCore.eBatchChangeLevelFlags)">save changes</see> until a new data edit is made.
 </remarks>
 -------------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.HasChanges">
 -------------------------------------------------------------------------
 <summary>
 Check whether the EwE data needs saving.
 </summary>
 <returns>True if the EwE data needs saving.</returns>
 -------------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.CustomAutosaveFolder(EwEUtils.Core.eAutosaveTypes)">
 -----------------------------------------------------------------------
 <summary>
 Gets or sets the custom folder to save scenario data under. This is very useful when running tools such as
 MultiSim, where plug-ins responding to MultiSim perturbations need to save under a non-standard Ecosim folder.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.DefaultOutputPath(EwEUtils.Core.eAutosaveTypes,System.String)">
 -------------------------------------------------------------------------
 <summary>
 Get the default output location for a given <see cref="T:EwEUtils.Core.eAutosaveTypes">autosaving component</see>.
 </summary>
 <param name="type">The <see cref="T:EwEUtils.Core.eAutosaveTypes">autosaving component</see>
 to get return the default path for.</param>
 <param name="strBasePath">The base directory to place the output folder under, 
 if any. if left empty the current <see cref="P:EwECore.cCore.OutputPath"> is assumed.</see></param>
 -------------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.OutputPath">
 -----------------------------------------------------------------------
 <summary>
 Get/set the path for core processes to write output information to.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.Autosave(EwEUtils.Core.eAutosaveTypes)">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether a <see cref="T:EwEUtils.Core.eAutosaveTypes">auto-save capable component</see>
 is allowed to auto-save.
 </summary>
 <param name="savetype">The <see cref="T:EwEUtils.Core.eAutosaveTypes">auto-save capable component</see>
 to access this setting for.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.SaveWithFileHeader">
 -----------------------------------------------------------------------
 <summary>
 Flag, stating whether results should be saved with default header information.
 </summary>
 <seealso cref="P:EwECore.cCore.ExtraFileHeaderFields"/>
 <seealso cref="M:EwECore.cCore.DefaultFileHeader(EwEUtils.Core.eAutosaveTypes,System.Int32)"/>
 <seealso cref="M:EwECore.cCore.DefaultFileHeader(System.Xml.XmlDocument,EwEUtils.Core.eAutosaveTypes,System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.ExtraFileHeaderFields">
 -----------------------------------------------------------------------
 <summary>
 A 'fieldname'='fieldvalue' dictionary of extra fields to append to the default 
 file header.
 </summary>
 <seealso cref="M:EwECore.cCore.DefaultFileHeader(EwEUtils.Core.eAutosaveTypes,System.Int32)"/>
 <seealso cref="M:EwECore.cCore.DefaultFileHeader(System.Xml.XmlDocument,EwEUtils.Core.eAutosaveTypes,System.Int32)"/>
 <seealso cref="P:EwECore.cCore.SaveWithFileHeader"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.DefaultFileHeader(EwEUtils.Core.eAutosaveTypes,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns a default file header for text files for a given 
 <see cref="T:EwEUtils.Core.eAutosaveTypes">auto-save type</see>, representing loaded
 aspects of ecopath, ecosim, ecospace and ecotracer, where applicable.
 This header block can be integrated in CSV files.
 <seealso cref="M:EwECore.cCore.DefaultFileHeader(EwEUtils.Core.eAutosaveTypes,System.Int32)"/>
 </summary>
 <param name="savetype">The <see cref="T:EwEUtils.Core.eAutosaveTypes">auto-save type</see>
 to obtain the generic file header for.</param>
 <param name="iStartYear">Optional start year to include in the header. If 
 omitted, the <see cref="M:EwECore.cCore.EcosimFirstYear"/> will be used.</param>
 <returns>A text block safe for integration in CSV files.</returns>
 <seealso cref="P:EwECore.cCore.SaveWithFileHeader"/>
 <seealso cref="M:EwECore.cCore.DefaultFileHeader(System.Xml.XmlDocument,EwEUtils.Core.eAutosaveTypes,System.Int32)"/>
 <seealso cref="P:EwECore.cCore.ExtraFileHeaderFields"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.DefaultFileHeader(System.Xml.XmlDocument,EwEUtils.Core.eAutosaveTypes,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns a default file header for XML files for a given 
 <see cref="T:EwEUtils.Core.eAutosaveTypes">auto-save type</see>, representing loaded
 aspects of ecopath, ecosim, ecospace and ecotracer, where applicable.
 This header block can be integrated in XML files.
 <seealso cref="M:EwECore.cCore.DefaultFileHeader(EwEUtils.Core.eAutosaveTypes,System.Int32)"/>
 </summary>
 <param name="savetype">The <see cref="T:EwEUtils.Core.eAutosaveTypes">auto-save type</see>
 to obtain the generic file header for.</param>
 <param name="iStartYear">Optional start year to include in the header. If 
 omitted, the <see cref="M:EwECore.cCore.EcosimFirstYear"/> will be used.</param>
 <returns>A XML node structure describing the EwE run, safe for integration in XML files.</returns>
 <seealso cref="P:EwECore.cCore.SaveWithFileHeader"/>
 <seealso cref="M:EwECore.cCore.DefaultFileHeader(EwEUtils.Core.eAutosaveTypes,System.Int32)"/>
 <seealso cref="P:EwECore.cCore.ExtraFileHeaderFields"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.OnSettingsChanged">
 -----------------------------------------------------------------------
 <summary>
 Send out a notification that core settings have changed.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.DefaultAuthor">
 -----------------------------------------------------------------------
 <summary>
 Get/set the default author name to use for EwE.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.DefaultContact">
 -----------------------------------------------------------------------
 <summary>
 Get/set the default author contact information to use for EwE.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.ThreatCount">
 -----------------------------------------------------------------------
 <summary>
 Get/set the default number of threads for the use of EwE.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CanStopRun">
 -----------------------------------------------------------------------
 <summary>
 Check wether a means to stop any running process is in place.
 </summary>
 <returns>True if any current running process can be stopped.</returns>
 <remarks>
 <para>To set a means to stop any running process see <see cref="M:EwECore.cCore.SetStopRunDelegate(EwECore.cCore.StopRunDelegate)"/>.</para>
 <para>Call <see cref="M:EwECore.cCore.StopRun"/> to invoke this delegate. The implementation that this delegate refers to is 
 responsible for implementing the stopping of the process</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.StopRun">
 -----------------------------------------------------------------------
 <summary>
 Stop any running process, if possible.
 </summary>
 <remarks>
 <para>To set a means to stop any running process see <see cref="M:EwECore.cCore.SetStopRunDelegate(EwECore.cCore.StopRunDelegate)"/>.</para>
 <para>Check <see cref="M:EwECore.cCore.CanStopRun"/> to see if a stop delegate is in place.</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SetStopRunDelegate(EwECore.cCore.StopRunDelegate)">
 -----------------------------------------------------------------------
 <summary>
 Provide the delegate that the core can call to stop any running process.
 </summary>
 <param name="dgt">The <see cref="T:EwECore.cCore.StopRunDelegate">delegate</see> that the core 
 can call to stop a running process. if Nothing is provided the core loses
 its ability to abort a running process.</param>
 <remarks>
 <para>Call <see cref="M:EwECore.cCore.StopRun"/> to invoke this delegate. The implementation 
 that this delegate refers to is responsible for implementing the stopping 
 of the process</para>
 <para>Check <see cref="M:EwECore.cCore.CanStopRun"/> to see if a stop delegate is in place.</para>
 <para>Note that this delegate is cleared any time the core detects the end 
 of a running process.</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SetMessagePumpDelegate(EwECore.cCore.MessagePumpDelegate)">
 <summary>
 Sets a delegate that a Manager can use to pump messages in the interface waiting for a process/thread to complete.
 </summary>
 <param name="InterfaceMessagePumpDelegate">Delegate from an interface to run the interfaces message pump.</param>
 <remarks>This is used to prevent a thread deadlock when a Manager is waiting for a process to complete. </remarks>
</member>
<member name="P:EwECore.cCore.DataSource">
 -----------------------------------------------------------------------
 <summary>
 The <see cref="T:EwECore.DataSources.IEwEDataSource">data source</see> that the core will use
 for reading and writing model data.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EwEModel">
 <summary>
 Returns the <see cref="T:EwECore.cEwEModel">EwE model</see> for the current loaded data source.
 </summary>
</member>
<member name="P:EwECore.cCore.SelectedGroups">
 <summary>Flag to affect which groups to auto-save data for.</summary>
 <remarks>Values are set by the UI. This logic is currently only used by the Ecospace result writers.</remarks>
</member>
<member name="P:EwECore.cCore.SelectedFleets">
 <summary>Flag to affect which fleets to auto-save data for</summary>
 <remarks>Values are set by the UI. This logic is currently only used by the Ecospace result writers.</remarks>
</member>
<member name="M:EwECore.cCore.LoadModel(System.String)">
 -----------------------------------------------------------------------
 <summary>
 Load the Ecopath model from a given file.
 </summary>
 <param name="strFile">The model file to load.</param>
 <returns>True if the model was loaded successfully. False otherwise</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.LoadModel(EwECore.DataSources.IEwEDataSource)">
 -----------------------------------------------------------------------
 <summary>
 Load the Ecopath model from a given Datasource.
 </summary>
 <param name="ds">A <see cref="T:EwECore.DataSources.IEwEDataSource">IEwEDataSource</see>-derived
 object that provides access to the model. Note that the datasource must
 already be <see cref="M:EwECore.DataSources.IEwEDataSource.Open(System.String,EwECore.cCore,EwEUtils.Core.eDataSourceTypes,System.Boolean)">opened</see>.</param>
 <returns>True if the model was loaded successfully. False otherwise</returns>
 <remarks>The given data source will be remembered here for subsequent 
 <see cref="M:EwECore.cCore.SaveModel">SaveModel</see> and SaveEcosimScenario calls.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CanSave(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Checks if the underlying datasource can be saved.
 </summary>
 <param name="bSendMessage"></param>
 <returns>True if the database is editable.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.Save(System.String)">
 -----------------------------------------------------------------------
 <summary>
 Save the data of all models.
 </summary>
 <param name="strFileName">Optional file name to save to. If not provided
 data is saved to the currently connected <see cref="P:EwECore.cCore.DataSource"/>. If
 a file name is provided a new datasource will be created, and the core
 will switch to that datasource. The current datasource will then NOT be
 modified.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SaveModel">
 -----------------------------------------------------------------------
 <summary>
 Save the Ecopath model.
 </summary>
 <returns>True if successful.</returns>
 <remarks>Note that this logic will NOT sync the two datasources; this
 responsibility is left to the calling process. Yes, this is a hack 
 around a process that needs to be very well thought out!!!</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CloseModel">
 -----------------------------------------------------------------------
 <summary>
 Close the Ecopath model and terminate the core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CloseModel(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Close the model and optionally terminate the datasource
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.ClearIOList(EwECore.cCoreInputOutputList{EwECore.cCoreInputOutputBase})">
 -----------------------------------------------------------------------
 <summary>
 Clear the contents of a cCoreInputOutputList, disposing all of the items in the list.
 </summary>
 <param name="IOList">The list to clear, may be NULL.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcopathGroupInputs(System.Int32)">
 <summary>
 Basic Inputs for EcoPath for a single group
 </summary>
 <param name="iGroup">
 Number of the group the data is for
 This collection of GroupInputs is one base </param>
 <value>Returns a Valid group if a Group exists for this iGroup. Returns nothing if iGroup is out of bounds</value>
 <remarks>
 The cEcoPathGroup object returned is a reference to a cEcoPathGroup held by the Core.
 Any changes made to the returned object will also be made to the object held by the Core/EcoPath model. 
 This property is ReadOnly because it returns a reference that allows direct manipulation of the underlying data
 and updating is not needed.
 How to use:
 'this will update the Biomass for all groups to two
 dim prvtGetSetEcoPathInputs as cEcoPathGroup
 For i = 1 to Core.NumberGroups
      prvtGetSetEcoPathInputs = Core.EcoPathGroupInputs(i)
      prvtGetSetEcoPathInputs.Biomass = 2
 next i 
 </remarks>
</member>
<member name="M:EwECore.cCore.LoadEcopathInputs">
 <summary>
 Load the Ecopath data into all the existing cEcoPathGroupInputs objects in the core
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cCore.UpdateEcopathInput(System.Int32)">
 <summary>
 Update the underlying Ecopath Data with the values in EcoPath inputs list
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cCore.EcopathGroupOutputs(System.Int32)">
 <summary>
 Retrieves the EcoPath estimated parameters for the last run parameter estimation for this iGroup
 by creating a new EcoPathGroupOutputs object that is populated with the estimated parameters.
 </summary>
 <param name="iGroup">Group that the model results are for</param>
 <returns>A valid cEcoPathGroupOutput object if successfull. Nothing(NULL) otherwise</returns>
 <remarks>
 This data is the estimated parameters. 
 i.e.
 Model.InitEcoPath("SomeDatasource")
 Model.RunEcopath()
 Model.EcoPathGroupOutputs(1)'will get the output (estimated parameters)of the EcoPath model for group 1
 </remarks>
</member>
<member name="M:EwECore.cCore.ResetEcopathGroupOutputs">
 <summary>
 Clear all status flags on Ecopath group outputs
 </summary>
</member>
<member name="P:EwECore.cCore.Taxon(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get a <see cref="T:EwECore.cTaxon">taxon</see> for a given index.
 </summary>
 <param name="iTaxon">The one-based index to obtain the Taxon definition for.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddTaxon(System.Int32,System.Boolean,EwEUtils.Core.ITaxonSearchData,System.Single,System.Single,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add a taxonomy definition to an Ecopath group.
 </summary>
 <param name="iTarget">Target index to add the taxonomy definition to.</param>
 <param name="bIsStanza">Flag stating whether the index represents a 
 stanza (true) or a group (false).</param>
 <param name="data">Taxonomy data to add.</param>
 <param name="sPropBiomass">Proportion that this taxonomy contributes to the biomass of the group.</param>
 <param name="sPropCatch">Proportion that this taxonomy contributes to the catch of the group.</param>
 <param name="iDBID">Database ID for the new taxonomy definition.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveTaxon(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove a taxonomy definition from an Ecopath group.
 </summary>
 <param name="iTaxon">Index of the taxonomy definition to remove.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddFleet(System.String,System.Int32@,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add a Fleet to the system.
 </summary>
 <param name="strName">Name of the fleet.</param>
 <param name="iFleet">Position to insert fleet into the current fleet list. This position may be modified by this call.</param>
 <param name="iFleetID">Database ID assigned to the new fleet.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.ParticleSizeDistributionParameters">
 <summary>
 Returns the <see cref="T:EwECore.cEwEModel">EwE model</see> for the current loaded data source.
 </summary>
</member>
<member name="P:EwECore.cCore.StanzaGroups(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Return a <see cref="T:EwECore.cStanzaGroup">stanza group</see> from the core.
 </summary>
 <param name="iIndex">Zero-based index of the group.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.getStanzaIndexForGroup(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the zero-based stanza index for a group index, or <see cref="F:EwECore.cCore.NULL_VALUE"/>
 if the group does not belong to a stanza.
 </summary>
 <param name="iGroup">The one-based group index to get the stanza for.</param>
 <returns>Gets Stanza index if this group is a stanza group, or
 cCore.NULL_VALUE if this group does not belong to a stanza configuration.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RunEcopath">
 -----------------------------------------------------------------------
 <summary>
 Run the EcoPath model.
 </summary>
 <returns>
 True if the EcoPath model ran successfully, or False if an error occurred.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RunEcopath(System.Boolean@)">
 -----------------------------------------------------------------------
 <summary>
 Run the EcoPath model.
 </summary>
 <param name="isModelBalanced">
 Return flag that indicates whether the Ecopath model balanced.
 </param>
 <returns>
 True if the EcoPath model ran successfully, or False if an error occurred.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.ProcessMessageFromModel(EwECore.cMessage)">
 <summary>
 Take a cMessage object generated by a model and set any flags in the input or output 
 that can be used by an interface to display the problem.
 </summary>
 <param name="msg">cMessage object created by EcoPath</param>
 <remarks>
 Called by EcoPathMessage_Handler(cMessage) when a message has been sent from EcoPath to the Core
 </remarks>
</member>
<member name="M:EwECore.cCore.EcopathMessage_Handler(EwECore.cMessage@)">
 <summary>
 This is the message handler that got passed to EcoPath during the Initialization routine. See InitEcopath().
 It will be called by EcoPath when ever it needs to tell the Core that something has happen.
 </summary>
 <param name="message">Message Object from EcoPath contains any information that is needed to process the message</param>
 <remarks>
 Take a messages that originated in EcoPath 
 and run whatever processing has to happen to pass the message out to the Observers 
  </remarks>
</member>
<member name="M:EwECore.cCore.NormalizeDietInput">
 <summary>
 Normalize ecopath input values
 </summary>
</member>
<member name="P:EwECore.cCore.EcopathStats">
 <summary>
 Statistics from the last Ecopath model run
 </summary>
</member>
<member name="M:EwECore.cCore.Set_PB_QB_GE_BA_Flags(EwECore.cEcoPathGroupInput,System.Boolean)">
 <summary>
 Set the NotEditable flags for PB QB and GE
 </summary>
 <param name="obj">The object to update.</param>
 <param name="bSendMessage">False not to send a message</param>
 <returns>Always true.</returns>
 <remarks>This is called by <see cref="M:EwECore.cCore.PostVariableValidation(EwECore.ValueWrapper.cValue,EwECore.cCoreInputOutputBase,EwECore.cMessage)">PostVariableValidation</see> 
 to set status when a variable has been edited, as well as <see cref="M:EwECore.cEcoPathGroupInput.ResetStatusFlags(System.Boolean)">ResetStatusFlags</see>
 when the object is first created.</remarks>
</member>
<member name="M:EwECore.cCore.Set_GS_Flags(EwECore.cEcoPathGroupInput,System.Boolean)">
 <summary>
 
 </summary>
 <param name="obj"></param>
 <param name="bSendMessage"></param>
 <returns>Always true.</returns>
</member>
<member name="M:EwECore.cCore.Set_Migration_Flags(EwECore.cEcoPathGroupInput,System.Boolean)">
 <summary>
 Set the NotEditable flags for Emigration values when a group is part of a stanza configuration
 </summary>
 <param name="obj">The object to update.</param>
 <param name="bSendMessage">False not to send a message.</param>
 <returns>Always true.</returns>
 <remarks>
 <para>When a group is part of a Stanza configuration, its migration parameters
 should be blocked for input. Original email message:</para>
 <para>Thu, 30 Nov 2006 10:44:13 -0800 (PST)</para>
 <para>Carl, I have blocked entry of migration parameters for stanza's (we need to do the same in EwE6 folks)</para>
 <para>Villy</para>
 <para> --------------------------------------------------------------------------------</para>
 <para>From: Carl(Walters)</para>
 <para>Sent: Thursday, November 30, 2006 07:14</para>
 <para>To: Villy Christensen</para>
 <para>Subject: problem with migration for multistanza groups</para>
 <para>Villy,</para>
 <para>That Cowan student uncovered a �bug� in the �other production� interface in ecopath. 
 We do not include immigration accounting in Ecosim, so if a user sets nonzero 
 immigration and emigration rates, only the emigration contribution to Z is included
 in the multistanza dynamics. The problem with modeling immigration is how to specify
 age-specific immigration rates for each age within any stanza specified to have
 immigrating biomass; there is no obvious way to do the rates in a robustway,
 especially considering that weights at age of immigrants may differ from those of
 �resident� creatures. I think the best strategy is just to not allow rates to be set
 to nonzero values in the other production interface.</para>
 <para>Carl</para>
 </remarks>
</member>
<member name="P:EwECore.cCore.StartBiomass(System.Int32)">
 <summary>
 Start biomass of each group
 </summary>
 <remarks>Added by FG temporarily. For the map plotting
 JJ: Please Update it to the correct core class 
 </remarks>
</member>
<member name="P:EwECore.cCore.EcosimScenarios(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get an <see cref="T:EwECore.cEcoSimScenario">Ecosim scenario</see> from the available scenarios.
 </summary>
 <param name="iScenario">One-based indexed of the scenario to load
 [1, <see cref="P:EwECore.cCore.nEcosimScenarios">#scenarios</see>].</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.nEcosimScenarios">
 -----------------------------------------------------------------------
 <summary>
 Returns the number of <see cref="T:EwECore.cEcoSimScenario">Ecosim scenarios</see> in the currently loaded model
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.ActiveEcosimScenarioIndex">
 -----------------------------------------------------------------------
 <summary>
 Gets the index of the active <see cref="T:EwECore.cEcoSimScenario">Ecosim scenario</see>.
 If no scenario is loaded, a value &lt; 1 will be returned.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.EcosimFirstYear">
 -----------------------------------------------------------------------
 <summary>
 Returns the start year for Ecosim
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcosimStats">
 <summary>
 Statistics from the last Ecosim model run
 </summary>
</member>
<member name="M:EwECore.cCore.EcosimOutputs">
 <summary>
 Get outputs of the last Ecosim run
 </summary>
</member>
<member name="M:EwECore.cCore.NormalizeQuotaShare">
 <summary>
 Normalize MSE QuotaShare values
 </summary>
</member>
<member name="M:EwECore.cCore.SetDefaultQuotaShare">
 <summary>
 Set MSE QuotaShare values to default
 </summary>
</member>
<member name="M:EwECore.cCore.SetDefaultMSERecruitment">
 <summary>
 Set MSE QuotaShare values to default
 </summary>
</member>
<member name="M:EwECore.cCore.InitEcoSim">
 <summary>
 Initialize the EcoSim model
 </summary>
 <returns>True is successfull. False otherwise</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cCore.LoadEcosimScenario(EwECore.cEcoSimScenario)">
 <summary>
 Load an <see cref="T:EwECore.cEcoSimScenario">Ecosim scenario</see> from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="scenario">The <see cref="T:EwECore.cEcoSimScenario">Scenario</see> to load.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.NewEcosimScenario(System.String,System.String,System.String,System.String)">
 <summary>
 Creates and loads a new Ecosim scenario.
 </summary>
 <param name="strName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.LoadEcosimScenario(System.Int32)">
 <summary>
 Load an <see cref="T:EwECore.cEcoSimScenario">Ecosim scenario</see> from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="iScenario">One-based index of the <see cref="T:EwECore.cEcoSimScenario">Scenario</see> in the <see cref="F:EwECore.cCore.m_EcoSimScenarios">Scenario list</see>.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.SaveEcosimScenario">
 -----------------------------------------------------------------------
 <summary>
 Saves the current Ecosim scenario.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SaveEcosimScenarioAs(System.String,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Saves the current ecosim scenario under a new name.
 </summary>
 <param name="strName"></param>
 <param name="strDescription"></param>
 <returns></returns>
 <remarks>
 This will adjust the active scenario index!
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveEcosimScenario(EwECore.cCoreInputOutputBase)">
 <summary>
 Remove a <see cref="T:EwECore.cEcoSimScenario">Ecosim Scenario</see> from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="scenario">The <see cref="T:EwECore.cEcoSimScenario">Scenario</see> to remove.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.RemoveEcosimScenario(System.Int32)">
 <summary>
 Remove a <see cref="T:EwECore.cEcoSimScenario">Ecosim Scenario</see> from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="iScenario">Index of the scenario in the <see cref="F:EwECore.cCore.m_EcoSimScenarios">Scenario list</see>.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.InitEcosimGroups">
 <summary>
 Update the list of available ecosim input groups
 </summary>
</member>
<member name="P:EwECore.cCore.EcosimGroupInputs(System.Int32)">
 <summary>
 Get a <see cref="T:EwECore.cEcosimGroupInput">Ecosim input group</see> for a given group index.
 </summary>
 <param name="iGroup">The index to obtain the group for.</param>
</member>
<member name="P:EwECore.cCore.EcosimGroupOutputs(System.Int32)">
 <summary>
 Get a <see cref="T:EwECore.cEcosimGroupOutput">Ecosim output group</see> for a given group index.
 </summary>
 <param name="iGroup">The index to obtain the group for.</param>
</member>
<member name="M:EwECore.cCore.ResetEcosimGroupOutputs">
 <summary>
 Clear all status flags on Ecosim group outputs
 </summary>
</member>
<member name="M:EwECore.cCore.UpdateEcoSimScenario(System.Int32)">
 <summary>
 Update all the underlying data structures that contain EcoSim scenario data
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.UpdateEcoSimGroup(System.Int32)">
 <summary>
 Update all the underlying data structures that contain group info for EcoSim
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cCore.UpdateEcoSimFleetInput(System.Int32)">
 <summary>
 Update all the underlying data structures that contain fleet input info for EcoSim
 </summary>
 <param name="iDBID">Database ID of Ecosim fleet to update</param>
</member>
<member name="M:EwECore.cCore.StopEcoSim">
 <summary>
 Stop a running EcoSim model
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cCore.setEcosimRunLength(System.Int32,System.Boolean)">
 <summary>
 Change the number of years the ecosim model runs for
 </summary>
 <param name="newNumberOfYears"></param>
 <remarks>There are two events that can trigger this. User has set the Ecosim run length. User has loaded timeseries data which will set the Ecosim run length to the same as the timeseries data</remarks>
</member>
<member name="M:EwECore.cCore.RunEcosim(EwECore.Ecosim.EcoSimTimeStepDelegate,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Launch an Ecosim run.
 </summary>
 <param name="TimeStepDelegate">Delegate for receiving time step notifications.</param>
 <param name="bMultiThreaded">Multi-threaded run flag. Please use with care.</param>
 <returns>True if a run started successfully.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.privateEcoSimScenario(System.Int32)">
 <summary>
 Creates a new cEcoSimScenario object for this nScenario from the uderlying parameters in EcoSim
 </summary>
 <param name="iScenario">Index of the scenario to get or set the variables for.</param>
 <value>
 Returns a valid cEcoSimScenario object if nScenario (group index) is in bounds. 
 Null cEcoSimGroupInfo object if iGroup (group index) is out of bounds or an error occurs.</value>
</member>
<member name="P:EwECore.cCore.EcosimModelParameters">
 <summary>
 Get the <see cref="T:EwECore.cEcoSimModelParameters">Ecosim model parameters</see> for
 the currently loaded Ecosim scenario.
 </summary>
</member>
<member name="M:EwECore.cCore.InitEcosimModelParameters">
 <summary>
 Create a new cEcoSimModelParameters object. This is the parameter for the current model run.
 </summary>
 <returns>True if successfull</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cCore.LoadEcosimModelParameters">
 <summary>
 Reload the Eocsim data into the existing EcoSim parameter object
 </summary>
 <returns>True if no error encountered.</returns>
 <remarks>This can be used if a new scenario is loaded to populate the existing EcoSim parameter object (m_EcoSimRun) with the new scenario data. </remarks>
</member>
<member name="M:EwECore.cCore.CheckResetDefaultVulnerabilities(System.Boolean,System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Check if Ecosim has non-default vulnerabilities, and if so, reset the
 vulnerabilties. 
 </summary>
 <param name="bQuiet">Flag stating whether the user should be prompted
 whether vulnerabilities should be reset.</param>
 <param name="sDefaultValue">The value to test vulnerabilities for, and
 to set vulnerabilties to.</param>
 <returns>True if Ecosim has all default vulnerabilties.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.ScaleVulnerabilitiesToTL(System.Single,System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Ecosim scale vulnerabilities by trophic level.
 </summary>
 <param name="sVulLow"></param>
 <param name="sVulHigh"></param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.HasNonDefaultVulnerabilty(System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Test whether Ecosim has non-default vulnerabilities.
 </summary>
 <param name="sValue">The value to test for, 2.0 by default.</param>
 <returns>True if Ecosim has non-default vulnerabilties.</returns>
 <remarks>
 A 0.01 margin of error is tolerated in this test.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.VulnerabilitiesChanged">
 -----------------------------------------------------------------------
 <summary>
 The vulnerabilities have changed
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CalcEcospaceCostOfSailing">
 -----------------------------------------------------------------------
 <summary>
 Recalculate the Ecospace distance sailing cost map for all fleets.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SetEcospaceAllCoastToPort(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Set all coastal cells to ports for a given fleet.
 </summary>
 <param name="iFleet">The fleet to set the ports for. If not provided,
 all coastal cells for all fleets are set to ports.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.ClearEcospacePort(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Clear port cells for a given fleet.
 </summary>
 <param name="iFleet">The fleet to clear the ports for. If not provided,
 all ports for all fleets are cleared.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SetExcludedDepth(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Set all coastal cells to ports for a given fleet.
 </summary>
 <param name="iDepth">The min depth to exclude from computations.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.ClearExcludedCells">
 -----------------------------------------------------------------------
 <summary>
 Clear excluded cells.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.InvertExcludedCells">
 -----------------------------------------------------------------------
 <summary>
 Clear excluded cells.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.EcospaceTimestepToAbsoluteTime(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Convert an Ecospace time step to absolute time.
 </summary>
 <param name="iTime">The Ecospace time step to convert.</param>
 <returns>The absolute time represented by a time step.</returns>
 <remarks>The absolute time is based on the <see cref="M:EwECore.cCore.EcosimFirstYear"/>, to
 which the time represented by a given time step is added. The resulting 
 date is rounded to the first day of the month.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AbsoluteTimeToEcospaceTimestep(System.DateTime)">
 -------------------------------------------------------------------
 <summary>
 Convert an absolute time to an Ecospace time step.
 </summary>
 <param name="dt">The date to convert to a time step.</param>
 <returns></returns>
 <remarks>The resulting time step is calculated from difference in time steps,
 rounded to months, between the given time and the <see cref="M:EwECore.cCore.EcosimFirstYear"/>.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RunEcospace(EwECore.cCore.EcoSpaceInterfaceDelegate@,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Run the Ecospace model with the currently loaded Ecosim and Ecospace scenario
 </summary>
 <param name="EcospaceTimeStepHandler">
 Optional handler to call with timestep data. 
  If no handler is supplied then the user will not be called at each time step. 
 </param>
 <param name="RunOnThread">
 Optional parameter to run Ecospace on the same thread as the calling process.
 By default Ecospace is run on a separate thread. If RunOnThread = False Ecospace will run on the same thread as the calling process.
 </param>
 <remarks>
 If RunOnThread = True (default behaviour) then RunEcoSpace(...) is run asynchronously, it will return immediately after starting Ecospace on a separate thread.
 Once the Ecospace run completes the <see cref="P:EwECore.cCore.StateMonitor">cCore.StateMonitor()</see> will fire a CoreExecutionStateEvent().
 </remarks>
 <returns>
 If RunOnThread = True then True if a new thread was started. False otherwise. 
 If RunOnThread = False then True when the run has completed. False otherwise.
  </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CheckHabitats">
 -----------------------------------------------------------------------
 <summary>
 Has the capacity been set to a reasonable level for all groups.
 </summary>
 <returns>True if all groups are above so min value. False otherwise</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CheckVariousParameters">
 -----------------------------------------------------------------------
 <summary>
 Check if ecospace parameters may cause trouble.
 </summary>
 <returns>True if all ok, False otherwise</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CheckExternalSpatialTemporalData">
 -----------------------------------------------------------------------
 <summary>
 Check whether the spatial/temporal data set-up is valid.
 </summary>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.StopEcospace">
 -----------------------------------------------------------------------
 <summary>
 Stop a running EcoSpace model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.onEcospaceTimeStep(System.Int32)">
 <summary>
 This gets called by Ecospace at every time step
 </summary>
 <param name="iTime">Time index of this time step</param>
 <remarks>processEcospaceTimeStep() will populate the cEcospaceTSResults object and send it to an interface</remarks>
</member>
<member name="M:EwECore.cCore.dumpSpaceMortPred(EwECore.cCore,EwECore.cEcospaceTimestep)">
 <summary>
 Sample code to loop over EcoSpace map of mortality by predation 
 </summary>
</member>
<member name="M:EwECore.cCore.EcospaceMessageHandler(EwECore.cMessage@)">
 <summary>
 Message handler for messages sent by Ecospace
 </summary>
 <param name="message"></param>
 <remarks></remarks>
</member>
<member name="P:EwECore.cCore.nEcospaceScenarios">
 -----------------------------------------------------------------------
 <summary>
 Gets the number of available Ecospace scenarios for the loaded model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceScenarios(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get an <see cref="T:EwECore.cEcospaceScenario">Ecospace scenario</see> from the available scenarios.
 </summary>
 <param name="iScenario">One-based indexed of the scenario to load
 [1, <see cref="P:EwECore.cCore.nEcospaceScenarios">#scenarios</see>].</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.ActiveEcospaceScenarioIndex">
 -----------------------------------------------------------------------
 <summary>
 Gets the index of the active <see cref="T:EwECore.cEcospaceScenario">Ecospace scenario</see>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceModelParameters">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwECore.cEcospaceModelParameters">Ecospace model parameters</see>
 for the currently loaded Ecospace scenario.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceBasemap">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwECore.cEcospaceBasemap">Ecospace base map</see> for the 
 currently loaded Ecospace scenario.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceGroupInputs(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get a <see cref="T:EwECore.cEcospaceGroupInput">Ecospace group</see> for a given index.
 </summary>
 <param name="iGroup">The index to obtain the Ecospace group for.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceFleetInputs(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get a <see cref="T:EwECore.cEcospaceFleetInput">Ecospace fleet</see> for a given index.
 </summary>
 <param name="iFleet">The index to obtain the Ecospace fleet for.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceHabitats(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get a <see cref="T:EwECore.cEcospaceHabitat">Ecospace habitat</see> for a given index.
 </summary>
 <param name="iHabitat">The zero-based index to obtain the Ecospace habitat for.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceMPAs(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get a <see cref="T:EwECore.cEcospaceMPA">Ecospace MPA</see> for a given index.
 </summary>
 <param name="iMPA">The index to obtain the Ecospace marine protected area for.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcosimFleetInputs(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Ecosim Fleet inputs.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcosimFleetOutput(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Ecosim Fleet summary results from last Ecosim run.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceGroupOutput(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Results from last Ecospace run by group
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceFleetOutput(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Ecospace Fleet summary results from last Ecospace run.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceRegionOutput(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Ecospace region summary results from last Ecospace run.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcospaceStats">
 -----------------------------------------------------------------------
 <summary>
 Statistics from the last Ecospace model run
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.privateEcospaceScenario(System.Int32)">
 <summary>
 Creates a new <see cref="T:EwECore.cEcospaceScenario">cEcospaceScenario</see> object for this 
 nScenario from the underlying parameters in Ecospace.
 </summary>
 <param name="iScenario">Index of the scenario to get/set the variables for.</param>
 <value>
 Returns a valid <see cref="T:EwECore.cEcospaceScenario">cEcospaceScenario</see> object if nScenario,
 the scenario index, is in bounds, or  Null when the index is out of bounds or an error 
 occured.</value>
</member>
<member name="M:EwECore.cCore.NewEcospaceScenario(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
 <summary>
 Creates and loads a new Ecospace scenario.
 </summary>
 <param name="strName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <param name="strAuthor">Author of new scenario.</param>
 <param name="strContact">Contact of new scenario.</param>
 <param name="iNumRows">Number of rows in basemap.</param>
 <param name="iNumCols">Number of columns in basemap.</param>
 <param name="sLat">Latitude of basemap (TL corner).</param>
 <param name="sLon">Longitude of basemap (TL corner)></param>
 <param name="sCellLength">Cell length, in km. A square grid is assumed.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.LoadEcospaceScenario(EwECore.cEcospaceScenario)">
 <summary>
 Load an <see cref="T:EwECore.cEcoSimScenario">Ecospace scenario</see> from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="scenario">The <see cref="T:EwECore.cEcospaceScenario">Scenario</see> to load.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.LoadEcospaceScenario(System.Int32)">
 <summary>
 Load an <see cref="T:EwECore.cEcospaceScenario">Ecospace scenario</see> from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="iScenario">Index of the <see cref="T:EwECore.cEcospaceScenario">Scenario</see> in the <see cref="F:EwECore.cCore.m_EcospaceScenarios">Scenario list</see>.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.SaveEcospaceScenario">
 -----------------------------------------------------------------------
 <summary>
 
 </summary>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SaveEcospaceScenarioAs(System.String,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Save the current ecospace scenario under a new name.
 </summary>
 <param name="strName"></param>
 <param name="strDescription"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveEcospaceScenario(EwECore.cCoreInputOutputBase)">
 <summary>
 Remove a <see cref="T:EwECore.cEcospaceScenario">Ecospace Scenario</see> from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="scenario">The <see cref="T:EwECore.cEcospaceScenario">Scenario</see> to remove.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.RemoveEcospaceScenario(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove a <see cref="T:EwECore.cEcospaceScenario">Ecospace Scenario</see> from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="iScenario">Index of the scenario in the <see cref="F:EwECore.cCore.m_EcospaceScenarios">Ecospace Scenario list</see>.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.UpdateEcospaceScenario(System.Int32)">
 <summary>
 Update all the underlying data structures that contain Ecospace scenario data
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.ResizeEcospaceBasemap(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Change the size of the Ecospace base map to a new number of rows and columns.
 </summary>
 <param name="InRow"></param>
 <param name="InCol"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.LoadEcospaceBasemap">
 -----------------------------------------------------------------------
 <summary>
 Initialize ecospace basemap from core data.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.UpdateEcospaceBasemap">
 -----------------------------------------------------------------------
 <summary>
 Update core data from ecospace basemap.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.InitEcospaceGroups">
 -----------------------------------------------------------------------
 <summary>
 Initialize <see cref="T:EwECore.cEcospaceGroupInput">Ecospace group</see> objects to
 expose to the interface layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.LoadEcospaceGroups">
 -----------------------------------------------------------------------
 <summary>
 Load Ecospace group data from the underlying data structures into the 
 interface objects.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.UpdateEcospaceHabitat(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Update the ecospace data structures with the content of an 
 <see cref="T:EwECore.cEcospaceHabitat">Ecospace habitat</see>.
 </summary>
 <param name="iDBID">Database ID of the Ecospace Habitat to update.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddEcospaceHabitat(System.String,System.Int32,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add an <see cref="T:EwECore.cEcospaceHabitat">Ecospace habitat</see> to the current
 <see cref="P:EwECore.cCore.DataSource">data source</see>.
 </summary>
 <param name="strName">Name of habitat to add.</param>
 <param name="iIndex">Sequential index for the new habitat.</param>
 <param name="iDBID">DBID of the habitat.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveEcospaceHabitat(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove an <see cref="T:EwECore.cEcospaceHabitat">Ecospace habitat</see> from the current
 <see cref="P:EwECore.cCore.DataSource">data source</see>.
 </summary>
 <param name="iDBID">The <see cref="P:EwECore.cCoreInputOutputBase.DBID"/> of the habitat 
 to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddEcospaceMPA(System.String,System.Int32,System.Boolean[],System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add an <see cref="T:EwECore.cEcospaceMPA">Ecospace MPA</see> to the current
 <see cref="P:EwECore.cCore.DataSource">data source</see>.
 </summary>
 <param name="strMPAName">Name of MPA to add.</param>
 <param name="iDBID"><see cref="P:EwECore.cCoreInputOutputBase.DBID"/> of the new MPA.</param>
 <param name="MPAMonths">One-based series of flags that indicate when the 
 MPA is OPEN for fishing.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveEcospaceMPA(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove an <see cref="T:EwECore.cEcospaceMPA">Ecospace MPA</see> from the current
 <see cref="P:EwECore.cCore.DataSource">data source</see>.
 </summary>
 <param name="iMPADBID">The <see cref="P:EwECore.cCoreInputOutputBase.DBID"/> to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddEcospaceImportanceLayer(System.String,System.String,System.Single,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add an <see cref="T:EwECore.cEcospaceLayerImportance">Ecospace importance layer</see>
 to the current <see cref="P:EwECore.cCore.DataSource">data source</see>.
 </summary>
 <param name="strName">Name of layer to add.</param>
 <param name="strDescription">Description of layer to add.</param>
 <param name="sWeight">Weight of layer to add.</param>
 <param name="iID">DBID that the data source has assigned to the new 
 layer.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveEcospaceImportanceLayer(EwECore.cEcospaceLayerImportance)">
 -----------------------------------------------------------------------
 <summary>
 Remove an <see cref="T:EwECore.cEcospaceHabitat">Ecospace habitat</see> from the current
 <see cref="P:EwECore.cCore.DataSource">data source</see>.
 </summary>
 <param name="objLayer">The <see cref="T:EwECore.cEcospaceLayerImportance">
 Ecospace importance layer</see> to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddEcospaceDriverLayer(System.String,System.String,System.String,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add a <see cref="T:EwECore.cEcospaceLayerDriver">driver layer</see> to the current
 <see cref="P:EwECore.cCore.DataSource">data source</see>.
 </summary>
 <param name="iDBID">DB id of the new map.</param>
 <param name="strName">Name of layer to add.</param>
 <param name="strDescription">Description of layer to add.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveEcospaceDriverLayer(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove a <see cref="T:EwECore.cEcospaceLayerDriver">driver layer</see> from the current
 <see cref="P:EwECore.cCore.DataSource">data source</see>.
 </summary>
 <param name="iDBID">The <see cref="P:EwECore.cCoreInputOutputBase.DBID"/> of the map
 to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.MoveDriverLayer(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Move a <see cref="T:EwECore.cEcospaceLayerDriver"/> to a new position in the EwE model.
 </summary>
 <param name="iLayer"><see cref="P:EwECore.cCoreInputOutputBase.Index">One-based index of 
 the environmental driver layer</see> to move.</param>
 <param name="iIndex">New, one-based position of the layer in the layer list.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RecomputeEcospaceForagingCapacity(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Recalculate Ecospace foraging capacity.
 </summary>
 <param name="iGroup">The group to calculate capacity for. Set this value to 0 or less to 
 calculate capacity for all groups.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.InitStanzas">
 <summary>
 Initialize and populate the Stanza interface between the core and an interface
 </summary>
</member>
<member name="M:EwECore.cCore.LoadStanza(EwECore.cStanzaGroup)">
 <summary>
 Populate a cStanzaGroup object with the core data
 </summary>
 <param name="stanza">cStanzaGroup object to populate.</param>
 <returns>True is successfull. False otherwise.</returns>
 <remarks>Call to populate a single cStanzaGroup object with the core data from the Ecopath and Stanza data structures</remarks>
</member>
<member name="M:EwECore.cCore.CalculateStanza(EwECore.cStanzaGroup)">
 <summary>
 Re-calculate Stanza variables from the new parameters in the cStanzaGroup object
 </summary>
 <param name="stanza">cStanzaGroup object that contains the new parameters and will be populated with the new values</param>
 <returns>True if successfull. False otherwise.</returns>
 <remarks>Calculates Biomass for all non leading stanzas, CB for non leading stanzas, WeightAtAge, NumberAtAge and BiomassAtAge.
  It does not save the values or update the Ecopath variables that were affected. That is done via cStanzaGroup.Apply() </remarks>
</member>
<member name="M:EwECore.cCore.AppendStanza(System.String,System.Int32[],System.Int32[],System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Adds a stanza group to the data source.
 </summary>
 <param name="strStanzaName">Name to assign to new stanza group.</param>
 <param name="aiGroupID">Zero-based array of <see cref="T:EwECore.cEcoPathGroupInput">Ecopath group IDs</see>
 to assign to a multi-stanza configuration.</param>
 <param name="aiStartAge">Zero-based array of start ages for <paramref name="aiGroupID">these groups</paramref>.</param>
 <param name="iDBID">Database ID assigned to the new stanza group.</param>
 <returns>True if successful.</returns>
 <remarks>The EwE core cannot handle a situation where a stanza configuration
 is defined without having any groups. To avoid this situation, this method
 requires a valid group ID.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveStanza(System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Remove a stanza group from the data source.
 </summary>
 <param name="iStanza">Index of the stanza group to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.AddStanzaLifestage(System.Int32,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Add a group to a stanza configuration as a life stage.
 </summary>
 <param name="iStanza">Index of the stanza group to modify.</param>
 <param name="iGroupDBID">Database if of the Group to assign as life stage.</param>
 <param name="iAge">The age to assign to this life stage.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveStanzaLifestage(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove a life stage from a stanza configuration.
 </summary>
 <param name="iStanza">Index of the stanza configuration to adjust.</param>
 <param name="iGroupDBID">Database ID of group to remove as a life stage.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcosimMonteCarlo">
 <summary>
 Get the Ecosim<see cref="T:EwECore.cMonteCarloManager">Monte Carlo manager</see>.
 </summary>
</member>
<member name="P:EwECore.cCore.EcosimFitToTimeSeries">
 <summary>
 Get the Ecosim <see cref="T:EwECore.cF2TSManager">Fit to Time Series manager</see>.
 </summary>
</member>
<member name="P:EwECore.cCore.nEcotracerScenarios">
 -----------------------------------------------------------------------
 <summary>
 Get the number of available Ecotracer scenarios in the current loaded
 model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcotracerScenarios(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get an Ecotracer scenario.
 </summary>
 <param name="iScenario">
 One-based index of the scenario to obtain [1, <see cref="P:EwECore.cCore.EcotracerScenarioCount">#scenarios</see>].
 </param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.ActiveEcotracerScenarioIndex">
 -----------------------------------------------------------------------
 <summary>
 Gets the index of the active <see cref="T:EwECore.cEcotracerScenario">Ecotracer scenario</see>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.NewEcotracerScenario(System.String,System.String,System.String,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Creates and loads a new Ecotracer scenario.
 </summary>
 <param name="strName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <param name="strAuthor">Author to assign to new scenario.</param>
 <param name="strContact">Contact to assign to new scenario.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.LoadEcotracerScenario(EwECore.cEcotracerScenario@)">
 -----------------------------------------------------------------------
 <summary>
 Load an <see cref="T:EwECore.cEcoSimScenario">Ecotracer scenario</see> from the 
 current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="scenario">The <see cref="T:EwECore.cEcotracerScenario">Scenario</see> to load.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.LoadEcotracerScenario(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Load an <see cref="T:EwECore.cEcotracerScenario">Ecotracer scenario</see> 
 from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="iScenario">Index of the 
 <see cref="T:EwECore.cEcotracerScenario">Scenario</see> in the 
 <see cref="F:EwECore.cCore.m_EcotracerScenarios">Scenario list</see>.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SaveEcotracerScenario(EwECore.cEcotracerScenario)">
 -----------------------------------------------------------------------
 <summary>
 Save the current Ecotracer scenario.
 </summary>
 <param name="scenario">A scenario to overwrite, if any.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SaveEcotracerScenarioAs(System.String,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Save the current ecotracer scenario under a new name.
 </summary>
 <param name="strName"></param>
 <param name="strDescription"></param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveEcotracerScenario(EwECore.cCoreInputOutputBase)">
 -----------------------------------------------------------------------
 <summary>
 Remove a <see cref="T:EwECore.cEcotracerScenario">Ecotracer Scenario</see> from the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="scenario">The <see cref="T:EwECore.cEcotracerScenario">Scenario</see> to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemoveEcotracerScenario(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove a <see cref="T:EwECore.cEcotracerScenario">Ecotracer Scenario</see> from 
 the current <see cref="T:EwECore.DataSources.IEwEDataSource">Data Source</see>.
 </summary>
 <param name="iScenario">Index of the scenario in the 
 <see cref="F:EwECore.cCore.m_EcotracerScenarios">Ecotracer Scenario list</see>.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcotracerModelParameters">
 -----------------------------------------------------------------------
 <summary>
 Get the model parameters object for the current loaded Ecotracer scenario.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcotracerGroupInputs(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get an Ecotracer <see cref="T:EwECore.cEcotracerGroupInput">group input</see>.
 </summary>
 <param name="iGroup">One-based index of the group to obtain. This value
 cannot exceed <see cref="P:EwECore.cCore.nGroups">nGroups</see>.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.InitEcotracerGroups">
 -----------------------------------------------------------------------
 <summary>
 Initialize <see cref="T:EwECore.cEcotracerGroupInput">Ecotracer group</see> objects to
 expose to the interface layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.LoadEcotracerGroups">
 -----------------------------------------------------------------------
 <summary>
 Load Ecotracer group data from the underlying data structures into the 
 interface objects.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.AuxillaryData(EwECore.cValueID)">
 -------------------------------------------------------------------
 <summary>
 Get/set an<see cref="T:EwECore.Auxiliary.cAuxiliaryData">AuxillaryData</see> instance 
 for a given <see cref="T:EwECore.cValueID">value ID</see>.
 </summary>
 <param name="key">The unique <see cref="T:EwECore.cValueID">value ID</see>.</param>
 <returns>An cAuxillaryData instance.</returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.AuxillaryData(System.String)">
 -------------------------------------------------------------------
 <summary>
 Helper method; looks up - or creates when non-existing - an 
 <see cref="T:EwECore.Auxiliary.cAuxiliaryData">AuxillaryData</see> instance for a value.
 </summary>
 <param name="strValueID">The unique <see cref="T:EwECore.cValueID">value ID</see>.</param>
 <returns>An cAuxillaryData instance.</returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.AuxillaryData(EwECore.cCoreInputOutputBase,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Get all auxillary data that related to a given core object.
 </summary>
 <param name="source">The core object to retrieve <see cref="T:EwECore.Auxiliary.cAuxiliaryData">auxillary data</see> for.</param>
 <param name="bIncludeReferrals"><para>Flag stating if also auxillary data 
 needs to be found for other core objects that use this object as a
 secundary index.</para>
 <para>For instance, when searching for group input remarks, setting 
 this flag to false will only return remarks allocated to the group.
 Setting this flag to true will also return remarks for fleet landings
 that refer to the group.</para></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.AuxillaryData(EwEUtils.Core.eDataTypes,System.Int32,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Get all auxillary data that related to a given object.
 </summary>
 <param name="dt">The datatype of the core object.</param>
 <param name="iDBID">The database ID of the core object.</param>
 <param name="bIncludeReferrals"><para>Flag stating if also auxillary data 
 needs to be found for other core objects that use this object as a
 secundary index.</para>
 <para>For instance, when searching for group input remarks, setting 
 this flag to false will only return remarks allocated to the group.
 Setting this flag to true will also return remarks for fleet landings
 that refer to the group.</para></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.LoadPedigreeLevels">
 <summary>
 Load pedigree levels data.
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.LoadPedigreeLevels(EwECore.cPedigreeManager)">
 <summary>
 Load pedigree levels data for a given manager.
 </summary>
 <param name="man">The <see cref="T:EwECore.cPedigreeManager">manager</see> to load.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.LoadPedigree">
 <summary>
 Load pedigree assignments data.
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.LoadPedigree(EwECore.cPedigreeManager)">
 <summary>
 Load pedigree assignments data for a given manager.
 </summary>
 <param name="man">The <see cref="T:EwECore.cPedigreeManager">manager</see> to load.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cCore.GetPedigreeManager(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Returns the pedigree manager for a given variable name.
 </summary>
 <param name="varName"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.IsPedigreeVariableSupported(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 States whether pedigree is supported for a given variable.
 </summary>
 <param name="varName">The variable to check.</param>
 <returns>True if the <paramref name="varName">variable</paramref> is supported.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.PedigreeVariableIndex(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Returns the index of a pedigree variable, or -1 if pedigree is not 
 supported for the variable.
 </summary>
 <param name="varName">The variable to obtain the index for.</param>
 <returns>A one-based index, or -1 if pedigree is not 
 supported for the variable.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.PedigreeVariable(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns the variable at a given <see cref="M:EwECore.cCore.PedigreeVariableIndex(EwEUtils.Core.eVarNameFlags)">variable index</see>.
 </summary>
 <param name="iIndex">One-based of the variable to retrieve.</param>
 <returns>The variable at the given <see cref="M:EwECore.cCore.PedigreeVariableIndex(EwEUtils.Core.eVarNameFlags)">index</see>.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.OnValidated(EwECore.ValueWrapper.cValue@,EwECore.cCoreInputOutputBase@)">
 <summary>
 The one point where cCoreInputOutputBase objects report validated data.
 </summary>
 <param name="value">The value that passed or failed validation.</param>
 <param name="objValidated">The object this value belongs to.</param>
</member>
<member name="M:EwECore.cCore.Validate(EwECore.ValueWrapper.cValue@,EwECore.cVariableMetaData@,System.Int32,System.Int32)">
 <summary>
 Have the core Validate a cValue object
 </summary>
 <param name="ValueObject">cValue Object to validate</param>
 <param name="MetaData">Meta data associated with the cValue object</param>
 <param name="iSecondaryIndex"></param>
 <returns>True if the validation was run. False if the validation routine failed to run</returns>
 <remarks>Ther results of the validation are in the cValue Object</remarks>
</member>
<member name="M:EwECore.cCore.PostVariableValidation(EwECore.ValueWrapper.cValue,EwECore.cCoreInputOutputBase,EwECore.cMessage)">
 <summary>
 A Variable has been validated succesfully but has not yet been stored in the core. This
 method allows other variables, or related variables in other core objects to be affected
 before these values are stored in the core.
 </summary>
 <param name="value">The <see cref="T:EwECore.ValueWrapper.cValue">Value</see> that validated succesfully.</param>
 <param name="obj">The <see cref="T:EwECore.cCoreInputOutputBase">Core I/O object</see> that this value belongs to.</param>
 <param name="msg">The <see cref="T:EwECore.cMessage">main validation message</see> that this logic can attach
 variables to.</param>
</member>
<member name="M:EwECore.cCore.PostVariableUpdated(EwECore.ValueWrapper.cValue@,EwECore.cCoreInputOutputBase@)">
 <summary>
 A Variable has been validated succesfully and has been stored in the core. 
 </summary>
 <param name="value"></param>
 <param name="obj"></param>
 <remarks>This gives the core a chance to update any of it internal data structures after a user has edited a variable. </remarks>
</member>
<member name="M:EwECore.cCore.onChanged(EwECore.ICoreInterface,EwEUtils.Core.eMessageType)">
 -----------------------------------------------------------------------
 <summary>
 Interface for non-<see cref="T:EwECore.cCoreInputOutputBase"/> object to report changes to the core
 </summary>
 <param name="obj">Reference to a <see cref="T:EwECore.ICoreInterface"/> instance
 that has changed its data.</param>
 <param name="TypeOfChange">Flag stating how the object was changed</param>
 <remarks> <para>This provides a public generic interface for any core object to communicate with the core. 
 The nature of the comunication can be defined by the ICoreInterface object.</para> 
 <para>Not all core objects can be fit into a cCoreInputOutputBase interface. This 
 provides a way for these object to comumicate changes to the core.</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.PluginManager">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEPlugin.cPluginManager">Plug-in manager</see> that the core must use
 for accessing plug-ins.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.m_pluginManager_AssemblyAdded(EwEPlugin.cPluginAssembly)">
 -----------------------------------------------------------------------
 <summary>
 Plug-in manager event handler, caught to provide message feedback about loaded plug-in assemblies.
 </summary>
 <param name="paAdded">A loaded <see cref="T:EwEPlugin.cPluginAssembly">plug-in assembly</see>.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.m_pluginManager_AssemblyRemoved(EwEPlugin.cPluginAssembly)">
 -----------------------------------------------------------------------
 <summary>
 Plug-in manager event handler, caught to provide message feedback about removed plug-in assemblies.
 </summary>
 <param name="paRemoved">A removed <see cref="T:EwEPlugin.cPluginAssembly">plug-in assembly</see>.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.OnPluginException(EwEPlugin.cPluginException)">
 -----------------------------------------------------------------------
 <summary>
 The Plug-in Manager has caught an exception thrown by a plugin.
 </summary>
 <param name="ex">The <see cref="T:EwEPlugin.cPluginException"/> that was thrown.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CanExecutePlugin(EwEUtils.Core.eCoreExecutionState)">
 -----------------------------------------------------------------------
 <summary>
 Callback for <see cref="T:EwEPlugin.cPluginManager.CanExecutePlugin">Plug-in manager CanExecutePlugin delegate</see>,
 which the plug-in manager must invoke to test if a plug-in can be enabled by testing a given 
 <see cref="T:EwEUtils.Core.eCoreExecutionState">Core execution state</see> against the
 <see cref="M:EwECore.cCoreStateMonitor.CoreExecutionState">current core execution state</see>.
 </summary>
 <param name="coreExecutionState">The <see cref="T:EwEUtils.Core.eCoreExecutionState">Core execution state</see> to test.</param>
 <returns>True if the current core state enables to tested core execution state.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.m_StateMonitor_CoreExecutionStateEvent(EwECore.cCoreStateMonitor)">
 -----------------------------------------------------------------------
 <summary>
 Event handler, triggered when the <see cref="E:EwECore.cCoreStateMonitor.CoreExecutionStateEvent">Core State Monitor</see>
 execution state has changed.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.OnEconomicDataPluginEnabled">
 -----------------------------------------------------------------------
 <summary>
 The enabled state of an Economic plugin has changed (e.g. ValueChain)
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.CreateSearchManagers">
 <summary>
 Build and initialize the search managers
 </summary>
</member>
<member name="M:EwECore.cCore.AddPedigreeLevel(EwEUtils.Core.eVarNameFlags,System.Int32,System.String,System.Int32,System.String,System.Single,System.Single,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add a pedigree level to a loaded EwE model.
 </summary>
 <param name="varName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable to assign new level to.</see></param>
 <param name="iPosition">One-based position in the list of pedigree levels for this particular <paramref name="varName"/></param>
 <param name="strName">Name for the new level.</param>
 <param name="iColor">Color for the new level.</param>
 <param name="strDescription">Description for the new level.</param>
 <param name="sIndexValue"></param>
 <param name="sConfidence"></param>
 <param name="iDBID"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.RemovePedigreeLevel(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove an existing pedigree level.
 </summary>
 <param name="iLevelDBID">The <see cref="P:EwECore.cCoreInputOutputBase.DBID"/> of the level to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.MovePedigreeLevel(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Move a pedigree level to a new location in the pedigree levels list.
 </summary>
 <param name="iLevelDBID">The <see cref="P:EwECore.cCoreInputOutputBase.DBID"/> of the level to move.</param>
 <param name="iIndex">The new posiition to move the level to.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCore.SampleManager">
 -----------------------------------------------------------------------
 <summary>
 Returns the only instance of the <see cref="T:EwECore.Samples.cEcopathSampleManager"/>.
 </summary>
 <returns>
 The only instance of the <see cref="T:EwECore.Samples.cEcopathSampleManager"/>.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCore.EcoFunction">
 <summary>
 Get the single <see cref="T:EwECore.cEcoFunctions"/> instance.
 </summary>
</member>
<member name="P:EwECore.cCore.nEnvironmentalLayers">
 <inheritdocs cref="P:EwECore.cCore.nEnvironmentalDriverLayers"/>
</member>
<member name="M:EwECore.cCore.AddTimeSeries(System.String,System.Int32,EwECore.eTimeSeriesType,System.Single,System.Single[],System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add an Ecosim Time Series to the data source.
 </summary>
 <param name="strName">Name of the new Time Series to add.</param>
 <param name="iPool">Index of item to assign this TS to.</param>
 <param name="timeSeriesType"><see cref="T:EwECore.eTimeSeriesType">Type</see> of the time series.</param>
 <param name="asValues">Initial values to set in the TS.</param>
 <param name="iDBID">Database ID assigned to the new TS.</param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cCoreSettings">
 ---------------------------------------------------------------------------
 <summary>
 Storage class for system-wide, model independent EwE core settings.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreSettings.m_bAutosave">
 <summary>Autosave flags</summary>
</member>
<member name="P:EwECore.cCoreSettings.Autosave(EwEUtils.Core.eAutosaveTypes)">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether a component is allowed to auto-save.
 </summary>
 <param name="t">The <see cref="T:EwEUtils.Core.eAutosaveTypes">auto-save enabled component</see>
 to enable or disable.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreSettings.AutosaveHeaders">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether a component is allowed to auto-save.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreSettings.OutputPath">
 -----------------------------------------------------------------------
 <summary>
 Get/set the core output path.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreSettings.BackupFileMask">
 -----------------------------------------------------------------------
 <summary>
 Get/set the model backup path mask.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreSettings.Author">
 -----------------------------------------------------------------------
 <summary>
 Get/set the default EwE author.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreSettings.Contact">
 -----------------------------------------------------------------------
 <summary>
 Get/set the default EwE author contact.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreSettings.ThreatCount">
 -----------------------------------------------------------------------
 <summary>
 Get/set the number of threads that can be used by computations.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cCoreStateManager">
 <summary>
 Manager class used to bring the core execution state up to date.
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cCoreStateManager.LoadState(EwEUtils.Core.eCoreExecutionState)">
 <summary>
 Bring the core state up to the requested execution state
 </summary>
 <param name="ExecutionState">State to bring the core up to</param>
 <returns>True if successful. False otherwise.</returns>
</member>
<member name="M:EwECore.cCoreStateManager.updateDietComp">
 <summary>
 Copy the Ecopath dietcomp matrix (DC(ngroup,ngroups)) into the Ecosim dietcomp matrix (SimDC(ngroups,ngroups))
 </summary>
 <returns></returns>
 <remarks>This is not really an Execution State thing... but hey it has to go somewhere...</remarks>
</member>
<member name="T:EwECore.cCoreStateMonitor">
 ---------------------------------------------------------------------------
 <summary>
 Monitor that distributes Core execution state change events and Core data
 state change events.
 </summary>
 <remarks>
 <para>The following class tracks core execution state changes:</para>
 <code>
 Class StateTracker
 
     Public Sub New(ByRef sm as cCoreStateMonitor)
         ' Hook up to core state monitor
        AddHandler sm.CoreExecutionStateEvent, AddressOf OnCoreExecutionStateChange
     End Sub
 
     Private Sub OnCoreExecutionStateChange(core As cCore, iState As eCoreExecutionState)
        ' Handle core state changes
        Console.WriteLine("State tracker: core {0} state has changed to {1}", core, iState)
     End Sub

 End Class
 </code>
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreStateMonitor.m_core">
 <summary>Reference to the monitored core.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_sync">
 <summary>Sync object for delivering events.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_iExecutionState">
 <summary>Core execution state flag.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_iEcopathState">
 <summary>Ecopath execution state flag.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_iEcosimState">
 <summary>Ecosim execution state flag.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_iEcospaceState">
 <summary>Ecospace execution state flag.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_iEcotracerState">
 <summary>Ecotracer execution state flag.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_iEcotracerResultState">
 <summary>Ecotracer execution result state flag.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_searchmode">
 <summary>Flag stating the current search mode.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_bIsBatchLocked">
 <summary>Flag stating that a batch lock is active.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_bDatasourceModified">
 <summary>Flag indicating whether the datasource contains unsaved changes that do not affect the running model and its scenarios.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_bEcopathModified">
 <summary>Flag indicating whether the ecopath model data contains unsaved changes.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_bEcosimModified">
 <summary>Flag indicating whether the ecosim scenario data contains unsaved changes.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_bEcospaceModified">
 <summary>Flag indicating whether the ecospace scenario data contains unsaved changes.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_bEcotracerModified">
 <summary>Flag indicating whether the ecotracer scenario data contains unsaved changes.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_bPluginModified">
 <summary>Flag indicating whether plugin data contains unsaved changes.</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_ccPending">
 <summary>Pending core state invalidations, kept at bay while core was running</summary>
</member>
<member name="F:EwECore.cCoreStateMonitor.m_bEcopathBalanced">
 <summary>Flag indicating whether the Ecopath last balanced successfully.</summary>
</member>
<member name="M:EwECore.cCoreStateMonitor.#ctor(EwECore.cCore)">
 -----------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 <param name="core">The <see cref="T:EwECore.cCore">Core</see> that is monitored.</param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cCoreStateMonitor.CoreExecutionStateDelegate">
 -----------------------------------------------------------------------
 <summary>Delegate, invoked to broadcast a core execution state change event.</summary>
 <param name="statemonitor">A reference to the EwE <see cref="T:EwECore.cCore">Core</see> which
 execution state changed.</param>
 -----------------------------------------------------------------------
</member>
<member name="E:EwECore.cCoreStateMonitor.CoreExecutionStateEvent">
 -----------------------------------------------------------------------
 <summary>
 The core execution state change event.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreStateMonitor.m_executionStateHandlers">
 <summary>List of all subscribed core execution state event listeners.</summary>
</member>
<member name="T:EwECore.cCoreStateMonitor.CoreDataStateDelegate">
 -----------------------------------------------------------------------
 <summary>Delegate, invoked to broadcast a core data state change event.</summary>
 <param name="coreStateMonitor">THe monitor sending the event.</param>
 -----------------------------------------------------------------------
</member>
<member name="E:EwECore.cCoreStateMonitor.CoreDataStateEvent">
 -----------------------------------------------------------------------
 <summary>
 The core data state change event.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreStateMonitor.m_dataStateHandlers">
 <summary>List of all subscribed core data state event listeners.</summary>
</member>
<member name="M:EwECore.cCoreStateMonitor.CalcExecutionState(EwEUtils.Core.eCoreExecutionState,EwEUtils.Core.eCoreExecutionState,EwEUtils.Core.eCoreExecutionState,EwEUtils.Core.eCoreExecutionState,EwEUtils.Core.TriState)">
 -----------------------------------------------------------------------
 <summary>
 Calculates and updates the Core execution state. A 
 <see cref="E:EwECore.cCoreStateMonitor.CoreExecutionStateEvent">CoreExecutionStateEvent</see> is
 broadcasted when the Core execution state changes.
 </summary>
 <param name="tsForceUpdate">Flag stating whether an update should be sent:
 true    - force, 
 default - send update when changed, 
 false   - do NOT send update
 </param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.UpdateDataState(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,EwEUtils.Core.TriState)">
 -----------------------------------------------------------------------
 <summary>
 Calculates and updates the Core data state. A 
 <see cref="E:EwECore.cCoreStateMonitor.CoreDataStateEvent">CoreDataStateEvent</see> is
 broadcasted when the data state of either Ecopath or Ecosim changes.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.UpdateExecutionState(EwEUtils.Core.eCoreComponentType,EwEUtils.Core.TriState)">
 -----------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="cc">The core component that changed.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcopathLoaded(System.Boolean,EwEUtils.Core.TriState)">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecopath model is loaded
 or unloaded.
 </summary>
 <param name="bHasModel">Flag indicating whether an Ecopath model is
 loaded (True) or unloaded (False).</param>
 <param name="tsForceUpdate">Flag stating whether an update should be sent:
 true    - force, 
 default - send update when changed, 
 false   - do NOT send update
 </param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcopathInitialized">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecopath model is initialized.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcopathRun">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecopath model is started.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcopathCompleted(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecopath model has
 completed its parameter estimation.
 </summary>
 <param name="bEcopathBalanced">Flag, states whether Ecopath balanced.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetPSDCompleted">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecopath model is started.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcoSimLoaded(System.Boolean,EwEUtils.Core.TriState,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecosim scenario is loaded
 or unloaded.
 </summary>
 <param name="bHasScenario">Flag indicating whether an Ecosim scenario is
 loaded (True) or unloaded (False).</param>
 <param name="tsForceUpdate">Flag stating whether an update should be sent:
 true    - force, 
 default - send update when changed, 
 false   - do NOT send update
 </param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcoSimInitialized">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecosim scenario is initialized.
 or unloaded.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcosimRun">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecosim run is started.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcosimCompleted(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecosim scenario has 
 completed its timesteps.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcospaceLoaded(System.Boolean,EwEUtils.Core.TriState,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecospace scenario is loaded
 or unloaded.
 </summary>
 <param name="bHasScenario">Flag indicating whether an Ecospace scenario is
 loaded (True) or unloaded (False).</param>
 <param name="tsForceUpdate">Flag stating whether an update should be sent:
 true    - force, 
 default - send update when changed, 
 false   - do NOT send update
 </param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcospaceInitialized">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecospace scenario is initialized.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcospaceRun">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecospace scenario is started.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcospaceCompleted(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecosim scenario has 
 completed its timesteps.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetEcotracerLoaded(System.Boolean,EwEUtils.Core.TriState,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 State change entry point; to be called when an Ecotracer scenario is loaded
 or unloaded.
 </summary>
 <param name="bHasScenario">Flag indicating whether an Ecotracer scenario is
 loaded (True) or unloaded (False).</param>
 <param name="tsForceUpdate">Flag stating whether an update should be sent:
 true    - force, 
 default - send update when changed, 
 false   - do NOT send update
 </param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetIsSearching(EwECore.eSearchModes)">
 -----------------------------------------------------------------------
 <summary>
 Set the searching state of the core state monitor.
 </summary>
 <param name="searchmode"><see cref="T:EwECore.eSearchModes">Search mode state flag</see>.</param>
 <remarks>Use this with care!!</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetIsBatchLocked(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Set the batch lock state of the core state monitor.
 </summary>
 <param name="bIsBatchLocked">State flag to set</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SetIsPaused">
 -----------------------------------------------------------------------
 <summary>
 This only fires off a core execution state event to allow depending 
 elements to check the <see cref="M:EwECore.cCoreStateMonitor.IsPaused"/> state.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsModified">
 -----------------------------------------------------------------------
 <summary>
 Returns whether there are ANY unsaved changes.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsBusy">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the core is busy. Either a model is running, a search
 is in progress, or a batch operation is in progress.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsPaused">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the core is paused while <see cref="M:EwECore.cCoreStateMonitor.IsBusy"/>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcopathLoaded">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecopath model has been loaded.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcopathInitialized">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecopath model has been initialized.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsEcopathRunning">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecopath model is running.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcopathRan">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecopath model has completed succesfully.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcopathBalanced">
 -----------------------------------------------------------------------
 <summary>
 If an Ecopath model has completed succesfully, returns the last reported
 balanced state.
 </summary>
 <seealso cref="M:EwECore.cCoreStateMonitor.HasEcopathRan"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasPSDRan">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the Ecopath PSD model has completed succesfully.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcosimLoaded">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecosim scenario has been loaded.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcosimInitialized">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecosim scenario has been initialized.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsEcosimRunning">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecosim scenario is running.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcosimRan">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecosim scenario has completed its timesteps succesfully.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcotracerRanForEcosim">
 -----------------------------------------------------------------------
 <summary>
 Returns whether Ecotracer results have been computed for the last 
 <see cref="M:EwECore.cCoreStateMonitor.HasEcosimRan">Ecosim run</see> .
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcospaceLoaded">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecospace scenario has been loaded.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcospaceInitialized">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecospace scenario has been initialized.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsEcospaceRunning">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecospace scenario is running.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcospaceRan">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecospace scenario has completed its timesteps succesfully.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcotracerRanForEcospace">
 -----------------------------------------------------------------------
 <summary>
 Returns whether Ecotracer results have been computed for the last 
 <see cref="M:EwECore.cCoreStateMonitor.HasEcospaceRan">Ecospace run</see> .
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsSearching">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the core is searching. To find what search is running
 refer to <see cref="M:EwECore.cCoreStateMonitor.SearchMode"/>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.SearchMode">
 -----------------------------------------------------------------------
 <summary>
 Returns the current <see cref="T:EwECore.eSearchModes"/>.
 </summary>
 <returns>The current <see cref="T:EwECore.eSearchModes"/>.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsBatchLocked">
 -----------------------------------------------------------------------
 <summary>
 Returns whether a batch lock is active on the core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsExecutionStateSuperceded(EwEUtils.Core.eCoreExecutionState)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the current core execution state equals or exceeds
 a given state.
 </summary>
 <param name="iState">The <see cref="T:EwEUtils.Core.eCoreExecutionState">core execution state</see> to check.</param>
 <remarks>
 <para>The core execution states system is described by a sequence of 
 states that supercede earlier states.</para>
 <para>For instance, the eCoreExecutionState EcosimReady can only 
 occur when an underlying Ecopath model has been loaded and when
 the Ecopath model as completed a successful run: the state
 <see cref="F:EwEUtils.Core.eCoreExecutionState.EcosimLoaded">EcosimLoaded</see> thus supercedes
 <see cref="F:EwEUtils.Core.eCoreExecutionState.EcopathLoaded">EcopathLoaded</see> and
 <see cref="F:EwEUtils.Core.eCoreExecutionState.EcopathCompleted">EcopathCompleted</see>.</para>
 <para>Please be careful when interpreting results from this method; do
 not confuse superceding with implying! In the aforementioned example, 
 the EcosimReady state also supercedes the state that descibes that an 
 Ecopath model has been modified by the user, and the state that describes
 that an Ecopath model is not loaded yet.</para>
 <para>In some case, assuming that superceded states are also current 
 states may lead to serious nonsense.</para>
 </remarks>
 <note_to_self>
 Wow, that's a lot of talking for a one-line function implementation...
 </note_to_self>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.HasEcotracerLoaded">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an Ecotracer scenario has been loaded.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.CoreExecutionState">
 -----------------------------------------------------------------------
 <summary>
 Returns the current EwE <see cref="T:EwECore.cCore">Core</see> Execution state.
 </summary>
 <returns>A <see cref="T:EwEUtils.Core.eCoreExecutionState">eCoreExecutionState</see>
 value indicating the Core execution state.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsDatasourceModified">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the Datasource contains changes that have not 
 been saved, which will not influence the running model and its scenarios.
 </summary>
 <returns>True if there are unsaved changes, False otherwise.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsEcopathModified">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the Ecopath model data contains changes that have not 
 been saved.</summary>
 <returns>True if there are unsaved changes, False otherwise.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsEcosimModified">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the Ecosim scenario data contains changes that have not 
 been saved.</summary>
 <returns>True if there are unsaved changes, False otherwise.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsEcospaceModified">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the Ecospace scenario data contains changes that have not 
 been saved.</summary>
 <returns>True if there are unsaved changes, False otherwise.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsEcotracerModified">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the Ecotracer scenario data contains changes that have not 
 been saved.</summary>
 <returns>True if there are unsaved changes, False otherwise.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreStateMonitor.IsPluginModified">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the plug-ins contains data changes that have not 
 been saved.</summary>
 <returns>True if there are unsaved changes, False otherwise.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEwEModel">
 <summary>
 Class to encapsulate and expose ecopath model for a single model
 </summary>
</member>
<member name="P:EwECore.cEwEModel.FirstYear">
 <summary>
 Get/set the first year that a model represents.
 </summary>
</member>
<member name="P:EwECore.cEwEModel.NumYears">
 <summary>
 Get/set the number of years that a model represents.
 </summary>
</member>
<member name="P:EwECore.cEwEModel.South">
 <summary>
 Get/set the southern extent of the model bounding box in decimal degrees.
 </summary>
</member>
<member name="P:EwECore.cEwEModel.North">
 <summary>
 Get/set the northern extent of the model bounding box in decimal degrees.
 </summary>
</member>
<member name="P:EwECore.cEwEModel.West">
 <summary>
 Get/set the western extent of the model bounding box in decimal degrees.
 </summary>
</member>
<member name="P:EwECore.cEwEModel.East">
 <summary>
 Get/set the eastern extent of the model bounding box in decimal degrees.
 </summary>
</member>
<member name="P:EwECore.cEwEModel.PosTopLeft">
 <summary>
 Get/set the top left extent of the model bounding box in decimal degrees.
 </summary>
</member>
<member name="P:EwECore.cEwEModel.PosBottomRight">
 <summary>
 Get/set the bottom right extent of the model bounding box in decimal degrees.
 </summary>
</member>
<member name="P:EwECore.cEwEModel.LastSaved">
 <summary>
 Get/set the Julian date the model was last saved.
 </summary>
</member>
<member name="P:EwECore.cEwEScenario.LastSaved">
 <summary>
 Get/set the Julian date the scenario was last saved.
 </summary>
</member>
<member name="T:EwECore.cOperatorManager">
 <summary>
 Manages the operators
 </summary>
 <remarks>Operators are use for variable validation </remarks>
</member>
<member name="M:EwECore.cOperatorManager.getOperator(EwECore.eOperators)">
 <summary>
 Get the operator object for this eOperators type
 </summary>
 <param name="OperatorType"></param>
 <returns>A cOperatorBase object of the type specified.</returns>
 <remarks>Operators are stored in a dictionary that is populated on the first call. 
 Calls to getOperator(eOperators) of the same type will return the same cOperatorBase reference.</remarks>
</member>
<member name="T:EwECore.cOperatorBase">
 <summary>
 Base class for equality comparison of values
 </summary>
 <remarks>Use for data validation</remarks>
</member>
<member name="T:EwECore.cCoreEnumNamesIndex">
 ---------------------------------------------------------------------------
 <summary>
 Helper class; creates and maintains quick lookup tables of string 
 representations of enumerated types defined in the Core.
 </summary>
 <remarks>
 The dotNET mechanism for converting enum values to a string representation is
 dreadfully slow. This class provides a redundant but bloody fast way to
 find this string representation by indexing all string representations once.
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreEnumNamesIndex.__inst__">
 <summary>Singleton instance</summary>
</member>
<member name="M:EwECore.cCoreEnumNamesIndex.GetInstance">
 -----------------------------------------------------------------------
 <summary>
 Get the one and only instance of this class.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreEnumNamesIndex.#ctor">
 -----------------------------------------------------------------------
 <summary>
 Private constructor to enforce singleton.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreEnumNamesIndex.m_dictVarEnumToName">
 <summary>Index of eVarNameFlags enum names, by enum value.</summary>
</member>
<member name="F:EwECore.cCoreEnumNamesIndex.m_dictVarNameToEnum">
 <summary>Index of eVarNameFlags enum values, by name.</summary>
</member>
<member name="F:EwECore.cCoreEnumNamesIndex.m_dictDataTypeEnumToName">
 <summary>Index of eDataType enum names, by enum value.</summary>
</member>
<member name="F:EwECore.cCoreEnumNamesIndex.m_dictDataTypeNameToEnum">
 <summary>Index of eDataType enum values, by name.</summary>
</member>
<member name="M:EwECore.cCoreEnumNamesIndex.IndexEnum(System.Type,System.Collections.Generic.Dictionary{System.Int32,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Int32}@)">
 -----------------------------------------------------------------------
 <summary>
 Make a name index of a given enumerated type.
 </summary>
 <param name="t">The enumerated type to generate the enum name index for.</param>
 <param name="dict1">A dictionary to store the value/name pairs in.</param>
 <param name="dict2">A dictionary to store the name/value pairs in.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreEnumNamesIndex.GetVarName(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Returns a eVarNameFlags enum name.
 </summary>
 <param name="e">The <see cref="T:EwEUtils.Core.eVarNameFlags">eVarNameFlags</see> 
 enumerated value to retrieve the name for.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreEnumNamesIndex.GetVarName(System.String)">
 -----------------------------------------------------------------------
 <summary>
 Returns a eVarNameFlags enum value.
 </summary>
 <param name="strVarName">The string representation for a variable name.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreEnumNamesIndex.GetDataTypeName(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <summary>
 Returns a eDataTypes enum name.
 </summary>
 <param name="e">The <see cref="T:EwEUtils.Core.eDataTypes">eDataTypes</see> 
 enumerated value to retrieve the name for.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreEnumNamesIndex.GetDataType(System.String)">
 -----------------------------------------------------------------------
 <summary>
 Returns a eDataTypes enum value.
 </summary>
 <param name="strDataType">The string representation for a data type.</param>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.eProgressState.Start">
 <summary>Process has just started this is the first call</summary>
</member>
<member name="F:EwECore.eProgressState.Running">
 <summary>Process is running </summary>
</member>
<member name="F:EwECore.eProgressState.Finished">
 <summary>Process has finished </summary>
</member>
<member name="T:EwECore.eEstimateParameterFor">
 ---------------------------------------------------------------------------
 <summary>
 Enumerated type that indicates for which purpose Ecopath parameters are being estimated.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.eEstimateParameterFor.ParameterEstimation">
 <summary>
 Indicates that parameters are being estimated for the 
 main parameter estimation routine.
 </summary>
</member>
<member name="F:EwECore.eEstimateParameterFor.Sensitivity">
 <summary>
 Indicates that parameters are being estimated for the 
 sensitivity loop.
 </summary>
</member>
<member name="T:EwECore.eOperators">
 ---------------------------------------------------------------------------
 <summary>
 Enumerated type indicating logical operators.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.eOperators.LessThan">
 <summary>
 Logical 'less than' operator.
 </summary>
</member>
<member name="F:EwECore.eOperators.LessThanOrEqualTo">
 <summary>
 Logical 'less than or equal to' operator.
 </summary>
</member>
<member name="F:EwECore.eOperators.GreaterThan">
 <summary>
 Logical 'greater than' operator.
 </summary>
</member>
<member name="F:EwECore.eOperators.GreaterThanOrEqualTo">
 <summary>
 Logical 'greater than or equal to' operator.
 </summary>
</member>
<member name="F:EwECore.eOperators.EqualTo">
 <summary>
 Logical 'equal to' operator.
 </summary>
</member>
<member name="T:EwECore.ePrimaryProductionTypes">
 ---------------------------------------------------------------------------
 <summary>
 Enumerated type specifying Group Primary Production types
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.eCostIndex">
 ---------------------------------------------------------------------------
 <summary>
 Enumerator for CostPct(nFleets, 3) array, 
 i.e. fleet.FixedCost = CostPct(1, eCostIndex.Fixed) is the fixed cost for 
 variable 'fleet' at index 1.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.eSpaceResultsGroups">
 ---------------------------------------------------------------------------
 <summary>
 Index of results from Ecospace saved over time by group
 </summary>
 <remarks>Index to data stored in the <see cref="F:EwECore.cEcospaceDataStructures.ResultsByGroup">cEcospaceDataStructures.ResultsByGroup(eSpaceResultsGroups,group,time) array</see></remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.eSpaceResultsGroups.TotalLoss">
 <summary>Total Loss in tons summed across all cells. Not KM2</summary>
</member>
<member name="T:EwECore.eTimeSeriesType">
 ---------------------------------------------------------------------------
 <summary>
 Types of time series
 </summary>
 <remarks>The enumerated values follow the original EwE5 scheme.</remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.eTimeSeriesType.BiomassRel">
 <summary>Relative biomass, reference</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.BiomassAbs">
 <summary>Absolute biomass, reference</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.BiomassForcing">
 <summary>Biomass forcing, forcing</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.TimeForcing">
 <summary>Time forcing, forcing</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.DiscardProportion">
 <summary>Absolute discard proportion (fleet x group, driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.DiscardMortality">
 <summary>Absolute discard mortality rate (fleet x group, driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.Landings">
 <summary>Absolute landings (fleet x group, reference)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.Discards">
 <summary>Absolute discards (fleet x group, reference)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.Catchabilities">
 <summary>Catchabilities (fleet x group, driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.OffVesselPrice">
 <summary>Absolute off-vessel price (by fleet x group x driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.OffVesselPriceRel">
 <summary>Relative off-vessel price (by fleet x group x driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.EffortCost">
 <summary>Effort cost multiplier (by fleet x driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.EffortCostRel">
 <summary>Effort cost multiplier (by fleet x driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.SailCost">
 <summary>Absolute Sailing cost (by fleet x driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.SailCostRel">
 <summary>Relative sailing cost (multiplier; by fleet x driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.FixedCost">
 <summary>Absolute fixed cost (by fleet x driver)</summary>
</member>
<member name="F:EwECore.eTimeSeriesType.FixedCostRel">
 <summary>Fixed cost multiplier (by fleet x driver)</summary>
</member>
<member name="T:EwECore.eTimeSeriesCategoryType">
 -----------------------------------------------------------------------
 <summary>
 Enumerated type stating whether a time series is 
 <see cref="T:EwECore.cGroupTimeSeries">group-related</see>,  
 <see cref="T:EwECore.cFleetTimeSeries">fleet-related</see> or is a
 <see cref="T:EwECore.cForcingFunction">forcing function</see>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.eTimeSeriesCategoryType.NotSet">
 <summary>Unknown time series category.</summary>
</member>
<member name="F:EwECore.eTimeSeriesCategoryType.Group">
 <summary>Group-related time series category.</summary>
</member>
<member name="F:EwECore.eTimeSeriesCategoryType.Fleet">
 <summary>Fleet-related time series category.</summary>
</member>
<member name="F:EwECore.eTimeSeriesCategoryType.Forcing">
 <summary>Forcing function time series category.</summary>
</member>
<member name="F:EwECore.eTimeSeriesCategoryType.FleetGroup">
 <summary>Fleet-related time series category, indexed by group.</summary>
</member>
<member name="T:EwECore.eTimeSeriesAliases">
 -----------------------------------------------------------------------
 <summary>
 Enumerated type, defining aliases for <see cref="T:EwECore.eTimeSeriesType">time series types</see>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.eTSDataSetInterval">
 -----------------------------------------------------------------------
 <summary>
 Enumerated type, defining time series data point spacing types.
 </summary>
 <note>
 Enum are assigned fixed values because this enum is persistent in the
 EwE database.
 </note>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.ePSDMortalityTypes">
 -----------------------------------------------------------------------
 <summary>
 Mortality types for PSD analysis
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.ePSDMortalityTypes.GroupZ">
 <summary>Group P/B</summary>
</member>
<member name="F:EwECore.ePSDMortalityTypes.Lorenzen">
 <summary>Lorenzen-variable</summary>
</member>
<member name="T:EwECore.eClimateTypes">
 -----------------------------------------------------------------------
 <summary>
 The three climate zones for PSD analysis.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.eClimateTypes.Tropical">
 <summary>Tropical climate</summary>
</member>
<member name="F:EwECore.eClimateTypes.Temperate">
 <summary>Temperate climate</summary>
</member>
<member name="F:EwECore.eClimateTypes.Polar">
 <summary>Polar climate</summary>
</member>
<member name="T:EwECore.eDiversityIndexType">
 <summary>
 Selected biodiversity index to display in the UI
 </summary>
</member>
<member name="T:EwECore.ValueWrapper.eValueTypes">
 <summary>
 Classes used to wrap variables and there associated data used be the ICoreInputOuput objects
 </summary>
 <remarks>
 These classes are defined as Friend so that they are not exposed outside of the core
 </remarks>
 <history>
 <revision>jb 17/mar/06 Added Length of array size</revision>
 </history>
</member>
<member name="T:EwECore.ValueWrapper.cValue">
 <summary>
 Wraps the Value, Status, Name and Type of a variable used be an ICoreInputOuput object into one place.
 </summary>
 <remarks>
 cValue acts as the base class for other types of value object.
 ToDo:: the varType enumerator could be change to being a System.Type object.
 </remarks>
</member>
<member name="F:EwECore.ValueWrapper.cValue.m_validator">
 <summary>
 Validator supplied in the constructor of the object.
 </summary>
 <remarks>This validator can be specific to the this variable type or it can be the default supplied by the ValidatorManger.</remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValue.#ctor(EwECore.cCore)">
 <summary>
 Default constructor.
 </summary>
 <remarks>
 A default value will not be stored, will affect the core run state.
 A default value has no metadata and no validation.
 </remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValue.#ctor(EwECore.cCore,System.Object,EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eStatusFlags,EwECore.ValueWrapper.eValueTypes,EwECore.cVariableMetaData,EwECore.cValidatorDefault)">
 <summary>
 Constructs a new value instance.
 </summary>
 <param name="Value">The object to hold the value.</param>
 <param name="VarName">The variable name representing the value.</param>
 <param name="Status">Bitwise <see cref="T:EwEUtils.Core.eStatusFlags">status flag pattern</see> to initialize the value with.</param>
 <param name="VarType"><see cref="T:EwECore.ValueWrapper.eValueTypes">Value type</see>.</param>
 <param name="MetaData"><see cref="T:EwECore.cVariableMetaData">Value metadata</see> to use.</param>
</member>
<member name="P:EwECore.ValueWrapper.cValue.Index">
 <summary>
 Get/set the Index of a Value
 </summary>
</member>
<member name="M:EwECore.ValueWrapper.cValue.SetSize">
 <summary>
 Set the size of the array to the new Value based on the CoreCounterDelegate passed in via the consturctor
 </summary>
 <returns></returns>
 <remarks>This is for array value objects only.</remarks>
</member>
<member name="P:EwECore.ValueWrapper.cValue.Status(System.Int32,System.Int32)">
 <summary>
 Get/set the status flag for a Value.
 </summary>
 <param name="iSecondIndex">Optional value index.</param>
</member>
<member name="P:EwECore.ValueWrapper.cValue.ValidationStatus(System.Int32)">
 <summary>
 Get/set the last valation result for a Value.
 </summary>
 <param name="iIndex">Optional value index.</param>
</member>
<member name="P:EwECore.ValueWrapper.cValue.Value(System.Int32,System.Int32)">
 <summary>
 Get/set the actual value of a Value.
 </summary>
 <param name="iIndex">Optional value index.</param>
</member>
<member name="P:EwECore.ValueWrapper.cValue.Stored">
 <summary>
 Flag stating whether a variable can be stored in the database.
 </summary>
</member>
<member name="P:EwECore.ValueWrapper.cValue.AffectsRunState">
 <summary>
 Flag stating whether a variable will affect the core run state when it is modified.
 </summary>
</member>
<member name="P:EwECore.ValueWrapper.cValue.Length">
 <summary>
 Number of elements in the underlying array for an array object
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValue.setStatusFlag(System.Int32,System.Int32)">
 <summary>
 Run the validator to set the status flag without setting the value
 </summary>
 <param name="iSecondIndex"></param>
 <remarks>This is use be the cCoreInputOutputBase to set the status flags of all its values </remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValue.convertEmptyInputs(System.Object)">
 <summary>
 Convert from some kind of NULL/Empty into a value of some sort
 </summary>
 <param name="newValue"></param>
 <returns></returns>
 <remarks>This is because different types of controls pass empty values differently</remarks>
</member>
<member name="T:EwECore.ValueWrapper.cValueArray">
 <summary>
 Provides an implemention of cValue that is used for Array values
 </summary>
 <remarks>At this time the internal array is weak typed as an object</remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValueArray.#ctor(EwECore.cCore,EwECore.ValueWrapper.eValueTypes,EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eStatusFlags,EwEUtils.Core.eCoreCounterTypes)">
 <summary>
 Construct a value object of array data that does not do data validation
 </summary>
 <param name="VarName">eVarNameFlags of the data to hold</param>
 <param name="Status">Default status</param>
 <param name="CounterType">Type of core counter to use for dimensioning the array</param>
</member>
<member name="M:EwECore.ValueWrapper.cValueArray.SetSize">
 <summary>
 Set the size of the array to the value in the cores data counter i.e. nGroups
 </summary>
 <returns></returns>
 <remarks>This will only dimension the array data if the core counter is of a different size then the existing data.
  Once the data has been resized it will need to be repopulated.</remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValueArray.Validate(System.Object@,System.Int32,System.Int32)">
 <summary>
 Validate an array value object
 </summary>
 <param name="NewValue"></param>
 <param name="iSecondIndex"></param>
 <returns></returns>
 <remarks>This can not be handled by the cValue base class because the underlying data is handled differently. Array values are stored in an array (duh...)</remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValueArrayIndexed.#ctor(EwECore.cCore,EwECore.ValueWrapper.eValueTypes,EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eStatusFlags,EwEUtils.Core.eCoreCounterTypes,System.Int32,EwEUtils.Core.eDataTypes)">
 <summary>
 Constructor with no validation object
 </summary>
 <param name="theValueType"></param>
 <param name="VarName"></param>
 <param name="Status"></param>
 <param name="CounterType"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValueArrayIndexed.SetSize">
 <summary>
 Set the size of the array to the value in the cores data counter i.e. nGroups
 </summary>
 <returns></returns>
 <remarks>This will only dimension the array data if the core counter is of a different size then the existing data.
  Once the data has been resized it will need to be repopulated.</remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValueArrayTripleIndex.SetSize">
 <summary>
 Set the size of the array to the value in the cores data counter i.e. nGroups
 </summary>
 <returns></returns>
 <remarks>This will only dimension the array data if the core counter is of a different size then the existing data.
  Once the data has been resized it will need to be repopulated.</remarks>
</member>
<member name="P:EwECore.ValueWrapper.cValueArrayTripleIndex.Value(System.Int32,System.Int32)">
 <summary>
 Get/set the actual value of a Value.
 </summary>
 <param name="iIndex2">Optional value index.</param>
</member>
<member name="M:EwECore.ValueWrapper.cValueArrayTripleIndex.Validate(System.Object@,System.Int32,System.Int32)">
 <summary>
 Validate an array value object
 </summary>
 <param name="NewValue"></param>
 <param name="iSecondIndex"></param>
 <returns></returns>
 <remarks>This can not be handled by the cValue base class because the underlying data is handled differently. Array values are stored in an array (duh...)</remarks>
</member>
<member name="M:EwECore.ValueWrapper.cValueArrayTripleIndex.setStatusFlag(System.Int32,System.Int32)">
 <summary>
 Run the validator to set the status flag without setting the value
 </summary>
 <param name="iSecondIndex"></param>
 <remarks>This is use be the cCoreInputOutputBase to set the status flags of all its values </remarks>
</member>
<member name="P:EwECore.ValueWrapper.cValueArrayTripleIndex.Status(System.Int32,System.Int32)">
 <summary>
 Get/set the status flag for a Value.
 </summary>
 <param name="iSecondIndex">Optional value index.</param>
</member>
<member name="T:EwECore.cValueID">
 -----------------------------------------------------------------------
 <summary>
 <para>Helper class; assists in uniquely identifying EwE values.</para>
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cValueID.#ctor(EwEUtils.Core.eDataTypes,System.Int32,System.String,EwEUtils.Core.eDataTypes,System.Int32)">
 <summary>
 Constructor.
 </summary>
 <param name="dtPrim"></param>
 <param name="iDBIDPrim"></param>
 <param name="strVarName"></param>
 <param name="dtSec"></param>
 <param name="iDBIDSec"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cValueID.GetDataTypeID(EwEUtils.Core.eDataTypes,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Generates an ID for a core data type and ID
 </summary>
 <param name="dataType">The <see cref="T:EwEUtils.Core.eDataTypes">Core data type</see> representing the object to generate the ID for</param>
 <param name="nID">The unique ID of the object to generate the ID for</param>
 <returns>A computer ID</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.cVariableMetaData">
 ---------------------------------------------------------------------------
 <summary>
 Meta data for a variable, describing its value range and default value.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cVariableMetaData.s_metadata">
 <summary>Shared registry of metadata definitions</summary>
</member>
<member name="M:EwECore.cVariableMetaData.#ctor(System.String,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for boolean values.
 </summary>
 <param name="units">Units format mask</param>
 <param name="bValueDefault">Default value to assign to variable when in error.</param>
 <remarks>Booleans do not have min or max values.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cVariableMetaData.#ctor(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Constructor use boolean values.
 </summary>
 <param name="bValueDefault">Default value to assign to variable when in error.</param>
 <remarks>Booleans do not have min or max values.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cVariableMetaData.#ctor(System.Int32,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Constuctor for string values.
 </summary>
 <param name="iLength">The max allowed string length.</param>
 <param name="strValueDefault">
 Default value to assign to variable when in error.</param>
 <remarks>Strings do not have min or max values.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cVariableMetaData.#ctor(System.Single,System.Single,EwECore.cOperatorBase,EwECore.cOperatorBase,System.Single,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for numeric values.
 </summary>
 <param name="sMin">Lowest value a variable can contain.</param>
 <param name="sMax">Highest value a variable can contain.</param>
 <param name="operatorMin"><see cref="T:EwECore.cOperatorBase">Operator</see>
 stating how the <paramref name="sMin">minimum value</paramref> is included
 in the variable value range.</param>
 <param name="operatorMax"><see cref="T:EwECore.cOperatorBase">Operator</see>
 stating how the <paramref name="sMax">maximum value</paramref> is included
 in the variable value range.</param>
 <param name="sValueDefault">Default value to assign to variable when in error.</param>
 <param name="units">Units of the value.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cVariableMetaData.Get(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Get any pre-registered metadata, or nothing if the metadata does not
 exist for the indicated variable.
 </summary>
 <param name="varname"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cVariableMetaData.Default(EwECore.ValueWrapper.eValueTypes,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Register and retrieve metadata for numerical model output values.
 </summary>
 <param name="vartype"></param>
 <param name="units"></param>
 <remarks>
 Metadata for computed values do not need specification of range operators
 to support variable validation.
 </remarks>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cVariableMetaData.MinOperator">
 -----------------------------------------------------------------------
 <summary>
 Get the minimum value <see cref="T:EwECore.cOperatorBase">operator</see>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cVariableMetaData.MaxOperator">
 -----------------------------------------------------------------------
 <summary>
 Get the maximum value <see cref="T:EwECore.cOperatorBase">operator</see>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cVariableMetaData.Min">
 -----------------------------------------------------------------------
 <summary>
 Get the minimum value for a variable.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cVariableMetaData.Max">
 -----------------------------------------------------------------------
 <summary>
 Get the maximum value for a variable.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cVariableMetaData.NullValue">
 -----------------------------------------------------------------------
 <summary>
 Get the default value for a variable.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cVariableMetaData.Length">
 -----------------------------------------------------------------------
 <summary>
 Get the maximum allowed string length for variables.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cVariableMetaData.VarType">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwECore.ValueWrapper.eValueTypes">value type</see> of the variable 
 that this metadata represents.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cVariableMetaData.Units">
 -----------------------------------------------------------------------
 <summary>
 Get/set the units for this variable.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.ICoreInterface">
 ---------------------------------------------------------------------------
 <summary>
 Interface for exposing Core data entities.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="P:EwECore.ICoreInterface.Name">
 <summary>A human readable name identifying a core data entity.</summary>
</member>
<member name="P:EwECore.ICoreInterface.Index">
 <summary>The ordinal number in the core storage structures for a core data entity.</summary>
</member>
<member name="M:EwECore.ICoreInterface.GetID">
 <summary>Globally unique ID identifying a core data entity.</summary>
</member>
<member name="P:EwECore.ICoreInterface.DBID">
 <summary>Unique ID per type of core data used to distinguish a core data entity in a storage medium. DBID is short for Database ID</summary>
</member>
<member name="P:EwECore.ICoreInterface.DataType">
 <summary><see cref="T:EwEUtils.Core.eDataTypes">Data type</see> identifying the class of a core data entity.</summary>
</member>
<member name="P:EwECore.ICoreInterface.CoreComponent">
 <summary><see cref="T:EwEUtils.Core.eCoreComponentType">Message source</see> identifying the section of core data entity where this logic originates from.</summary>
</member>
<member name="T:EwECore.ICoreInputOutput">
 ---------------------------------------------------------------------------
 <summary>
 Interface for accessing Core input or output objects.
 </summary>
 <remarks>
 This allows all model/scenario input and output entities to be accessed through one interface.
</remarks>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.ICoreInputOutput.GetVariable(EwEUtils.Core.eVarNameFlags,System.Int32,System.Int32,System.Int32)">
 <summary>
 Returns the value exposed by a Core input or output object.
 </summary>
 <param name="VarName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable</see> type to access.</param>
 <param name="iIndex2">Optional index of the value to return when accessing an array-type variable.</param>
 <returns>Any loose-typed value, or Nothing if an error occurred.</returns>
</member>
<member name="M:EwECore.ICoreInputOutput.SetVariable(EwEUtils.Core.eVarNameFlags,System.Object,System.Int32,System.Int32)">
 <summary>
 Sets the value of a variable exposed by a Core input or output object.
 </summary>
 <param name="VarName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable</see> type to access.</param>
 <param name="iIndex">Optional index of the value to set when accessing an array-type variable.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.ICoreInputOutput.GetStatus(EwEUtils.Core.eVarNameFlags,System.Int32,System.Int32)">
 <summary>
 Returns the <see cref="T:EwEUtils.Core.eStatusFlags">Status</see> of a value exposed by a Core input or output object.
 </summary>
 <param name="VarName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable</see> type to access.</param>
 <param name="iSecondaryIndex">Optional index of the value status to query when accessing an array-type variable.</param>
 <returns>Any loose-typed value, or Nothing if an error occurred.</returns>
</member>
<member name="M:EwECore.ICoreInputOutput.SetStatus(EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eStatusFlags,System.Int32,System.Int32)">
 <summary>
 Sets the <see cref="T:EwEUtils.Core.eStatusFlags">Status</see> of a value exposed by a Core input or output object.
 </summary>
 <param name="VarName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable</see> type to access.</param>
 <param name="iSecondaryIndex">Optional index of the value status to set when accessing an array-type variable.</param>
 <returns>Any loose-typed value, or Nothing if an error occurred.</returns>
</member>
<member name="P:EwECore.ICoreInputOutput.ValidationStatus">
 <summary>
 Returns the <see cref="T:EwECore.cVariableStatus">result</see> of the most recent 
 attempt to <see cref="M:EwECore.ICoreInputOutput.SetVariable(EwEUtils.Core.eVarNameFlags,System.Object,System.Int32,System.Int32)">Set a variable</see>.
 </summary>
 <returns>A <see cref="T:EwECore.cVariableStatus">cVariableStatus</see> containing 
 the result of the most recent attempt to <see cref="M:EwECore.ICoreInputOutput.SetVariable(EwEUtils.Core.eVarNameFlags,System.Object,System.Int32,System.Int32)">Set</see> 
 a variable.</returns>
</member>
<member name="M:EwECore.ICoreInputOutput.Clear">
 <summary>
 Clear the content of a ICoreInputOutput. This leaves the object ready to reuse.
 </summary>
</member>
<member name="P:EwECore.ICoreInputOutput.Disposed">
 <summary>
 Gets whether the instance is disposed.
 </summary>
</member>
<member name="T:EwECore.ICoreGroup">
 ---------------------------------------------------------------------------
 <summary>
 Interface for defining a group.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="P:EwECore.ICoreGroup.IsMultiStanza">
 <summary>
 Get/set whether the group is part of a multi-stanza configuration.
 </summary>
</member>
<member name="P:EwECore.ICoreGroup.iStanza">
 <summary>
 Get/set the zero-based index of the <see cref="T:EwECore.cStanzaGroup">Stanza configuration</see> 
 that this group belongs to.
 </summary>
</member>
<member name="P:EwECore.ICoreGroup.PP">
 <summary>
 The ratio that this group contributes to Primary Production.
 </summary>
 <returns>This method will return one of the following values:
 <list type="bullet">
 <item>0-1 for mixed consumer/producer groups</item>
 <item>1 for primary producers</item>
 <item>2 for detritus groups</item>
 </list>
 </returns>
 <remarks>This can be used as a flag to tell if a group is mixed consumer/producer, primary producer or a detritus group.</remarks>
</member>
<member name="P:EwECore.ICoreGroup.IsConsumer">
 <summary>
 Helper method; gets whether this group is a consumer.
 </summary>
</member>
<member name="P:EwECore.ICoreGroup.IsProducer">
 <summary>
 Helper method; gets whether this group is a primary producer.
 </summary>
</member>
<member name="P:EwECore.ICoreGroup.IsDetritus">
 <summary>
 Helper method; gets whether this group is detritus.
 </summary>
</member>
<member name="P:EwECore.ICoreGroup.IsLiving">
 <summary>
 Helper method; gets whether this group is a living group.
 </summary>
</member>
<member name="T:EwECore.cCoreInputOutputBase">
 ---------------------------------------------------------------------------
 <summary>
 Base class implementation of the ICoreInterface, ICoreInputOutput interfaces.
 </summary>
 <remarks>
 <para>This class provides the code that implements the ICoreInputOutput interface.</para>
 <para>Classes that inherit from this base class need to populate the lookup tables that are
 used to store the internal data in the New constructor and define a dot (.) operator
 for any variables that requires to be accessed via Properties.</para>
 <para>For examples on how to implement this class, refer to <see cref="T:EwECore.cEcoPathGroupInput">cEcoPathGroupInput</see>,
 <see cref="T:EwECore.cEcopathFleetInput">cEcopathFleetInput</see>, etc.</para>
</remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreInputOutputBase.m_iInstance">
 <summary>DEBUG ONLY: instance tracker</summary>
</member>
<member name="F:EwECore.cCoreInputOutputBase.s_iNextInstance">
 <summary>DEBUG ONLY: instance tracker</summary>
</member>
<member name="F:EwECore.cCoreInputOutputBase.m_bValidate">
 <summary>
 States whether <see cref="P:EwECore.ValueWrapper.cValue.AllowValidation">Variable validation</see> is enabled for this object.
 </summary>
 <remarks>
 Validation is typically required in response to <see cref="M:EwECore.cCoreInputOutputBase.SetVariable(EwEUtils.Core.eVarNameFlags,System.Object,System.Int32,System.Int32)">SetVariable</see> 
 calls triggered by user actions. Whenever an object is populated by the 
 <see cref="T:EwECore.cCore">EwE Core</see> validation may be temporarily disabled.
 </remarks>
</member>
<member name="F:EwECore.cCoreInputOutputBase.m_bReadOnly">
 <summary>
 States whether an object will allow its values to be modified via <see cref="M:EwECore.cCoreInputOutputBase.SetVariable(EwEUtils.Core.eVarNameFlags,System.Object,System.Int32,System.Int32)">SetVariable</see>.
 </summary>
</member>
<member name="F:EwECore.cCoreInputOutputBase.m_ValidationStatus">
 <summary>
 Container for the <see cref="P:EwECore.cCoreInputOutputBase.ValidationStatus">Validation status</see> of the object.
 </summary>
</member>
<member name="F:EwECore.cCoreInputOutputBase.m_dataType">
 <summary>
 Container for the <see cref="P:EwECore.ICoreInterface.DataType">data type</see> describing the object.
 </summary>
</member>
<member name="F:EwECore.cCoreInputOutputBase.m_values">
 <summary>
 The variables maintained by this object. Implemented as a collection of <see cref="T:EwECore.ValueWrapper.cValue">variable values</see>
 indexed by <see cref="T:EwEUtils.Core.eVarNameFlags">Variable name</see>.
 </summary>
</member>
<member name="F:EwECore.cCoreInputOutputBase.m_coreComponent">
 <summary>
 The <see cref="T:EwEUtils.Core.eCoreComponentType">EwE core component</see> that this object belongs to
 </summary>
</member>
<member name="F:EwECore.cCoreInputOutputBase.m_core">
 <summary>
 Reference to the <see cref="T:EwECore.cCore">EwE Core</see> that exposes the object.
 </summary>
</member>
<member name="M:EwECore.cCoreInputOutputBase.#ctor(EwECore.cCore)">
 <summary>
 Create and populate the Lookup tables, as well as <see cref="T:EwECore.cCoreInputOutputBase">cCoreInputOutputBase</see>-defined variables.
 </summary>
 <remarks>A class the inherits from this base class will need to define its own variables in its constructor</remarks>
</member>
<member name="M:EwECore.cCoreInputOutputBase.Resize">
 <summary>
 Resize any indexed variables i.e. DietComp to the size of the <see cref="T:EwEUtils.Core.eCoreCounterTypes">core counter</see> that it is dimensioned by.
 </summary>
</member>
<member name="M:EwECore.cCoreInputOutputBase.GetID">
 -----------------------------------------------------------------------
 <summary>
 Returns the unique ID for this object as a text string.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreInputOutputBase.DataType">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwEUtils.Core.eDataTypes">data type</see> uniquely identifying
 the type of core data that this class implements.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreInputOutputBase.CoreComponent">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwEUtils.Core.eCoreComponentType">core component type</see> that
 this object belongs to. Component types are useful for determining the
 level of impact that objects have on the EwE computing model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreInputOutputBase.Remark(EwEUtils.Core.eVarNameFlags,EwECore.cCoreInputOutputBase)">
 -----------------------------------------------------------------------
 <summary>
 Get/set a remark.
 </summary>
 <param name="varName">Variable name that a remark applies to.</param>
 <param name="objSec">Secundary object within the given <paramref name="varName">variable</paramref>
 that a remark applies to.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.ResetStatusFlags(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Public access to set the status flags by calling each validator.
 </summary>
 <returns>True is successful. False otherwise</returns>
 <remarks>This is the default behaviour for Input objects. Output 
 objects will need to provide their own implementation due to the 
 absence of validators.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.Dispose">
 -----------------------------------------------------------------------
 <summary>
 Destroy an instance.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreInputOutputBase.Disposed">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.ICoreInputOutput.Disposed"/>"
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.Clear">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.ICoreInputOutput.Clear"/>"
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.GetStatus(EwEUtils.Core.eVarNameFlags,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns the status of a variable in this object.
 </summary>
 <param name="VarName">Variable to request status information for.</param>
 <param name="iIndex">Optional index within <paramref name="VarName">VarName</paramref>.</param>
 <param name="iIndex2">Optional secundary index within <paramref name="VarName">VarName</paramref>.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.SetStatus(EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eStatusFlags,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Replaces current status flags for a given variable with a new set of status flags.
 </summary>
 <param name="VarName">Variable to replace status information for.</param>
 <param name="iIndex">Optional index within <paramref name="VarName">VarName</paramref>.</param>
 <param name="newStatus">The new status values to set.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.SetStatusFlags(EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eStatusFlags,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Adds a given set of status flags to existing status flags for a given variable.
 </summary>
 <param name="VarName">Variable to add status information for.</param>
 <param name="iIndex">Optional index within <paramref name="VarName">VarName</paramref>.</param>
 <param name="statusFlags">The status values to add.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.ClearStatusFlags(EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eStatusFlags,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Clears a given set of status flags from existing status flags for a given variable.
 </summary>
 <param name="VarName">Variable to clear status information for.</param>
 <param name="iIndex">Optional index within <paramref name="VarName">VarName</paramref>.</param>
 <param name="statusFlags">The status values to clear.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.GetVariable(EwEUtils.Core.eVarNameFlags,System.Int32,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Return the value of a variable.
 </summary>
 <param name="VarName"><see cref="T:EwEUtils.Core.eVarNameFlags">Name</see> of the variable to set.</param>
 <param name="iIndex">Optional index for indexed variables.</param>
 <param name="iIndex2">Optional index for indexed variables.</param>
 <returns></returns>
 <remarks>This only provides variables for one optional index Override this if you you need access to variables with two indexes</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.SetVariable(EwEUtils.Core.eVarNameFlags,System.Object,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Set the value of a variable.
 </summary>
 <param name="VarName"><see cref="T:EwEUtils.Core.eVarNameFlags">Name</see> of the variable to set.</param>
 <param name="newValue">Value to set.</param>
 <param name="iSecondaryIndex">Optional index for indexed variables.</param>
 <returns>True if a variable is succesfully changed.</returns>
 <remarks>The outcome of the SetVariable call can be examined via 
 <see cref="P:EwECore.ValueWrapper.cValue.ValidationStatus(System.Int32)">cValue.ValidationStatus</see>.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputBase.GetVariableMetadata(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Return <see cref="T:EwECore.cVariableMetaData">metadata</see> associated with a 
 variable. If the local instance does not have metadata associated 
 the central <see cref="M:EwECore.cVariableMetaData.Get(EwEUtils.Core.eVarNameFlags)">metadata 
 repository</see> is consulted.
 </summary>
 <param name="varName">The variable to return metadata for.</param>
 <returns>A <see cref="T:EwECore.cVariableMetaData">metadata</see> instance, or
 Null if something went wrong.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreInputOutputBase.AllowValidation">
 <summary>
 Get/set whether <see cref="M:EwECore.cCoreInputOutputBase.SetVariable(EwEUtils.Core.eVarNameFlags,System.Object,System.Int32,System.Int32)">variable updates</see> should pass
 through the formal variable validation structure.
 </summary>
 <remarks>
 If enabled, validation will allow the core to respond to value changes.
 Typically, validation should be turned OFF when populating variables from
 the EwECore, and should be turned ON to respond to changes made by 
 user interfaces or by remote calculations.
 </remarks>
</member>
<member name="P:EwECore.cCoreInputOutputBase.Name">
 <summary>
 Get/set the <see cref="F:EwEUtils.Core.eVarNameFlags.Name">name</see> of a core object. 
 Every ICoreInterface derived instance in EwE6 has a name.
 </summary>
 <remarks>
 In EwE5, names were required to be unique for a given class of object
 since names served as primary indexes in the database. In EwE6, this
 behaviour has been changed. Names do no longer have to be unique for
 each <see cref="T:EwEUtils.Core.eDataTypes">class of object</see>; names merely serve
 to help identify objects in a user interface. Underneath, every object
 in the EwE6 core has a unique <see cref="F:EwEUtils.Core.eVarNameFlags.DBID">database
 ID</see> for a given datatype.
 </remarks>
 <seealso cref="P:EwECore.cCoreInputOutputBase.DBID"/>
 <seealso cref="P:EwECore.cCoreInputOutputBase.Index"/>
</member>
<member name="P:EwECore.cCoreInputOutputBase.Index">
 <summary>
 Get/set the one-based <see cref="F:EwEUtils.Core.eVarNameFlags.Index">index</see> of a 
 cCoreInputOutputBase instance in the list that it is contained in.
 </summary>
 <remarks>
 In EwE5, indexes were used to link objects together. In EwE6, this 
 linkage system has been replaced with unique 
 <see cref="F:EwEUtils.Core.eVarNameFlags.DBID">database IDs</see> values per 
 <see cref="T:EwEUtils.Core.eDataTypes">object data type (or object class)</see>.
 </remarks>
 <seealso cref="P:EwECore.cCoreInputOutputBase.DBID"/>
 <seealso cref="P:EwECore.cCoreInputOutputBase.Name"/>
</member>
<member name="P:EwECore.cCoreInputOutputBase.DBID">
 <summary>
 Returns the persistent unique database ID for an ICoreInputOutput.
 </summary>
 <remarks>
 Applicaton layers built on top of the core will probably never need direct 
 access to this property. To abstract its storage methods it seems best to
 restrict access to this property to the Core assembly only.</remarks>
</member>
<member name="P:EwECore.cCoreInputOutputBase.ValidationStatus">
 <summary>
 Get the outcome of the most recently performed variable validation 
 attempt on a cCoreInutOutputBase instance.
 </summary>
</member>
<member name="P:EwECore.cCoreInputOutputBase.ValueDescriptor(EwEUtils.Core.eVarNameFlags)">
 <summary>
 Returns the <see cref="T:EwECore.ValueWrapper.cValue">Value descriptor</see> for a given
 variable name, associated with this object.
 </summary>
 <param name="varName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable name</see>
 to retrieve the value descriptor for.</param>
</member>
<member name="T:EwECore.cCoreGroupBase">
 ---------------------------------------------------------------------------
 <summary>
 Base implementation of a core <see cref="T:EwECore.ICoreGroup">group</see>. This
 class serves as an base class for building dedicated group classes for the
 various EwE components.
 </summary>
 --------------------------------------------------------------------------- 
</member>
<member name="F:EwECore.cCoreGroupBase.m_iStanza">
 <summary>Zero-based index of the stanza configuration this group belongs to.</summary>
</member>
<member name="M:EwECore.cCoreGroupBase.#ctor(EwECore.cCore)">
 <summary>
 Create and populate the Lookup tables 
 </summary>
 <remarks>A class the inherits from this base class will need to define its own variables in its constructor</remarks>
</member>
<member name="P:EwECore.cCoreGroupBase.IsMultiStanza">
 -----------------------------------------------------------------------
 <summary>
 Get whether this group is part of a multi-stanza configuration.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreGroupBase.PP">
 -----------------------------------------------------------------------
 <summary>
 The ratio that this group contributes to Primary Production.
 </summary>
 <returns>This method will return one of the following values:
 <list type="bullet">
 <item>0-1 for mixed consumer/producer groups</item>
 <item>1 for primary producers</item>
 <item>2 for detritus groups</item>
 </list>
 </returns>
 <remarks>This can be used as a flag to tell if a group is mixed consumer/producer, 
 primary producer or a detritus group.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreGroupBase.iStanza">
 -----------------------------------------------------------------------
 <summary>
 Get/set the zero-based index of the stanza configuration this group belongs to.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreGroupBase.IsConsumer">
 -----------------------------------------------------------------------
 <summary>
 Gets whether this group is a consumer (PP &lt; 1.0)
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreGroupBase.IsDetritus">
 -----------------------------------------------------------------------
 <summary>
 Gets whether this group is detritus (PP = 2.0).
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreGroupBase.IsProducer">
 -----------------------------------------------------------------------
 <summary>
 Gets whether this group is a producer (0 &lt; PP &lt;= 1.0).
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreGroupBase.IsLiving">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.ICoreGroup.IsLiving"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cCoreInputOutputList`1">
 ---------------------------------------------------------------------------
 <summary>
 Strong-typed list that handles item index offset headaches transparently.
 </summary>
 <remarks>
 JS 27Aug07: list change event functionality is suspended to prevent confusion
 in different methods on how to use these list.
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreInputOutputList`1.m_iItemOffset">
 <summary>
 Offset for items in the list.
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cCoreInputOutputList`1.#ctor(EwEUtils.Core.eDataTypes,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 The <see cref="T:EwEUtils.Core.eDataTypes">data type</see> of objects that this list contains.
 </summary>
 <param name="dt">The <see cref="T:EwEUtils.Core.eDataTypes">data type</see> of objects that this list holds.</param>
 <param name="iItemOffset">The offset for items in this list.</param>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreInputOutputList`1.m_dt">
 <summary>My datatype.</summary>
</member>
<member name="P:EwECore.cCoreInputOutputList`1.DataType">
 -----------------------------------------------------------------------
 <summary>
 Gets the <see cref="T:EwEUtils.Core.eDataTypes">data type</see> of the 
 <see cref="T:EwECore.cCoreInputOutputBase">core objects</see> that this list contains.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cCoreInputOutputList`1.m_list">
 <summary>The actual list.</summary>
</member>
<member name="M:EwECore.cCoreInputOutputList`1.Add(`0)">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.Contains(`0)">List.Add</see> impementation.
 Restricted access because the content of this list is managed by the EwE Core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputList`1.Clear">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.Clear">List.Clear</see> impementation. 
 Restricted access because the content of this list is managed by the EwE Core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputList`1.Contains(`0)">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.Contains(`0)">List.Contains</see> implementation.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputList`1.CopyTo(`0[],System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">List.CopyTo</see> implementation.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreInputOutputList`1.Count">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="P:System.Collections.Generic.List`1.Count">List.Count</see> implementation.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreInputOutputList`1.IsReadOnly">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">List.IsReadOnly</see> implementation.
 </summary>
 <returns>
 Always true; because the content of this list is managed by the EwE Core.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputList`1.Remove(`0)">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.Remove(`0)">List.Remove</see> impementation. 
 Restricted access because the content of this list is managed by the EwE Core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputList`1.GetEnumerator">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.GetEnumerator">List.GetEnumerator</see> impementation. 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputList`1.IndexOf(`0)">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.IndexOf(`0)">List.IndexOf</see> impementation. 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputList`1.Insert(System.Int32,`0)">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">List.Insert</see> impementation. 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cCoreInputOutputList`1.Item(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="P:System.Collections.Generic.List`1.Item(System.Int32)">List.Item</see> impementation. 
 Restricted set access because the content of this list is managed by the EwE Core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputList`1.RemoveAt(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Strong-typed <see cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">List.RemoveAt</see> impementation. 
 Restricted access because the content of this list is managed by the EwE Core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cCoreInputOutputList`1.ComeToAScreechingHaltInTheSandbox">
 -----------------------------------------------------------------------
 <summary>
 Obligatory but totally useless list implementation.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.IResultsWrapper">
 <summary>
 Interface for a helper class that wraps Ecosim or EcoSpace data structure results arrays
 </summary>
 <remarks>Ouput (model time step results) objects <see cref="T:EwECore.cEcosimGroupOutput">cEcoSimGroupOutput</see> hold a reference to core data that is wrapped for the interface to access via dot operators or getVariable(eVarNameFalgs,index,index)  </remarks>
</member>
<member name="T:EwECore.c4DResultsWrapper">
 <summary>
 4D array with the first two indexes fixed
 </summary>
 <remarks> cEcosimDataStrucures.PredPreyResultsOverTime(var,prey,pred,time)</remarks>
</member>
<member name="T:EwECore.c4DResultsWrapperFirstFixed">
 <summary>
 4D array with the first two indexes fixed
 </summary>
 <remarks> cEcosimDataStrucures.PredPreyResultsOverTime(var,prey,pred,time)</remarks>
</member>
<member name="T:EwECore.c2DResultsWrapper">
 <summary>
 2D array with the first index fixed
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.c2DResultsWrapper2Fixed">
 <summary>
 2D array with the 2 fixed indexes
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.c3DResultsWrapper">
 <summary>
 3D array with the first index fixed
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.c3DResultsWrapper2Fixed">
 <summary>
 3D array with the first TWO indexes fixed i.e. ResultsOverTime(FixedVar,FixedGroup,time) 
 </summary>
 <remarks>cEcosimDataStructures.ResultsOverTime(var,group,time)</remarks>
</member>
<member name="T:EwECore.Database.cDatabaseUpdater">
 =======================================================================
 <summary>
 Utility class to update a database across minor versions within one major version.
 </summary>
 =======================================================================
</member>
<member name="T:EwECore.Database.cDatabaseUpdater.cDBUpdatePluginContextSort">
 -----------------------------------------------------------------------
 <summary>Helper class to sort database update plug-ins by 
 <see cref="P:EwECore.cDBUpdate.UpdateVersion">Version</see>, in
 ascending order.</summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.Database.cDatabaseUpdater.m_core">
 <summary>Core to operate onto.</summary>
</member>
<member name="F:EwECore.Database.cDatabaseUpdater.m_sBaselineVersion">
 <summary>The baseline database version that this updater can update from</summary>
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.#ctor(EwECore.cCore,System.Single)">
 -------------------------------------------------------------------
 <summary>
 Constructor.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.HasUpdates(EwEUtils.Database.cEwEDatabase)">
 -------------------------------------------------------------------
 <summary>
 States if there are updates available for a given database.
 </summary>
 <param name="db"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.UpdateDatabase(EwEUtils.Database.cEwEDatabase)">
 -------------------------------------------------------------------
 <summary>
 Perform a database update.
 </summary>
 <param name="db">The <see cref="T:EwEUtils.Database.cEwEDatabase">database</see> to update</param>
 <returns>True if successful</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.MaxSupportedVersion">
 -------------------------------------------------------------------
 <summary>
 Returns the max supported core version of the database.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.GetUpdates(System.Single)">
 -------------------------------------------------------------------
 <summary>
 Returns all available update objects in this assembly.
 </summary>
 <returns>An array of available updates.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.HasDatabaseUpdates(EwEUtils.Database.cEwEDatabase,System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether plug-ins have been found that can upgrade an
 <see cref="T:EwEUtils.Database.cEwEDatabase">EwE database</see> to a newer version that
 exceeds a requested <paramref name="sBaselineVersion">baseline version</paramref>.
 </summary>
 <param name="db">The EwE database to test for upgrades.</param>
 <param name="sBaselineVersion">The baseline database version required 
 by the EwE software.</param>
 <returns>True if updates are available.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.RunAllUpdates(EwEUtils.Database.cEwEDatabase)">
 -----------------------------------------------------------------------
 <summary>
 Run available database update plug-ins.
 </summary>
 <param name="db">The database to update.</param>
 <remarks>
 This method does not attempt to cross thread boundaries.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.ToShortDescription(System.String)">
 -------------------------------------------------------------------
 <summary>
 Convert a database update description into a short description.
 </summary>
 <param name="strDescription"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.ReportUpdateError(System.String,EwEUtils.Core.eMessageImportance)">
 -------------------------------------------------------------------
 <summary>
 Report an update error to the core.
 </summary>
 <param name="strStatus">Message text.</param>
 <param name="importance">Message importance.</param>
 <remarks></remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cDatabaseUpdater.ReportUpdateProgress(EwECore.eProgressState,System.String,System.Single)">
 -------------------------------------------------------------------
 <summary>
 Report update status to the core.
 </summary>
 <param name="strStatus">Status message.</param>
 <param name="sProgress">Progress indicator.</param>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Database.cEwEAccessDatabase">
 =======================================================================
 <summary>
 Database class specialized for storing and writing EwE data to Microsoft 
 Access databases.
 </summary>
 <remarks>
 This class wraps Microsoft Access specifics such as connection
 strings, deals with deficiencies in the SQL implementation of Bill's 
 beast, and provides default field values from the Access DB schema.
 </remarks>
 =======================================================================
</member>
<member name="F:EwECore.Database.cEwEAccessDatabase.m_conn">
 <summary>A connection to an OleDb database, if any.</summary>
</member>
<member name="F:EwECore.Database.cEwEAccessDatabase.m_strConnectionMDB">
 <summary>The connection string to connect to a MDB database.</summary>
</member>
<member name="F:EwECore.Database.cEwEAccessDatabase.m_strConnectionACCDB">
 <summary>The connection string to connect to a ACCDB database.</summary>
</member>
<member name="F:EwECore.Database.cEwEAccessDatabase.m_strFileName">
 <summary>File name to access database.</summary>
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.Create(System.String,System.String,System.Boolean,EwEUtils.Core.eDataSourceTypes,System.String)">
 -------------------------------------------------------------------
 <summary>
 Create a new M$ Access database.
 </summary>
 <param name="strDatabase">The file name of the .MDB to create.</param>
 <param name="strAuthor">Name of the author to assign.</param>
 <param name="strModelName">Name of the model to use.</param>
 <param name="bOverwrite">States whether an existing database may be overwritten.</param>
 <param name="format">Database format type to use. If not set, the 
 database type is deducted from the <paramref name="strDatabase">database</paramref>.</param>
 <returns>A <see cref="T:EwEUtils.Core.eDatasourceAccessType">eDatasourceAccessType</see> value</returns>
 <remarks>Note that this will NOT open the newly created database.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.SaveAs(System.String,System.String,System.Boolean,EwEUtils.Core.eDataSourceTypes)">
 -------------------------------------------------------------------
 <summary>
 Save a given Access database to a new destination, and open this 
 new database.
 </summary>
 <param name="strDatabaseTo">Target database name.</param>
 <param name="strModelName">New name to assign to the model.</param>
 <param name="bOverwrite">States whether any model in the way will be obliterated.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.Open(System.String,EwEUtils.Core.eDataSourceTypes,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Open a connection to a M$ Access database.
 </summary>
 <param name="strDatabase">The database to open.</param>
 <param name="databaseType">Type to use to open the database. Set this
 to 'NotSet' to auto-detect the database type.</param>
 <returns>True if connected successfully.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.Close">
 -------------------------------------------------------------------
 <summary>
 Close the current M$ Access connection.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Database.cEwEAccessDatabase.Name">
 -------------------------------------------------------------------
 <summary>
 Get the name of the connected database.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.GetAdapter(System.String)">
 -------------------------------------------------------------------
 <summary>
 Obtains and configures a <see cref="T:System.Data.OleDb.OleDbDataAdapter">OleDbDataAdapter</see>
 for the current M$ Access database.
 </summary>
 <param name="strSQL">The SQL query to obtain the adapter for.</param>
 <returns>A <see cref="T:System.Data.OleDb.OleDbDataAdapter">OleDbDataAdapter</see> if
 successful, or Nothing when an error occurred.</returns>
 <remarks>
 <para>The returned adapter is initialized with default insert, update 
 and delete commands based on the provided query.</para>
 <para>The obtained OleDbDataAdapter should be released via 
 <see cref="M:EwEUtils.Database.cEwEDatabase.ReleaseAdapter(System.Data.IDataAdapter@)">ReleaseAdapter</see>.</para></remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.GetConnection">
 -------------------------------------------------------------------
 <summary>
 Returns the current M$ Access database connection.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.CanConnect(EwEUtils.Core.eDataSourceTypes)">
 -------------------------------------------------------------------
 <summary>
 Returns whether the database can connect to an indicated type.
 </summary>
 <param name="dst">The data source type to test.</param>
 <returns>True if the OS can connect to a given data source type.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.CanCompact(System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Returns if the compact database engine is available.
 </summary>
 <param name="strConnectionFrom"></param>
 <param name="strConnectionTo"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.Compact(System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Compact the current M$ Access database.
 </summary>
 <param name="strFileFrom">Source database to compact.</param>
 <param name="strFileTo">Target database to compact to. Can be left blank.</param>
 <returns>True if successful.</returns>
 <remarks>
 Only MDB databases can be compacted for now. Note that the database
 cannot be <see cref="M:EwEUtils.Database.cEwEDatabase.IsConnected">connected</see> when compacting.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwEAccessDatabase.MaxDBVersion">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Database.cEwEDatabase.MaxDBVersion"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Database.cEwEAccessDatabase.Directory">
 -------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Database.cEwEDatabase.Directory"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Database.cEwEAccessDatabase.FileName">
 -------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Database.cEwEDatabase.FileName"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Database.cEwEAccessDatabase.Extension">
 -------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Database.cEwEDatabase.Extension"/>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Database.cCompactDAO">
 =======================================================================
 <summary>
 Database compact class for Office DAO databases.
 </summary>
 =======================================================================
</member>
<member name="F:EwECore.Database.cCompactDAO.s_bEngineSearched">
 <summary>Global, one time flags.</summary>
</member>
<member name="F:EwECore.Database.cCompactDAO.s_bEngineFound">
 <summary>Global, one time flags.</summary>
</member>
<member name="M:EwECore.Database.cCompactDAO.CanCompact">
 -------------------------------------------------------------------
 <summary>
 Returns whether the OS supports compacting databases via DAO.
 </summary>
 <returns>True if the OS supports compacting databases via DAO.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cCompactDAO.Compact(System.String,System.String,System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Compact a database via DAO.
 </summary>
 <param name="strFileFrom">Source database location.</param>
 <param name="strConnectionFrom">Source database connection string.</param>
 <param name="strFileTo">Target database location.</param>
 <param name="strConnectionTo">Target database connection string.</param>
 <returns>A <see cref="T:EwEUtils.Core.eDatasourceAccessType">database access
 result code</see>.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Database.cCompactJRO">
 =======================================================================
 <summary>
 Database compact class for JRO databases.
 </summary>
 =======================================================================
</member>
<member name="F:EwECore.Database.cCompactJRO.s_bEngineSearched">
 <summary>Global, one time flags.</summary>
</member>
<member name="F:EwECore.Database.cCompactJRO.s_bEngineFound">
 <summary>Global, one time flags.</summary>
</member>
<member name="M:EwECore.Database.cCompactJRO.CanCompact">
 -------------------------------------------------------------------
 <summary>
 Returns whether the OS supports compacting databases via JRO.
 </summary>
 <returns>True if the OS supports compacting databases via JRO.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cCompactJRO.Compact(System.String,System.String,System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Compact a database via JRO.
 </summary>
 <param name="strFileFrom">Source database location.</param>
 <param name="strConnectionFrom">Source database connection string.</param>
 <param name="strFileTo">Target database location.</param>
 <param name="strConnectionTo">Target database connection string.</param>
 <returns>A <see cref="T:EwEUtils.Core.eDatasourceAccessType">database access
 result code</see>.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cCompactJRO.DetectJRORecursive(Microsoft.Win32.RegistryKey)">
 -------------------------------------------------------------------
 <summary>
 Recursively find JRO registry entry to a valid registered copy of
 msjro.dll, ye good ole' Jet engine database headaches that we
 unfortunately need for compacting an MS Aaargcess Database.
 </summary>
 <param name="key">Registry to start searching.</param>
 <returns>
 True if a <see cref="M:EwECore.Database.cCompactJRO.IsCorrectJRO(System.String)">correct</see> JRO version is 
 reffered to by one <paramref name="key">key</paramref> or one of
 its subkeys.
 </returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cCompactJRO.IsCorrectJRO(System.String)">
 -------------------------------------------------------------------
 <summary>
 Validates the compatibility of installed JRO version.
 </summary>
 <param name="strFile">The JRO main DLL to validate.</param>
 <returns>True if JRO has the correct version.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Database.cDatabaseCompactFactory">
 =======================================================================
 <summary>
 Helper class, returns a database compact engine for compacting a 
 database for an underlying database engine.
 </summary>
 =======================================================================
</member>
<member name="M:EwECore.Database.cDatabaseCompactFactory.GetDatabaseCompact(System.String)">
 -------------------------------------------------------------------
 <summary>
 Get <see cref="T:EwECore.Database.IDatabaseCompact">database compact engine</see> for
 a given database.
 </summary>
 <param name="strFileName">The complete path to the database to compact.</param>
 <returns>An instance of a <see cref="T:EwECore.Database.IDatabaseCompact">database compact engine</see>,
 or Null / Nothing if an error occurred.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Database.IDatabaseCompact">
 =======================================================================
 <summary>
 Interface for implementing database compact capabilities.
 </summary>
 =======================================================================
</member>
<member name="M:EwECore.Database.IDatabaseCompact.CanCompact">
 -------------------------------------------------------------------
 <summary>
 Returns whether the OS supports compacting of databases of the type
 that this engine was created for.
 </summary>
 <returns>True if the OS supports compacting of a database.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.IDatabaseCompact.Compact(System.String,System.String,System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Compact a database.
 </summary>
 <param name="strFileFrom">Source database location.</param>
 <param name="strConnectionFrom">Source database connection string.</param>
 <param name="strFileTo">Target database location.</param>
 <param name="strConnectionTo">Target database connection string.</param>
 <returns>A <see cref="T:EwEUtils.Core.eDatasourceAccessType">database access
 result code</see>.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Database.cEwE5DatabaseImporter">
 -----------------------------------------------------------------------
 <summary>
 Imports an EwE5 database into an EwE6 database
 </summary>
 <example>
 The following example illustrates how to use this class:
 <code>
 Dim dbImp as IEwE5ModelImporter = cEwE5ModelImporterFactory.GetEwE5ModelImporter(Core, strEwE5File)
 Dim info As List(Of IEwE5ModelImporter.cEwE5ModelInfo) = Nothing
 Dim model As IEwE5ModelImporter.cEwE5ModelInfo = Nothing
 Dim nSucces As Integer = 0
 
 ' Attach to an MS Access database
 If (dbImp.Open("my_ewe5.mdb")) Then
     ' Can Import?
     If (dmImp.CanImport()) Then
         ' Get models
         lModels = dmImp.GetModels()
         ' Import each model
         For i As Integer = 0 To lModels.Count - 1
            ' Get model
            model = lModes(i)
            ' Import the model
            If (dmImp.Import(model.ID, cStringUtils.Localize("EwE6_{0}.mdb", model.Name))) Then
               ' Count Succes
               nSucces += 1
            End If
         Next i
     End If
     ' Clean up
     dbImp.Close()
 End If
 </code>
 </example>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.Database.cEwE5DatabaseImporter.m_lImportedForcingShapes">
 <summary>List of imported forcing shapes, used to check for duplicates.</summary>
</member>
<member name="F:EwECore.Database.cEwE5DatabaseImporter.m_iNextShapeID">
 <summary>ID for next imported shape.</summary>
</member>
<member name="F:EwECore.Database.cEwE5DatabaseImporter.m_dicPedigreeLevels">
 <summary>Dict (varname, List(of PedigreeLevelID))</summary>
</member>
<member name="F:EwECore.Database.cEwE5DatabaseImporter.m_iNextAuxID">
 <summary>ID for next imported Auxillary data.</summary>
</member>
<member name="F:EwECore.Database.cEwE5DatabaseImporter.m_dicDepthMaps">
 <summary>Dict of Ecospace depth profiles per scenario ID.</summary>
</member>
<member name="F:EwECore.Database.cEwE5DatabaseImporter.m_dbEwE5">
 <summary>Source database in EwE5 format.</summary>
</member>
<member name="F:EwECore.Database.cEwE5DatabaseImporter.m_adtKeys">
 <summary>Primary keys lookup table</summary>
</member>
<member name="F:EwECore.Database.cEwE5DatabaseImporter.m_adtIndexes">
 <summary>Dictionaries, per datatype, of EwE group index to EwE6 DatabaseID.</summary>
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.#ctor(EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 <param name="core">The core to import into.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.Open(System.String)">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.Open(System.String)"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.Close">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.Close"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.IsOpen">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.IsOpen"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.Models">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.Models"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.RebuildNumberListString(System.String,System.Char,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Helper method, rebuilds a memo string that consists of a series of 
 numbers.
 </summary>
 <param name="strMemo">Memo text to rebuild</param>
 <param name="cSplitChar">Separator character that separates the 
 numbers in the memo </param>
 <param name="nDefaultNumberLen">When interpreting a string without
 separators, this value indicates the number of characters that each
 number occupies in the memo string.</param>
 <param name="nRepetition">Optional field, indicating the number of
 times a value for the source string should be repeated.</param>
 <returns>A smaller string representing the same numbers.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.StringToBitFlags(System.String,System.String,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Helper method; converts a string into a pattern of bit flags.
 </summary>
 <param name="strFlags">The string to convert into bit flags.</param>
 <param name="strMatch">The character(s) to match in the string.</param>
 <param name="bMatchAsOne">
 <pata>Flag, indicates how a positive character match affects the bit pattern.</pata>
 <list type="bullet">
 <item><description>
 When set to True, a positive character match generates a 1, and a negative character match generates a 0.
 </description></item>
 <item><description>
 When set to False, a positive character match generates a 0, and a negative character match generates a 1.
 </description></item>
 </list>
 </param>
 <returns>A bit pattern of the provided string.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.MakeHashKey(System.String,System.Int32,EwEUtils.Core.eDataTypes)">
 -------------------------------------------------------------------
 <summary>
 Helper method, generates a hash key for a data value, optionally 
 in the context of a strong-typed scenario.
 </summary>
 <param name="strKey">The EwE5 value to generate the kay for.</param>
 <param name="iScenarioID">Database ID of scenario this key belongs to, 
 if any. No scenario filter is applied if this value is less than or equals to 0.</param>
 <param name="dtScenario">Data type of this scenario, if any.</param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Database.cEwE5DatabaseImporter.HashKey(EwEUtils.Core.eDataTypes,System.String,EwEUtils.Core.eDataTypes,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Get/set a value in the primary keys hashtable.
 </summary>
 <param name="dt">The <see cref="T:EwEUtils.Core.eDataTypes">data type</see> to access
 the key for.</param>
 <param name="strKey">The EwE5 value to hash</param>
 <param name="iScenarioID">Database ID of scenario this key belongs to, if any.</param>
 <param name="dtScenario">Data type of this scenario, if any.</param>
 <remarks>
 <para>EwE5 identifies objects by name. EwE6 uses database IDs. The 
 <see cref="F:EwECore.Database.cEwE5DatabaseImporter.m_adtKeys">Primary Key hashtable</see> maintains an 
 administration of EwE5 to EwE6 key mappings during the import 
 process.</para>
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Database.cEwE5DatabaseImporter.MappedID(EwEUtils.Core.eDataTypes,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Get/set a group ID in the primary keys hashtable.
 </summary>
 <param name="dt">The <see cref="T:EwEUtils.Core.eDataTypes">data type</see> to access
 the key for.</param>
 <para>EwE5 identifies objects by name. EwE6 uses database IDs. The 
 <see cref="F:EwECore.Database.cEwE5DatabaseImporter.m_adtKeys">Primary Key hashtable</see> maintains an 
 administration of EwE5 to EwE6 key mappings during the import 
 process.</para>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.FixValue(System.Data.IDataReader@,System.String,System.Object)">
 -------------------------------------------------------------------
 <summary>
 Helper method, prepares a database-derived value for use in EwE6. 
 The following fixes are performed:
 <list type="bullet">
 <item><description>Strings are trimmed of leading and trailing whitespace.</description></item>
 <item><description>Numeric values are translated from EwE5 Null values to <see cref="F:EwECore.cCore.NULL_VALUE">EwE6 NULL</see>
 values if this value is <paramref name="valDefault">allowed to be NULL</paramref>.</description></item>
 </list>
 </summary>
 <param name="r">The <see cref="T:System.Data.IDataReader">data reader</see> to obtain the value from.</param>
 <param name="strField">Field in the reader to obtain the value from.</param>
 <param name="valDefault">Optional default value to return if the value found in the reader is a DBNull value.</param>
 <returns>The groomed and pruned value.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.PerformImport">
 -------------------------------------------------------------------
 <summary>
 Imports and converts a model in an EwE5 database into a provided EwE6 database.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.ImportModels">
 -------------------------------------------------------------------
 <summary>
 Import generic model information
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.ImportForcingShape(System.Int32,EwEUtils.Core.eDataTypes,System.Data.IDataReader,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Imports a forcing shape, returning the actual ID assigned to the 
 shape. This code will detect shape duplicates, and may return the ID 
 of a previously imported shape in case of duplication.
 </summary>
 <param name="iShapeID">ID to assign to shape.</param>
 <param name="shapeDataType">Type of shape.</param>
 <param name="reader">Database reader to read shape from.</param>
 <param name="bIsSeasonal">States whether shape is seasonal.</param>
 <returns>The ID for the imported shape. Note that this ID may indicate
 an earlier imported shape in case of duplicates.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.SplitZScale(System.String,System.String@,System.String@)">
 -------------------------------------------------------------------
 <summary>
 Helper method; splits EwE5 zscale memo into a title and zscale parts.
 </summary>
 <param name="strIn">The string to split.</param>
 <param name="strZScale">Zscale part.</param>
 <param name="strTitle">Title part.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.IsUsedAsTimeShape(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Helper method, determines if a given shape number is used as a Time 
 forcing shape.
 </summary>
 <param name="nShapeNumber">The shape number to check.</param>
 <returns>
 True if the given shape number, for both the given model and scenario,
 is used as a Time forcing shape.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.IsUsedAsEggShape(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Helper method, determines if a given shape number is used as an
 Egg Production forcing shape.
 </summary>
 <param name="nShapeNumber">The shape number to check.</param>
 <returns>
 True if the given shape number for the given model is used 
 as an Egg production forcing shape.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.ImportTimeSeries">
 <summary>
 Import Time Series data
 </summary>
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.ImportEcospaceScenario">
 -------------------------------------------------------------------
 <summary>
 
 </summary>
 <returns>True if a scenario was imported.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.AddRemark(System.Object,EwEUtils.Core.eDataTypes,System.Int32,EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eDataTypes,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Add a remark to the Auxillary data table
 </summary>
 <param name="objRemark">Remark text, may be DBNull</param>
 <param name="dataType">The <see cref="T:EwEUtils.Core.eDataTypes">Core data type</see> 
 representing the object to store the remark for.</param>
 <param name="nID">The database ID of <paramref name="dataType">dataType</paramref>
 to store the remark for.</param>
 <param name="varName">The <see cref="T:EwEUtils.Core.eVarNameFlags">Core variable name</see>
 to store the remark for.</param>
 <param name="dataTypeSec">The <see cref="T:EwEUtils.Core.eDataTypes">Core data type</see> 
 representing the secundary object (or index) to store the remark for.</param>
 <param name="nIDSec">The database ID of <paramref name="dataTypeSec">dataTypeSec</paramref>.</param>
 <remarks>
 <para>All imported remarks should bear a relationship to an existing 
 core object instance, variable type an optional subgroup.</para>
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.AddPedigree(EwEUtils.Database.cEwEDatabase.cEwEDbWriter,System.Int32,System.Int32,EwEUtils.Core.eVarNameFlags)">
 -------------------------------------------------------------------
 <summary>
 Add a pedigree indicator to the Auxillary data table
 </summary>
 <param name="iPedigree">Pedigree sequence number, may be cCore.NULL_VALUE</param>
 <param name="iGroupID">The Group ID to store pedigree for.</param>
 <param name="varName">The <see cref="T:EwEUtils.Core.eVarNameFlags">Core variable name</see>
 to store pedigree for.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5DatabaseImporter.AddAuxillaryData(System.String,EwEUtils.Core.eDataTypes,System.Int32,EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eDataTypes,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Add a record to the Auxillary data table
 </summary>
 <param name="strRemark">Remark text to add.</param>
 <param name="dataType">The <see cref="T:EwEUtils.Core.eDataTypes">Core data type</see> 
 representing the object to store the remark for.</param>
 <param name="nID">The database ID of <paramref name="dataType">dataType</paramref>
 to store the remark for.</param>
 <param name="varName">The <see cref="T:EwEUtils.Core.eVarNameFlags">Core variable name</see>
 to store the remark for.</param>
 <param name="dataTypeSec">The <see cref="T:EwEUtils.Core.eDataTypes">Core data type</see> 
 representing the secundary object (or index) to store the remark for.</param>
 <param name="nIDSec">The database ID of <paramref name="dataTypeSec">dataTypeSec</paramref>.</param>
 <remarks>
 <para>All imported remarks should bear a relationship to an existing 
 core object instance, variable type an optional subgroup.</para>
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Database.cEwE5EIIImporter">
 -----------------------------------------------------------------------
 <summary>
 Imports an EwE5 .eii into an EwE6 database
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.Database.cEwE5EIIImporter.m_data">
 <summary>Data buffer.</summary>
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.#ctor(EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 <param name="core">The core to import into.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.Open(System.String)">
 -----------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.Close"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.Close">
 -----------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.Close"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.IsOpen">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.IsOpen"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.Models">
 -----------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.Models"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.PerformImport">
 -------------------------------------------------------------------
 <summary>
 Imports and converts a model in an EwE5 database into a provided EwE6 database.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.GetNextValidValue(System.String[],System.Int32@)">
 <summary>
 Returns the next valid, non-empty string from a series of input entries.
 </summary>
 <param name="data">The input entries to scan.</param>
 <param name="iNextIndex">The index of that string.</param>
 <returns></returns>
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.Save">
 -------------------------------------------------------------------
 <summary>
 Save imported data to the EwE6 database.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.SaveModel">
 -------------------------------------------------------------------
 <summary>
 Save Ecopath model
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.SaveGroups">
 <summary>
 Save Ecopath groups
 </summary>
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.SaveDietComp">
 -------------------------------------------------------------------
 <summary>
 Save Ecopath diets
 </summary>
 <returns>True if successful</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.SaveFleets">
 -------------------------------------------------------------------
 <summary>
 Save Ecopath fleets
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.SaveCatch">
 <summary>
 Save Ecopath catch data
 </summary>
</member>
<member name="M:EwECore.Database.cEwE5EIIImporter.SaveDiscardFate">
 <summary>
 Save Ecopath discard fate
 </summary>
</member>
<member name="T:EwECore.Database.cEwE5ModelImporter">
 -------------------------------------------------------------------
 <summary>
 Interface for implementing an importer to convert an EwE5 document
 into an EwE6 database.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="F:EwECore.Database.cEwE5ModelImporter.cEWE5_NULL">
 <summary>EWE5 NULL value.</summary>
</member>
<member name="T:EwECore.Database.cModelImporter">
 -------------------------------------------------------------------
 <summary>
 Interface for implementing an importer to convert an EwE5 document
 into an EwE6 database.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="F:EwECore.Database.cModelImporter.m_sbLog">
 <summary>Status log.</summary>
</member>
<member name="F:EwECore.Database.cModelImporter.m_strSource">
 <summary>Source database file name.</summary>
</member>
<member name="F:EwECore.Database.cModelImporter.m_dbTarget">
 <summary>Target database in EwE6 format.</summary>
</member>
<member name="F:EwECore.Database.cModelImporter.m_strModelName">
 <summary>Name of the model to import.</summary>
</member>
<member name="F:EwECore.Database.cModelImporter.m_core">
 <summary>The core to use when importing.</summary>
</member>
<member name="F:EwECore.Database.cModelImporter.m_iNumSteps">
 <summary>Number of steps that the import process will take.</summary>
</member>
<member name="F:EwECore.Database.cModelImporter.m_iStep">
 <summary>The current step processed by the import.</summary>
</member>
<member name="M:EwECore.Database.cModelImporter.Open(System.String)">
 -------------------------------------------------------------------
 <summary>
 Connects the importer to an EwE5 source database. This database is
 indicated as a file path, and is assumed to be an MS Access database.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Any database connection established via the Open method must be 
 disconnected via the <see cref="M:EwECore.Database.cModelImporter.Close">Close</see> method.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cModelImporter.Close">
 -------------------------------------------------------------------
 <summary>
 Disconnects the importer from its EwE5 source document.
 </summary>
 <remarks>
 Any database connection established via the <see cref="M:EwECore.Database.cModelImporter.Open(System.String)">Open</see>
 method must be disconnected via the Close method.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cModelImporter.IsOpen">
 -------------------------------------------------------------------
 <summary>
 States whether the importer was connected to its source document 
 via the <see cref="M:EwECore.Database.cModelImporter.Open(System.String)">Open</see> method.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cModelImporter.Import(EwEUtils.Database.cExternalModelInfo,EwEUtils.Database.cEwEDatabase,System.String@)">
 -------------------------------------------------------------------
 <summary>
 Perform the actual import.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cModelImporter.Models">
 -------------------------------------------------------------------
 <summary>
 Get a <see cref="T:EwEUtils.Database.cExternalModelInfo">descriptive list of models</see> 
 that can be imported from an attached EwE5 document.
 </summary>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cModelImporter.CanImportFrom(System.String)">
 -------------------------------------------------------------------
 <summary>
 Returns whether this importer can import from a given source.
 </summary>
 <param name="strSource">The source to explore.</param>
 <returns>True if this importer can import from the given source.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cModelImporter.PerformImport">
 -------------------------------------------------------------------
 <summary>
 Actual implementation of the import process.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cModelImporter.LogProgress(System.String,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Logs a progress message.
 </summary>
 <param name="strMessage">Progress message.</param>
 <param name="iStep">Progress step. If -1, the internal step admin is 
 automatically incremented.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cModelImporter.LogMessage(System.String,EwEUtils.Core.eMessageType,EwEUtils.Core.eMessageImportance,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Logs a message
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Database.cEcobaseImporter">
 -----------------------------------------------------------------------
 <summary>
 Imports a model from Ecobase into an EwE6 database
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.Database.cEcobaseImporter.m_data">
 <summary>Data buffer.</summary>
</member>
<member name="M:EwECore.Database.cEcobaseImporter.#ctor(EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 <param name="core">The core to import into.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEcobaseImporter.Open(System.String)">
 -----------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.Open(System.String)"/>
 <param name="strSource">The key of the Ecobase model to open.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEcobaseImporter.Close">
 -----------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.Close"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEcobaseImporter.IsOpen">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.IsOpen"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEcobaseImporter.Models">
 -----------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.Database.cModelImporter.Models"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEcobaseImporter.PerformImport">
 -------------------------------------------------------------------
 <summary>
 Imports and converts a model in an EwE5 database into a provided EwE6 database.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Database.cEcobaseImporter.LoadModel">
 <summary>
 Obtain model data from Ecobase
 </summary>
 <returns></returns>
</member>
<member name="T:EwECore.cModelImporterFactory">
 ===========================================================================
 <summary>
 Factory class; builds a <see cref="T:EwECore.Database.cEwE5ModelImporter">EwE5 model importer</see>.
 </summary>
 ===========================================================================
</member>
<member name="M:EwECore.cModelImporterFactory.GetModelImporter(EwECore.cCore,System.String,EwEPlugin.cPluginManager)">
 -----------------------------------------------------------------------
 <summary>
 Factory method; builds a <see cref="T:EwECore.Database.cEwE5ModelImporter">EwE5 model importer</see>
 from a path to an EwE5 source document. 
 </summary>
 <param name="core">The core to associate the importer with.</param>
 <param name="strSource">Path to data source to build the importer for.</param>
 <returns>A <see cref="T:EwECore.Database.cEwE5ModelImporter">EwE5 model importer</see>, if
 all went well, or Nothing otherwise.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate">
 --------------------------------------------------------------------------
 <summary>
 Database update base class.
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 Apply the actual update
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate.LogProgress(System.String,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Write update progress to the log.
 </summary>
 <param name="strProgress">Progress entry to write.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate.UserAction">
 -----------------------------------------------------------------------
 <summary>
 Message text to show to the user to take action, if any.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_01_01">
 --------------------------------------------------------------------------
 <summary>
 Database update 6.0.1.1: Add VisualStyles column to table Remark
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_01_01.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_01_01.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_01_01.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_03_02">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.3.2:</para>
 <para>
 <list type="bullet">
 <item><description>Change EcospaceScenario Description column to MEMO</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_03_02.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_02.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_02.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_03_04">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.3.4:</para>
 <para>
 <list type="bullet">
 <item><description>Added Author and Contact information to model, scenarios</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_03_04.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_04.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_04.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_03_05">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.3.5:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed default weight for imported time series</description></item>
 <item><description>Added Species table</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_03_05.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_05.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_05.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_03_06">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.3.6:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecotracer tables</description></item>
 <item><description>Removed Ecoranger tables</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_03_06.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_06.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_06.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_03_07">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.3.7:</para>
 <para>
 <list type="bullet">
 <item><description>Added salinity to Ecosim.</description></item>
 <item><description>Added concentration FF to Ecotracer.</description></item>
 <item><description>Fixed Ecospace group defaults.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_03_07.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_07.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_07.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_03_08">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.3.8:</para>
 <para>
 <list type="bullet">
 <item><description>Added last saved date to model and scenarios.</description></item>
 <item><description>Added quotes table.</description></item>
 <item><description>Fixed Ecospace group defaults.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_03_08.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_08.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_03_08.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_00">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.3.8:</para>
 <para>
 <list type="bullet">
 <item><description>Added EcosimTimeseriesDataset.</description></item>
 <item><description>Migrated existing Time Series data to new Dataset table.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_04_00.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_00.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_00.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_0001">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.4.001:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed stanza life stage vbK issue.</description></item>
 <item><description>Added Ecopath Area.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_04_0001.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0001.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0001.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_0002">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.4.001:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecopath Area.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_04_0002.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0002.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0002.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_0003">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.4.003:</para>
 <para>
 <list type="bullet">
 <item><description>Removed Ecopath Group vbK, stored in Stanza life stage instead.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_04_0003.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0003.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0003.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_0004">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.4.004:</para>
 <para>
 <list type="bullet">
 <item><description>Fixes relative primary production issue in existing Ecospace scenarios.</description></item>
 <item><description>Fixes units.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_04_0004.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0004.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0004.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_00042">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.4.004:</para>
 <para>
 <list type="bullet">
 <item><description>Fixes Ecotracer.</description></item>
 <item><description>Add Pedigree table.</description></item>
 <item><description>Add monetary unit to models.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_04_00042.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_00042.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_00042.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_0005">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.4.005:</para>
 <para>
 <list type="bullet">
 <item><description>Adds Ecospace weight layer tables.</description></item>
 <item><description>Fixed field lengths.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0005.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_0005.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_04_0005.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_02">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.4.02:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed units.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_02.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_02.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_04_02.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_021">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.4.021:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecosim group max fishing mortality.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_021.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_021.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_04_021.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 The actual update logic.
 </summary>
 <param name="db">Database to modify.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_04_022">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.4.022:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecopath discard mortality.</description></item>
 <item><description>Added Ecosim fisheries regulation.</description></item>
 <item><description>Updated group x group indexes.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_022.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_04_022.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_05_001">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.5.001:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecopath discard mortality.</description></item>
 <item><description>Added Ecosim fisheries regulation.</description></item>
 <item><description>Updated group x group indexes.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_05_001.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_05_001.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_05_005">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.5.005:</para>
 <para>
 <list type="bullet">
 <item><description>Added PSD parameters.</description></item>
 <item><description>Added PSD fields to groups.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_05_005.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_05_005.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_06_001">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.6.001:</para>
 <para>
 <list type="bullet">
 <item><description>Reworked PSD fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_001.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_001.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_06_002">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.6.0623:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed mediation issue.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_002.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_002.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_06_003">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.6.003:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed .</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_003.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_003.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_06_003.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 Do yer thang.
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_06_003.FixEcosimFleets(EwEUtils.Database.cEwEDatabase)">
 -----------------------------------------------------------------------
 <summary>
 Update: create missing fleet entries for Ecosim.
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_06_003.FixMultipleLinkedEffortShapes(EwEUtils.Database.cEwEDatabase)">
 -----------------------------------------------------------------------
 <summary>
 Update: clear references to effort shapes that are used MORE than once.
 Every fleet in every scenario must have its own effort shape which was
 not always the case due to a bug in the database import logic.
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_06_004">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.6.004:</para>
 <para>
 <list type="bullet">
 <item><description>Simplified port table layout.</description></item>
 <item><description>Added GroupDigits to model.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_004.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_004.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_06_005">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.6.005:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecopath year.</description></item>
 <item><description>Added Ecosim quote fields.</description></item>
 <item><description>Moved Fleet size dynamics data to Ecosim tables.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_005.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_005.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_06_006">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.6.006:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecosim temperature response fields.</description></item>
 <item><description>Added Ecosim forcing function application type fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_006.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_006.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_06_007">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.6.007:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecosim quota fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_007.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_06_007.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_07_001">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.7.001:</para>
 <para>
 <list type="bullet">
 <item><description>Patched default Fleet colors.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_07_001.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_07_001.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_07_002">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.7.002:</para>
 <para>
 <list type="bullet">
 <item><description>Added sail cost fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_07_002.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_07_002.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_00_07_003">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.0.7.003:</para>
 <para>
 <list type="bullet">
 <item><description>Added sail cost fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_07_003.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_00_07_003.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_00_07_003.FixEcospaceFleetMapPK(EwEUtils.Database.cEwEDatabase)">
 <summary>
 Fix PK on EcospaceScenarioFleetMap
 </summary>
 <param name="db"></param>
 <returns></returns>
</member>
<member name="T:EwECore.cDBUpdate6_01_00_000">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.000:</para>
 <para>
 <list type="bullet">
 <item><description>Added MSE fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_000.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_000.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_00_001">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.001:</para>
 <para>
 <list type="bullet">
 <item><description>Added more MSE fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_001.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_001.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_00_002">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.002:</para>
 <para>
 <list type="bullet">
 <item><description>Added more MSE fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_002.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_002.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_00_003">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.003:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecopath spatial context.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_003.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_003.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_00_004">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.004:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecopath taxonomy support.</description></item>
 <item><description>Added Ecopath model area support.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_004.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_004.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_00_005">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.005:</para>
 <para>
 <list type="bullet">
 <item><description>Removed unused time series fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_005.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_005.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_00_006">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.006:</para>
 <para>
 <list type="bullet">
 <item><description>Added pedigree level name.</description></item>
 <item><description>Added advection fields.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_006.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_006.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_00_007">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.007:</para>
 <para>
 <list type="bullet">
 <item><description>Added pedigree colour.</description></item>
 <item><description>Changed pedigree storage location.</description></item>
 <item><description>Fixed pedigree designation error.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_007.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_007.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_00_008">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.008:</para>
 <para>
 <list type="bullet">
 <item><description>Added stanza leading.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_008.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_008.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_00_009">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.0.009:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed MSY group and fleet year constraints.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_009.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_00_009.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_01_002">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.1.002:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed MSY group and fleet year constraints.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType">
 -----------------------------------------------------------------------
 <summary>
 Enumrated type containing the world's 3-letter ISO currency codes.
 </summary>
 <remarks>
 Last time we'll ever need this. From now on, ISO currency codes are
 obtained from the .NET framework.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.NotSet">
 <summary>Currency type is not set.</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.AED">
 <summary>UAE Dirham</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.AFN">
 <summary>Afghanistan Afghani</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ALL">
 <summary>Albanian Lek</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.AMD">
 <summary>Armenian Dram</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ANG">
 <summary>Antillean Guilder</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.AOR">
 <summary>Angolan New Kwanza</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ARS">
 <summary>Argentinian Peso</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.AUD">
 <summary>Australian Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.AWG">
 <summary>Aruban Florin</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.AZM">
 <summary>Azerbaijan Manat</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BAM">
 <summary>Bosnian Konvertibilna Marka</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BBD">
 <summary>Barbadian Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BDT">
 <summary>Bangladesh Taka</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BGN">
 <summary>Bulgarian New Lev</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BHD">
 <summary>Bahraini Dinar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BIF">
 <summary>Burundian Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BMD">
 <summary>Bermudan Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BND">
 <summary>Brunei Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BOB">
 <summary>Bolivian Boliviano</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BRL">
 <summary>Brazilian Real</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BSD">
 <summary>Bahamas Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BTN">
 <summary>Bhutan Ngultrum</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BWP">
 <summary>Botswana Pula</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BYB">
 <summary>Belarussian Ruble</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.BZD">
 <summary>Belizean Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.CAD">
 <summary>Canadian Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.CDF">
 <summary>Congolese Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.CHF">
 <summary>Swiss Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.CLP">
 <summary>Chilean Peso</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.CNY">
 <summary>Chinese Yuan Renminbi</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.COP">
 <summary>Colombian Peso</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.CRC">
 <summary>Costa Rican Colon</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.CUP">
 <summary>Cuban Peso</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.CVE">
 <summary>Cape Verdean Escudo</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.CZK">
 <summary>Czech Koruna</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.DJF">
 <summary>Djiboutian Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.DKK">
 <summary>Danish Krone</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.DOP">
 <summary>Dominican Republic Peso</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.DZD">
 <summary>Algerian Dinar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ECS">
 <summary>Ecuador Sucre</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.EEK">
 <summary>Estonian Kroon</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.EGP">
 <summary>Eqyptian Pound</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ETB">
 <summary>Ethiopian Birr</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.EUR">
 <summary>Euro</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.FJD">
 <summary>Fijian Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.FKP">
 <summary>Falkland Islands Pound</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.FRF">
 <summary>French Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.GBP">
 <summary>UK Pound Sterling</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.GEL">
 <summary>Georgian Lari</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.GHC">
 <summary>Ghana Cedi</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.GIP">
 <summary>Gibraltarian Pound</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.GMD">
 <summary>Gambian Dalasi</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.GNF">
 <summary>Guinean Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.GTQ">
 <summary>Guatemalan Quetzal</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.GYD">
 <summary>Guyanese Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.HKD">
 <summary>Hong Kong Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.HNL">
 <summary>Honduran Lempira</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.HRK">
 <summary>Croatian Kuna</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.HTG">
 <summary>Haitian Gourde</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.HUF">
 <summary>Hungarian Forint</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.IDR">
 <summary>Indonesian Rupiah</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ILS">
 <summary>Israeli New Sheqel</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.INR">
 <summary>Indian Rupee</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.IQD">
 <summary>Iraqi Dinar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.IRR">
 <summary>Iranian Rial</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ISK">
 <summary>Iceland Krona</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.JMD">
 <summary>Jamaican Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.JOD">
 <summary>Jordanian Dinar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.JPY">
 <summary>Japanese Yen</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.KES">
 <summary>Kenyan Shilling</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.KGS">
 <summary>Kyrgyzstan Som</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.KHR">
 <summary>Cambodian Riel</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.KMF">
 <summary>Comoran Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.KPW">
 <summary>Korean PR Won (N.Korea)</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.KRW">
 <summary>Korean Republic Won (S.Korea)</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.KWD">
 <summary>Kuwaiti Dinar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.KYD">
 <summary>Caymanian Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.KZT">
 <summary>Kazakhstan Tenge</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.LAK">
 <summary>Laos Kip</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.LBP">
 <summary>Lebanese Pound</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.LKR">
 <summary>Sri Lanka Rupee</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.LRD">
 <summary>Liberian Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.LSL">
 <summary>Lesothian Loti</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.LTL">
 <summary>Lithuanian Litas</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.LVL">
 <summary>Latvian Lat</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.LYD">
 <summary>Libyan Dinar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MAD">
 <summary>Moroccan Dirham</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MDL">
 <summary>Moldovan Leu</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MGF">
 <summary>Malagasy Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MKD">
 <summary>Macedonian Denar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MMK">
 <summary>Myanmar Kyat</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MNT">
 <summary>Mongolian Tugrik</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MOP">
 <summary>Macau Pataca</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MRO">
 <summary>Mauritanian Ougiya</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MUR">
 <summary>Mauritian Rupee</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MVR">
 <summary>Maldivian Rufiyaa</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MWK">
 <summary>Malawi Kwacha</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MXN">
 <summary>Mexican New Peso</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MYR">
 <summary>Malaysian Ringgit</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.MZM">
 <summary>Mozambique Metical</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.NAD">
 <summary>Namibia Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.NGN">
 <summary>Nigerian Naira</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.NIO">
 <summary>Nicaraguan Crdoba</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.NOK">
 <summary>Norwegian Krone</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.NPR">
 <summary>Nepalese Rupee</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.NZD">
 <summary>New Zealand Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.OMR">
 <summary>Omani Rial</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.PAB">
 <summary>Panamanian Balboa</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.PEN">
 <summary>Peruvian New Sol</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.PGK">
 <summary>Papua New Guinea Kina</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.PHP">
 <summary>Philippine Piso</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.PKR">
 <summary>Pakistani Rupee</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.PLN">
 <summary>Polish New Zloty</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.PYG">
 <summary>Paraguayan Guaran</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.QAR">
 <summary>Qatari Riyal</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ROL">
 <summary>Romanian Leu</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.RSD">
 <summary>Serbian Dinar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.RUB">
 <summary>Russian Rouble</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.RWF">
 <summary>Rwandan Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SAR">
 <summary>Saudi Riyal</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SBD">
 <summary>Solomon Islands Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SCR">
 <summary>Seychelles Rupee</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SDD">
 <summary>Sudanese Dinar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SEK">
 <summary>Swedish Krona</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SGD">
 <summary>Singaporean Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SHP">
 <summary>Saint Helena Pound</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SKK">
 <summary>Slovak Koruna</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SLL">
 <summary>Sierra Leone Leone</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SOS">
 <summary>Somali Shilling</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SRG">
 <summary>Surinamese Guilder</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.STD">
 <summary>Sáo Tome and Principe Dobra</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SVC">
 <summary>Salvadoran Colon</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SYP">
 <summary>Syrian Pound</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.SZL">
 <summary>Swaziland Lilangeni</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.THB">
 <summary>Thai Baht</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.TJR">
 <summary>Tajikistan Ruble</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.TMM">
 <summary>Turkmenistan Manat</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.TND">
 <summary>Tunisian Dinar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.TOP">
 <summary>Tonga Pa'anga</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.TRY">
 <summary>New Turkish Lira</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.TTD">
 <summary>Trinidadian Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.TWD">
 <summary>Taiwanese Yuan</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.TZS">
 <summary>Tanzanian Shilling</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.UAH">
 <summary>Ukraine Hryvnias</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.UGX">
 <summary>Uganda New Shilling</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.USD">
 <summary>U.S. Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.UYU">
 <summary>Peso Uruguayo</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.UZS">
 <summary>Uzbekistan Sum</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.VEB">
 <summary>Venezuelan Bolvar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.VND">
 <summary>Vietnamese New Dng</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.VUV">
 <summary>Vanuatu Vatu</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.WST">
 <summary>Western Samoan Tala</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.XAF">
 <summary>CFA Central Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.XCD">
 <summary>East Caribbean Dollar</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.XOF">
 <summary>CFA West Franc</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.XPF">
 <summary>French Polynesian CFA France (CFP)</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.YER">
 <summary>Yemen Rial</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ZAR">
 <summary>South African Rand</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ZMK">
 <summary>Zambian Kwacha</summary>
</member>
<member name="F:EwECore.cDBUpdate6_01_01_002.eUnitMonetaryType.ZWD">
 <summary>Zimbabwean Dollar</summary>
</member>
<member name="P:EwECore.cDBUpdate6_01_01_002.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_002.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_01_003">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.1.003:</para>
 <para>
 <list type="bullet">
 <item><description>Increased size of author columns.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_003.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_003.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_01_004">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.1.004:</para>
 <para>
 <list type="bullet">
 <item><description>Split Ecospace IDH_UL field in two components.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_004.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_004.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_01_005">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.1.005:</para>
 <para>
 <list type="bullet">
 <item><description>Added other mort input</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_005.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_005.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_01_006">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.1.006:</para>
 <para>
 <list type="bullet">
 <item><description>Verified pedigree table</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_006.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_006.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_01_010">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.1.010:</para>
 <para>
 <list type="bullet">
 <item><description>Cleaned up stanza</description></item>
 </list>
 </para>
 </summary>
 <remarks>
 In case you wonder where updates 7, 8 and 9 went: these have been made
 obsolete by earlier development updates, but since some versions of the
 EwE with these updates have been released into the wild this update must be
 able to undo the work of these discontinued updates. Lo siento.
 </remarks>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_010.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_010.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_01_01_011">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.1.011:</para>
 <para>
 <list type="bullet">
 <item><description>Added landings mediation tables</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_011.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_01_01_011.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_02_00_000">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.1.1.011:</para>
 <para>
 <list type="bullet">
 <item><description>Added landings mediation tables</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_000.UpdateVersion">
 -----------------------------------------------------------------------
 <summary>
 This method provides the update version number that will be entered in
 the update log of the database. This version number is also used to check
 whether an update should run.
 </summary>
 <remarks>
 If <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> is provided, the
 update is ran regardless of version number.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_000.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_02_00_01">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.2.0.01:</para>
 <para>
 <list type="bullet">
 <item><description>Restructured saving of Ecospace maps.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_01.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_01.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_02_00_02">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.2.0.02:</para>
 <para>
 <list type="bullet">
 <item><description>Max time shape length will be remembered in the EwE model
 since this setting is Ecosim scenario independent.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_02.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_02.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_02_00_03">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.2.0.03:</para>
 <para>
 <list type="bullet">
 <item><description>Added EwE version to updatelog.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_03.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_03.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_02_00_04">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.2.0.04:</para>
 <para>
 <list type="bullet">
 <item><description>Added multiple taxon codes.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_04.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_04.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_02_00_05">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.2.0.05:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed Capacity driver PK</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_05.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_05.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_02_00_06">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.2.0.06:</para>
 <para>
 <list type="bullet">
 <item><description>Discontinued regions as objects, merged into a single map.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_06.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_02_00_06.UpdateDescription">
 -----------------------------------------------------------------------
 <summary>
 This method provides the text that will be entered in the update log in
 the database.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_12_00007">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.120007:</para>
 <para>
 <list type="bullet">
 <item><description>Added table to save spatial data configuration.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00007.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00007.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_12_00008">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.120008:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecosim effort conversion factor.</description></item>
 <item><description>Added taxon growth parameters.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00008.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00008.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_12_00009">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.120009:</para>
 <para>
 <list type="bullet">
 <item><description>Added cell size to Ecospace scenario.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00009.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00009.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_12_00010">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.120010:</para>
 <para>
 <list type="bullet">
 <item><description>Added CV to Ecosim time series.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00010.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00010.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_12_00011">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.120011:</para>
 <para>
 <list type="bullet">
 <item><description>Added MSE max effort.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00011.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00011.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_12_00012">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.120012:</para>
 <para>
 <list type="bullet">
 <item><description>Added data adapters scale.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00012.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00012.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_12_00013">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.120012:</para>
 <para>
 <list type="bullet">
 <item><description>Stanza leading B and leading QB separated</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00013.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_12_00013.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_40_00_01">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.40.0.01:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecospace effort multiplier and distribution flags.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_40_00_01.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_40_00_01.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_40_00_02">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.40.0.02:</para>
 <para>
 <list type="bullet">
 <item><description>EcospaceScenarioCapacitDrivers table referred to Ecopath
 group IDs. This should be Ecospace group IDs. This update also fixes the 
 name of the table to 'EcospaceScenarioCapacityDrivers'</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_40_00_02.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_40_00_02.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_40_00_02.GetEcospaceGroupID(EwEUtils.Database.cEwEDatabase,System.Int64,System.Int64)">
 <summary>
 
 </summary>
 <param name="db"></param>
 <param name="lScenarioID">Ecospace scenario ID</param>
 <param name="lGroupID">Ecopath group ID</param>
 <returns>An Ecospace group ID.</returns>
</member>
<member name="T:EwECore.cDBUpdate6_40_00_03">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.40.0.03:</para>
 <para>
 <list type="bullet">
 <item><description>Added model exclusion layer</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_40_00_03.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_40_00_03.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_40_00_04">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.40.0.04:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed ref integrity to Ecospace groups (not Ecopath)</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_40_00_04.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_40_00_04.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_10_01">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.1.01:</para>
 <para>
 <list type="bullet">
 <item><description>Updated Ecotracer</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_10_01.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_10_01.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_10_02">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.1.02:</para>
 <para>
 <list type="bullet">
 <item><description>Updated Ecotracer</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_10_02.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_10_02.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_01">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.01:</para>
 <para>
 <list type="bullet">
 <item><description>Added model exclusion layer</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_01.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_01.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_02">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.02:</para>
 <para>
 <list type="bullet">
 <item><description>Re-issued 6.4.04 to fix development time updates</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_02.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_02.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_03">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.02:</para>
 <para>
 <list type="bullet">
 <item><description>Re-issued 6.4.04 to fix development time updates</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_03.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_03.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_04">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.04:</para>
 <para>
 <list type="bullet">
 <item><description>Re-issued 6.4.04 to fix development time updates</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_04.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_04.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_05">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.05:</para>
 <para>
 <list type="bullet">
 <item><description>Enabled monthly time series</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_05.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_05.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_06">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.06:</para>
 <para>
 <list type="bullet">
 <item><description>Enabled monthly time series</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_06.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_06.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_07">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.07:</para>
 <para>
 <list type="bullet">
 <item><description>Added AssumeSquareCells flag</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_07.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_07.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_08">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.07:</para>
 <para>
 <list type="bullet">
 <item><description>Added AssumeSquareCells flag</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_08.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_08.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_09">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.09:</para>
 <para>
 <list type="bullet">
 <item><description>Habitat capacity calculation type made per group.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_09.cOldCapCalcType">
 -----------------------------------------------------------------------
 <summary>
 Enumerated type stating supported Ecospace habitat foraging capacity calculation methods.
</summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cDBUpdate6_50_00_09.cOldCapCalcType.EnvResponses">
 <summary>Only environmental responses and capacity input layers are used to calculate capacity. Habitats are ignored for this purpose</summary>
</member>
<member name="F:EwECore.cDBUpdate6_50_00_09.cOldCapCalcType.Habitat">
 <summary>Only habitats are used to calculate capacity. Capacity inputs are ignored.</summary>
</member>
<member name="F:EwECore.cDBUpdate6_50_00_09.cOldCapCalcType.Both">
 <summary>Both environmental responses and habitats are used to calculate capacity.</summary>
</member>
<member name="P:EwECore.cDBUpdate6_50_00_09.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_09.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_10">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.10:</para>
 <para>
 <list type="bullet">
 <item><description>Changed shape function type to long.</description></item>
 <item><description>Added taxon exploitation status.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_10.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_10.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_11">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.11:</para>
 <para>
 <list type="bullet">
 <item><description>Add foraging time lower limit flag for Ecosim.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_11.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_11.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_12">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.12:</para>
 <para>
 <list type="bullet">
 <item><description>Add Ecospace monthly data table.</description></item>
 <item><description>Add Ecospace flow map for advection.</description></item>
 <item><description>Remvoed Ecospace advection fields that have been computed.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_12.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_12.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_13">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.13:</para>
 <para>
 <list type="bullet">
 <item><description>Add EcoBase metadata fields to the EwE model.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_13.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_13.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_14">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.14:</para>
 <para>
 <list type="bullet">
 <item><description>Discontinued table EcospaceScenarioHabitatChange.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_14.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_14.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_15">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.15:</para>
 <para>
 <list type="bullet">
 <item><description>Add EcoBase metadata fields to the EwE model.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_15.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_15.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_16">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.16:</para>
 <para>
 <list type="bullet">
 <item><description>Some old models created from development versions of 
 <see cref="T:EwECore.cDBUpdate6_01_01_010"/> contain incomplete taxonomy tables. This 
 update re-applies some of the database schema changes as a precaution.
 </description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_16.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_16.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_17">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.17:</para>
 <para>
 <list type="bullet">
 <item><description>Taxonomic plug-in source name field extended in size.
 </description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_17.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_17.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_19">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.19:</para>
 <para>
 <list type="bullet">
 <item><description>Added two more EcobBase fields.
 </description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_19.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_19.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_20">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.20:</para>
 <para>
 <list type="bullet">
 <item><description>Updated to new migration map system.
 </description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_20.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_20.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_21">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.21:</para>
 <para>
 <list type="bullet">
 <item><description>Added AuxillaryData.Settings.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_21.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_21.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_22">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.21:</para>
 <para>
 <list type="bullet">
 <item><description>Removed discontinued migration fields</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_22.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_22.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_23">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.23:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecopath sample tables</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_23.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_23.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_24">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.24:</para>
 <para>
 <list type="bullet">
 <item><description>Updated shape functions</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_24.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_24.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_25">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.25:</para>
 <para>
 <list type="bullet">
 <item><description>Added Ecopath sample tables</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_25.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_25.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_26">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.21:</para>
 <para>
 <list type="bullet">
 <item><description>Removed discontinued migration fields</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_26.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_26.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_50_00_27">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.50.0.27:</para>
 <para>
 <list type="bullet">
 <item><description>Updated Ecosim environmental drivers</description></item>
 <item><description>Updated existing Normal distribution shape functions</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_27.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_50_00_27.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_50_00_27.CreateReponseCurve(EwEUtils.Database.cEwEDatabase,System.String,System.Int32,System.String,System.String,System.Single,System.Single,System.Single,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Create a new response function from a sal or temp mean and optimum definition.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_50_00_27.AssignResponse(EwEUtils.Database.cEwEDatabase,System.Int32,System.Int32,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Assign the newly defined response shape to an existing driver, if any. 
 </summary>
 <param name="db">Plop.</param>
 <param name="iScenarioID">The Ecosim sccenario to assign the response to.</param>
 <param name="iGroupID">The Ecosim group to assign the response to.</param>
 <param name="iDriverID">The existing Ecosim driver forcing function (sal or temp).</param>
 <param name="iResponseID">The newly created Ecosim environmental response shape.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_50_00_27.UpdateResponseFunctions(EwEUtils.Database.cEwEDatabase)">
 <summary>
 Update Existing EcosimShapeMediation Normal distribution functions records from the old format which scaled to function to a fixed format based on the Mean and SD values.
 </summary>
 <param name="db"></param>
 <remarks></remarks>
</member>
<member name="T:EwECore.cDBUpdate6_60_00_01">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.01:</para>
 <para>
 <list type="bullet">
 <item><description>Added BaBi to samples</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_01.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_01.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_02">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.02:</para>
 <para>
 <list type="bullet">
 <item><description>Fixed branch merge conflict</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_02.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_02.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_03">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.03:</para>
 <para>
 <list type="bullet">
 <item><description>Re-issued 6.4.04, some databases strangely still contained this error</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_03.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_03.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_04">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.04:</para>
 <para>
 <list type="bullet">
 <item><description>Altered capacity calculation type enum</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_04.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_04.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_05">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.05:</para>
 <para>
 <list type="bullet">
 <item><description>Fleet time series no longer have relational reference to groups
 because this link may not exist. Then, fleet time series can no longer be added.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_05.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_05.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_06">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.06:</para>
 <para>
 <list type="bullet">
 <item><description>Driver layers have units.</description></item>
 </list>
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_06.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_06.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_07">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.06:</para>
 <para>
 An error was identified in the database loading logic. This update cannot 
 apply any fixes as the bug obscures the users intentions. The update thus 
 merely checks wich scenarios may have been affected and warns the user.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_07.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_07.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_08">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.08:</para>
 <para>
 Added catchability table.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_08.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_08.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_09">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.09:</para>
 <para>
 Cleaned up pedigree table structure.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_09.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_09.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_12">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.12:</para>
 <para>
 Added ecospacce fitness response type field.
 Added stanza spawn proportion
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_12.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_12.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_13">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.13:</para>
 <para>
 Added other mortality driver layer
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_13.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_13.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_14">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.14:</para>
 <para>
 Brought back shared foraging arenas
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_14.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_14.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_15">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.15:</para>
 <para>
 Removed EatEffBad, added KMoveFit
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_15.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_15.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_16">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.16:</para>
 <para>
 Ecosim catchbilities now long text
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_16.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_16.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_17">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.17:</para>
 <para>
 Ecosampler samples now also store SS
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_17.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_17.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_18">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.18:</para>
 <para>
 Ensure default Pedigree levels
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_18.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_18.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_19">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.19:</para>
 <para>
 Added three more taxonomic codes
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_19.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_19.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_20">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.20:</para>
 <para>
 Added Q10 driver map
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_20.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_20.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_21">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.21:</para>
 <para>
 Fixed importance layer primary key for some models
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_21.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_21.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_22">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.22:</para>
 <para>
 Fixed potential ecospace connection storage problem
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_22.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_22.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_23">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.23:</para>
 <para>
 Fixed potential ecospace connection storage problem
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_23.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_23.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_60_00_23.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 This update is pretty sad. In some cases we found Access database fields 
 with AllowZeroLength = False flags set. This flag cannot be toggled through
 SQL, and requires recreating the field. That happens below. Eeek.
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_25">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.25:</para>
 <para>
 This update addresses an issue present since the very start of EwE6, where 
 deleted fleets left behind orphaned fishing effort shapes. This update does
 not alter the structure of the EwE database.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_25.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_25.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_60_00_25.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 Delete orphaned fishing effort shapes
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_60_00_26">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.60.0.26:</para>
 <para>
 Fixed potential ecosampler storage problem. Renamed from 6.60.0.24.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_26.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_60_00_26.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_60_00_26.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 At some pont, the on-board EwE database templates received an erroneous
 index on a value column. This update removes the index if it exists.
 </summary>
 <param name="db"></param>
 <returns>Always true</returns>
 <remarks>This update is re-issued because the index error returned in the
 on-board database templates, thus re-instating the error. Good lord.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_01">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.01:</para>
 <para>
 Added additive proportion of predation mortality.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_01.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_01.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_01.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 Delete orphaned fishing effort shapes
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_02">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.02:</para>
 <para>
 Added other mortality saving.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_02.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_02.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_02.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 Delete orphaned fishing effort shapes
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_03">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.03:</para>
 <para>
 Added Ecosim shared arena sequence.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_03.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_03.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_03.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 Add arena share sequential no
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_04">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.04:</para>
 <para>
 Remember Ecosim and Ecospace capacity driver settings; Ecospace spin-up settings.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_04.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_04.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_04.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 Delete orphaned fishing effort shapes
 </summary>
 <param name="db"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_05">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.05:</para>
 <para>
 Added stanza recruitment linkage.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_05.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_05.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_05.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cDBUpdate.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_06">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.06:</para>
 <para>
 Made capacity / mortality driver assignments robust.
 </para>
 </summary>
 <remarks>
 This update ensures that users can simultaneously apply the same 
 var/group/shape combination to drive capacity and mortalities. It is highly 
 unlikely that this combination would be used for both scenarios, but let's 
 not eliminate the use case. This update fixes both Ecosim and Ecospace.
 </remarks>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_06.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_06.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_07">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.07:</para>
 <para>
 Added disabled external data connections.
 </para>
 </summary>
 <remarks>Note that this logic follows the use fo varnames to identify the 
 target layer, just like table EcospaceScenarioDataConnection</remarks>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_07.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_07.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_07.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cDBUpdate.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_08">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.08:</para>
 <para>
 Added applied data range to external data connections.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_08.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_08.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_08.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cDBUpdate.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_09">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.09:</para>
 <para>
 Fixed potential ecosampler storage problem - reissued, because the on-board
 database templates had the issue again.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_09.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_09.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_09.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 At some pont, the on-board EwE database templates received an erroneous
 index on a value column. This update removes the index if it exists.
 </summary>
 <param name="db"></param>
 <returns>Always true</returns>
 <remarks>This update is re-issued because the index error returned in the
 on-board database templates, thus re-instating the error. Good lord.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_10">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.10:</para>
 <para>
 Added fleet nominal effort.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_10.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_10.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_10.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 At some pont, the on-board EwE database templates received an erroneous
 index on a value column. This update removes the index if it exists.
 </summary>
 <param name="db"></param>
 <returns>Always true</returns>
 <remarks>This update is re-issued because the index error returned in the
 on-board database templates, thus re-instating the error. Good lord.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_11">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.11:</para>
 <para>
 Catchabilities now driven through time series.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_11.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_11.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_11.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 At some pont, the on-board EwE database templates received an erroneous
 index on a value column. This update removes the index if it exists.
 </summary>
 <param name="db"></param>
 <returns>Always true</returns>
 <remarks>This update is re-issued because the index error returned in the
 on-board database templates, thus re-instating the error. Good lord.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_12">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.12:</para>
 <para>
 External data can now start and end at a specific date, not at a year.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_12.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_12.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_12.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 At some pont, the on-board EwE database templates received an erroneous
 index on a value column. This update removes the index if it exists.
 </summary>
 <param name="db"></param>
 <returns>Always true</returns>
 <remarks>This update is re-issued because the index error returned in the
 on-board database templates, thus re-instating the error. Good lord.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_13">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.13:</para>
 <para>
 Added effort zones and cell area maps.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_13.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_13.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_13.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 Added map to record cell area for correctly producing Ecospace plots.
 </summary>
 <param name="db"></param>
 <returns>True if update succeeded.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cDBUpdate6_70_00_14">
 --------------------------------------------------------------------------
 <summary>
 <para>Database update 6.70.0.14:</para>
 <para>
 Added new effort attraction model.
 </para>
 </summary>
 --------------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_14.UpdateVersion">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateVersion"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cDBUpdate6_70_00_14.UpdateDescription">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cDBUpdate.UpdateDescription"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cDBUpdate6_70_00_14.ApplyUpdate(EwEUtils.Database.cEwEDatabase@)">
 -----------------------------------------------------------------------
 <summary>
 Go for it.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.DataSources.cDataSourceFactory">
 =======================================================================
 <summary>
 Factory for creating data sources
 </summary>
 =======================================================================
</member>
<member name="M:EwECore.DataSources.cDataSourceFactory.GetSupportedType(System.String)">
 -------------------------------------------------------------------
 <summary>
 Returns an EwE <see cref="T:EwEUtils.Core.eDataSourceTypes">datasource type</see> that
 will be able to interact with the provided file name.
 </summary>
 <param name="strFile">Name of the file.</param>
 <returns>A <see cref="T:EwEUtils.Core.eDataSourceTypes">datasource type</see>
 indicating what type of EwE datasource will be able to interact with
 the provided file name.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDataSourceFactory.GetDefaultExtension(EwEUtils.Core.eDataSourceTypes)">
 -------------------------------------------------------------------
 <summary>
 Returns the default extension for a given <see cref="T:EwEUtils.Core.eDataSourceTypes">datasource type</see>.
 </summary>
 <param name="dst">The <see cref="T:EwEUtils.Core.eDataSourceTypes">datasource type</see> to query.</param>
 <returns>A string providing a file extension, or an empty string if
 the given datasource type is not supported.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDataSourceFactory.GetCompatibility(System.String,EwEUtils.Core.eDatasourceAccessType@)">
 -------------------------------------------------------------------
 <summary>
 Returns the compatibility of a given database with the current code.
 </summary>
 <param name="strDatabase"></param>
 <param name="access">Flag that must state whether the database can be accessed.</param>
 <returns></returns>
 <remarks></remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDataSourceFactory.Create(EwEUtils.Database.cEwEDatabase@,EwECore.DataSources.IEwEDataSource@)">
 -------------------------------------------------------------------
 <summary>
 Create a data source onto an existing <see cref="T:EwEUtils.Database.cEwEDatabase">EwE database</see>.
 </summary>
 <param name="db"><see cref="T:EwEUtils.Database.cEwEDatabase">cEwEDatabase</see> to create a datasource for.</param>
 <param name="ds">The newly created datasource.</param>
 <returns>A <see cref="T:EwEUtils.Core.eStatusFlags">Status flag</see> that indicates the valid</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDataSourceFactory.Create(EwEUtils.Core.eDataSourceTypes)">
 -------------------------------------------------------------------
 <summary>
 Create a data source for a given <see cref="T:EwEUtils.Core.eDataSourceTypes">type of EwE datasource</see>.
 </summary>
 <param name="dst"><see cref="T:EwEUtils.Core.eDataSourceTypes">Type of EwE datasource</see> to create.</param>
 <returns>A <see cref="T:EwECore.DataSources.IEwEDataSource">IEwEDataSource</see> or 
 Nothing if creation failed</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDataSourceFactory.Create(System.String)">
 -------------------------------------------------------------------
 <summary>
 Create a data source for a given file name.
 </summary>
 <param name="strFileName">The file to create the data source for.</param>
 <returns>A <see cref="T:EwECore.DataSources.IEwEDataSource">IEwEDataSource</see> or 
 Nothing if creation failed</returns>
 <remarks>The factory will attempt to decipher from the file name
 which <see cref="T:EwEUtils.Core.eDataSourceTypes">type of EwE datasource</see>
 is requred.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDataSourceFactory.IsOSSupported(EwEUtils.Core.eDataSourceTypes)">
 -------------------------------------------------------------------
 <summary>
 States whether the operating system supports a given type of EwE 
 <see cref="T:EwEUtils.Core.eDataSourceTypes">data source</see>.
 </summary>
 <param name="dst">The type of EwE <see cref="T:EwEUtils.Core.eDataSourceTypes">data source</see>
 to test.</param>
 <returns>True if the system appears to support the given type of
 data source. The check is implemented by the actual data sources. 
 Implementations can range from simple file checks to online driver 
 validations.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.DataSources.IEcopathDataSource">
 =======================================================================
 <summary>
 Base interface for implementing a datasource that reads and writes 
 Ecospace data.
 </summary>
 =======================================================================
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.CopyTo(EwECore.DataSources.IEcopathDataSource)">
 -------------------------------------------------------------------
 <summary>
 Copies all current Ecopath data to a target datasource.
 </summary>
 <param name="ds">The datasource to copy data to.</param>
 <returns>True if sucessful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.IsEcopathModified">
 -------------------------------------------------------------------
 <summary>
 States if the datasource has unsaved changes for Ecopath.
 </summary>
 <returns>True if the datasource has pending changes for Ecopath.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.LoadModel">
 -------------------------------------------------------------------
 <summary>
 Initiates a full load of an EwE model.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.SaveModel">
 -------------------------------------------------------------------
 <summary>
 Initiates a save of an EwE model
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.AddGroup(System.String,System.Single,System.Single,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Create a record for a new Ecopath group in the datasource.
 </summary>
 <param name="strGroupName">The name of the group to create.</param>
 <param name="sPP">The type of the new group; 0=consumer, 1=producer, 2=detritus, or a cons/prod ratio.</param>
 <param name="sVBK">vbK value to initialize the group with.</param>
 <param name="iPosition">The position of the new group in the group sequence.</param>
 <param name="iDBID">Database ID assigned to the new Group.</param>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will not adjust the data arrays. Due to the complex organization of the
 core a full data reload is required after a group is created.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.RemoveGroup(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Remove a group from the datasource.
 </summary>
 <param name="iDBID">Database ID of the group to remove.</param>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will not adjust the data arrays. Due to the complex organization of the
 core a full data reload is required after a group is removed.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.MoveGroup(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecopath group to a different position in the group sequence.
 </summary>
 <param name="iDBID">Database ID of the group to move.</param>
 <param name="iPosition">The new position of the group in the group sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.AddFleet(System.String,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a fleet to the datasource.
 </summary>
 <param name="strFleetName">Name of the new fleet.</param>
 <param name="iPosition">Position of the new fleet in the fleet sequence.</param>
 <param name="iDBID">Database ID assigned to the new fleet.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.RemoveFleet(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a fleet from the data source.
 </summary>
 <param name="iDBID">Database ID of the fleet to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.MoveFleet(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecopath fleet to a different position in the fleet sequence.
 </summary>
 <param name="iDBID">Database ID of the fleet to move.</param>
 <param name="iPosition">The new position of the fleet in the fleet sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.AppendStanza(System.String,System.Int32[],System.Int32[],System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a stanza group to the datasource.
 </summary>
 <param name="strStanzaName">Name to assign to new stanza group.</param>
 <param name="aiGroupID">Array of DBIDs of <see cref="T:EwECore.cEcoPathGroupInput">Ecopath group</see>
 to assign to this mutli-stanza configuration.</param>
 <param name="iGroupAges">Array of start ages to assign to these groups.</param>
 <param name="iDBID">Database ID assigned to the new stanza group.</param>
 <returns>True if successful.</returns>
 <remarks>The EwE core cannot handle a situation where a stanza configuration
 is defined without having any groups. To avoid this situation, this method
 requires valid <paramref name="aiGroupID">group IDs</paramref>.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.RemoveStanza(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a stanza group from the datasource.
 </summary>
 <param name="iDBID">Database ID of the stanza group to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.AddStanzaLifestage(System.Int32,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Adds a life stage to an existing stanza configuration.
 </summary>
 <param name="iStanzaDBID">Database ID of the stanza group to add the life stage to.</param>
 <param name="iGroupDBID">Group to add as a life stage.</param>
 <param name="iStartAge">Start age of this life stage.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.RemoveStanzaLifestage(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a life stage from an existing stanza configuration.
 </summary>
 <param name="iStanzaDBID">Database ID of the stanza group to remove the life stage from.</param>
 <param name="iGroupDBID">Group to remove as the life stage.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.AddPedigreeLevel(System.Int32,System.String,System.Int32,System.String,EwEUtils.Core.eVarNameFlags,System.Single,System.Single,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a pedigree level to the datasource.
 </summary>
 <param name="iPosition">The position of the new pedigree level in
 the level sequence.</param>
 <param name="strName">Name to assign to new pedigree level.</param>
 <param name="strDescription">Description to assign to new pedigree level.</param>
 <param name="varName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable name</see> 
 this pedigree level pertains to</param>
 <param name="sIndexValue">Value [0, 1] indicating...</param>
 <param name="sConfidence">Confidence interval for this pedigree level.</param>
 <param name="iColor">Color (as integer) to use for the new pedigree level.</param>
 <param name="iDBID">Database ID assigned to the new pedigree level.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.RemovePedigreeLevel(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a pedigree level from the datasource.
 </summary>
 <param name="iDBID">Database ID of the pedigree level to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.MovePedigreeLevel(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move a pedigree level to a different position in the level sequence.
 </summary>
 <param name="iDBID">Database ID of the pedigree level to move.</param>
 <param name="iPosition">The new position of the pedigree level in the 
 level sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.AddTaxon(System.Int32,System.Boolean,EwEUtils.Core.ITaxonSearchData,System.Single,System.Single,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a taxonomy definition to the datasource.
 </summary>
 <param name="iTargetDBID">DBIDs of the target to assign this taxon to.</param>
 <param name="bIsStanza">Flag stating whether the <paramref name="iTargetDBID"/>
 is a stanza (true) or a group (false).</param>
 <param name="data">Data to populate taxonomy definition with. This data can be NULL.</param>
 <param name="sPropB">Proportion this taxon contributes to the group biomass.</param>
 <param name="sPropC">Proportion this taxon contributes to the group catch.</param>
 <param name="iDBID">Database ID assigned to the new taxon.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcopathDataSource.RemoveTaxon(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a taxonomy definition from the datasource.
 </summary>
 <param name="iTaxonID">Database ID of the taxon to remove.</param>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.DataSources.IEcopathSampleDataSource">
 =======================================================================
 <summary>
 Base interface for implementing a datasource that reads and writes 
 alternate input sets to an existing Ecopath model.
 </summary>
 =======================================================================
</member>
<member name="M:EwECore.DataSources.IEcopathSampleDataSource.CopyTo(EwECore.DataSources.IEcopathSampleDataSource)">
 -------------------------------------------------------------------
 <summary>
 Copies all current Ecopath data to a target datasource.
 </summary>
 <param name="ds">The datasource to copy data to.</param>
 <returns>True if sucessful.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.DataSources.IEcosimDatasource">
 =======================================================================
 <summary>
 Base interface for implementing a datasource that reads and writes 
 Ecosim data.
 </summary>
 =======================================================================
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.CopyTo(EwECore.DataSources.IEcosimDatasource)">
 -------------------------------------------------------------------
 <summary>
 Copies all current Ecosim data to a target datasource.
 </summary>
 <param name="ds">The datasource to copy data to.</param>
 <returns>True if sucessful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.IsEcosimModified">
 -------------------------------------------------------------------
 <summary>
 States if the datasource has unsaved changes for Ecosim.
 </summary>
 <returns>True if the datasource has pending changes for Ecosim.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.LoadEcosimScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Loads an ecosim scenario from the datasource.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to load.</param>
 <returns>True if successful.</returns>
 <remarks>An implementing class should ensure that this load will cascade to
 load all information pertaining to a scenario.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.SaveEcosimScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Save the current active Ecosim scenario in the datasource under
 a given database ID.
 </summary>
 <param name="iScenarioID">Database ID to save the current scenario to.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.SaveEcosimScenarioAs(System.String,System.String,System.String,System.String,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Save the current active Ecosim scenario in the datasource under
 a given database ID.
 </summary>
 <param name="iScenarioID">Database ID to save the current scenario to.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.AppendEcosimScenario(System.String,System.String,System.String,System.String,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a new and empty ecosim scenario to the datasource.
 </summary>
 <param name="strScenarioName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <param name="strAuthor">Author to assign to the new scenario.</param>
 <param name="strContact">Contact info to assign to the new scenario.</param>
 <param name="iScenarioID">Database ID assigned to the new scenario.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.RemoveEcosimScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes an ecosim scenario from the datasource.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.AppendShape(System.String,EwEUtils.Core.eDataTypes,System.Int32@,System.Single[],System.Int64,System.Single[])">
 -------------------------------------------------------------------
 <summary>
 Appends a forcing shape to the datasource.
 </summary>
 <param name="strShapeName">Name to assign to new shape.</param>
 <param name="shapeDataType"><see cref="T:EwEUtils.Core.eDataTypes">Type of the shape</see> to add.</param>
 <param name="iDBID">Database ID assigned to the new shape.</param>
 <param name="asData">Shape point data.</param>
 <param name="functionType">Primitive function type shape was created from.</param>
 <param name="parms">Parameters for the <paramref name="functiontype"/> </param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.RemoveShape(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Deletes a forcing shape from the datasource.
 </summary>
 <param name="iDBID">Database ID of the shape to remove.</param>
 <returns>True if successful.</returns>
 <remarks>Note that an implementing datasource will have to ensure the
 shape is removed from the correct scenario.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.LoadTimeSeriesDataset(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Load all time series for a given dataset.
 </summary>
 <param name="iDataset">Index of the dataset to load.</param>
 <returns>True if successful</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.AppendTimeSeriesDataset(System.String,System.String,System.String,System.String,System.Int32,System.Int32,EwECore.eTSDataSetInterval,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an time series dataset to the datasource.
 </summary>
 <param name="strDatasetName">Name to assign to new dataset.</param>
 <param name="strDescription">Description to assign to new dataset.</param>
 <param name="strAuthor">Author to assign to the new dataset.</param>
 <param name="strContact">Contact info to assign to the new dataset.</param>
 <param name="iFirstYear">First year of the dataset.</param>
 <param name="iNumPoints">Number of data points in the dataset.</param>
 <param name="interval"><see cref="T:EwECore.eTSDataSetInterval">Interval</see>
 between two points in the dataset.</param>
 <param name="iDatasetID">Database ID assigned to the new dataset.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.RemoveTimeSeriesDataset(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes all time series belonging to a specific dataset from the datasource.
 </summary>
 <param name="iDataset">Index of the dataset to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.ImportTimeSeries(EwECore.cTimeSeriesImport,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Import a complete <see cref="T:EwECore.cTimeSeriesImport">cTimeSeriesImport</see>
 instance into the datasource.
 </summary>
 <param name="ts">The time series data to import.</param>
 <param name="iDataset">Index of the dataset to add time series to.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.AppendTimeSeries(System.String,System.Int32,System.Int32,EwECore.eTimeSeriesType,System.Single,System.Single[],System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a time series to the datasource.
 </summary>
 <param name="strName">Name of the new Time Series to add.</param>
 <param name="timeSeriesType"><see cref="T:EwECore.eTimeSeriesType">Type</see> of the time series.</param>
 <param name="asValues">Initial values to set in the TS.</param>
 <param name="iDBID">Database ID assigned to the new TS.</param>
 <param name="iPool">Target index</param>
 <param name="iPoolSec">Secundary target index, if applicable.</param>
 <param name="sWeight"></param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcosimDatasource.RemoveTimeSeries(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a time series from the datasource.
 </summary>
 <param name="iTimeSeriesID">Database ID of the time series to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.DataSources.IEcospaceDatasource">
 =======================================================================
 <summary>
 Base interface for implementing a datasource that reads and writes 
 Ecospace data.
 </summary>
 =======================================================================
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.CopyTo(EwECore.DataSources.IEcospaceDatasource)">
 -------------------------------------------------------------------
 <summary>
 Copies all current Ecospace data to a target datasource.
 </summary>
 <param name="ds">The datasource to copy data to.</param>
 <returns>True if sucessful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.IsEcospaceModified">
 -------------------------------------------------------------------
 <summary>
 States if the datasource has unsaved changes for Ecospace.
 </summary>
 <returns>True if the datasource has pending changes for Ecospace.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.LoadEcospaceScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Loads an ecospace scenario from the datasource.
 </summary>
 <param name="iDBID">Database ID of the scenario to load.</param>
 <returns>True if successful.</returns>
 <remarks>An implementing class should ensure that this load will cascade to
 load all information pertaining to a scenario.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.SaveEcospaceScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Updates the active ecospace scenario under the given ID in the datasource.
 </summary>
 <param name="iDBID">Database ID of the scenario to update the current
 scenario to. This parameter is optional; if left blank the current scenario
 is saved.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.SaveEcospaceScenarioAs(System.String,System.String,System.String,System.String,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Save the current active Ecospace scenario in the datasource under
 a given database ID.
 </summary>
 <param name="iScenarioID">Database ID to save the current scenario to.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.AppendEcospaceScenario(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecospace scenario to the datasource.
 </summary>
 <param name="strScenarioName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <param name="strAuthor">Author to assign to the new scenario.</param>
 <param name="strContact">Contact info to assign to the new scenario.</param>
 <param name="InRow">Number of rows in new basemap.</param>
 <param name="InCol">Number of columns in new basemap.</param>
 <param name="sOriginLat">Latitude of origin of basemap.</param>
 <param name="sOriginLon">Longitude of origin of basemap.</param>
 <param name="sCellLength">Cell length, in kilometers.</param>
 <param name="iDBID">Database ID assigned to the new scenario.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.RemoveEcospaceScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes an ecospace scenario from the datasource.
 </summary>
 <param name="iDBID">Database ID of the scenario to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.ResizeEcospaceBasemap(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Resizes the basemap for the current Ecospace scenario.
 </summary>
 <param name="InRow">New number of rows to assign to the basemap.</param>
 <param name="InCol">New number of columns to assign to the basemap.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.AddEcospaceHabitat(System.String,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecospace habitat to the data source.
 </summary>
 <param name="strName">Name to assign to new habitat.</param>
 <param name="iIndex">The sequential position of the new habitat.</param>
 <param name="iDBID">Database ID assigned to the new habitat.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.RemoveEcospaceHabitat(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes an ecospace habitat from the data source.
 </summary>
 <param name="iHabitatID">Database ID of the habitat to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.MoveHabitat(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecospace habitat to a different position in the habitat sequence.
 </summary>
 <param name="iHabitatID">Database ID of the habitat to move.</param>
 <param name="iPosition">The new position of the habitat in the habitat sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.MoveEcospaceMPA(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecospace MPA to a different position in the MPA sequence.
 </summary>
 <param name="iMPAID">Database ID of the MPA to move.</param>
 <param name="iPosition">The new position of the MPA in the MPA sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.AddEcospaceMPA(System.String,System.Int32,System.Boolean[],System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecospace MPA to the active scenario in the datasource.
 </summary>
 <param name="strName">Name to assign to new MPA.</param>
 <param name="iIndex">The sequential position of the new MPA.</param>
 <param name="bMPAMonths">Monthly MPA open pattern.</param>
 <param name="iDBID">Database ID assigned to the new MPA.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.RemoveEcospaceMPA(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes an ecospace MPA from the datasource.
 </summary>
 <param name="iDBID">Database ID of the MPA to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.AppendEcospaceImportanceLayer(System.String,System.String,System.Single,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecospace Importance Layer to the active scenario in the
 datasource.
 </summary>
 <param name="strName"></param>
 <param name="strDescription"></param>
 <param name="sWeight"></param>
 <param name="iDBID">Database ID assigned to the new layer.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.RemoveEcospaceImportanceLayer(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecospace Importance Layer from the active scenario in the
 datasource.
 </summary>
 <param name="iDBID">Database ID of the layer to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.AddEcospaceDriverLayer(System.String,System.String,System.String,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecospace driver layer to the datasource.
 </summary>
 <param name="strName">Name to assign to new driver layer.</param>
 <param name="strDescription">Description to assign to new driver layer.</param>
 <param name="strUnits">Units to assign to new driver layer.</param>
 <param name="iDBID">Database ID assigned to the new driver layer.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.RemoveEcospaceDriverLayer(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes an ecospace driver layer from the datasource.
 </summary>
 <param name="iDBID">Database ID of the driver layer to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcospaceDatasource.MoveEcospaceDriverLayer(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an ecospace driver layer to a different position in the sequence.
 </summary>
 <param name="iDBID">Database ID of the layer to move.</param>
 <param name="iPosition">The new position of the layer in the layer sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.DataSources.IEcotracerDatasource">
 =======================================================================
 <summary>
 Base interface for implementing a datasource that reads and writes 
 contaminant tracing data.
 </summary>
 =======================================================================
</member>
<member name="M:EwECore.DataSources.IEcotracerDatasource.IsEcotracerModified">
 -------------------------------------------------------------------
 <summary>
 States if the datasource has unsaved changes for Ecotracer.
 </summary>
 <returns>True if the datasource has pending changes for Ecotracer.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcotracerDatasource.LoadEcotracerScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Loads an Ecotracer scenario from the datasource.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to load.</param>
 <returns>True if successful.</returns>
 <remarks>An implementing class should ensure that this load will cascade to
 load all information pertaining to a scenario.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcotracerDatasource.SaveEcotracerScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Save the current active Ecotracer scenario in the datasource under
 a given database ID.
 </summary>
 <param name="iScenarioID">Database ID to save the current scenario to.
 If this parameter is left blank, the current scenario is saved
 under its own database ID.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcotracerDatasource.AppendEcotracerScenario(System.String,System.String,System.String,System.String,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an Ecotracer scenario to the datasource.
 </summary>
 <param name="strScenarioName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <param name="strAuthor">Author to assign to the new scenario.</param>
 <param name="strContact">Contact info to assign to the new scenario.</param>
 <param name="iScenarioID">Database ID assigned to the new scenario.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEcotracerDatasource.RemoveEcotracerScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes an Ecotracer scenario from the datasource.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.DataSources.IEwEDataSource">
 =======================================================================
 <summary>
 Base interface for all EwE data access.
 </summary>
 <remarks>
 <para>All data access must be implemented through this interface.</para>
 <para>New Data Sources can be added by inheriting from this interface.</para>
 </remarks>
 =======================================================================
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.IsModified">
 -------------------------------------------------------------------
 <summary>
 States whether the data source has unsaved changes.
 </summary>
 <returns>True if the data source has pending changes.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.IsReadOnly">
 -------------------------------------------------------------------
 <summary>
 States whether the data source can be edited.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.ClearChanged">
 -------------------------------------------------------------------
 <summary>
 Clears any modified flags (use with care!)
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.Open(System.String,EwECore.cCore,EwEUtils.Core.eDataSourceTypes,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Open an existing data source connection
 </summary>
 <param name="strName">Name of the data source to open. How this parameter
 is interpreted depends on the type of data source that is opened.</param>
 <param name="core"><see cref="T:EwECore.cCore">Core instance</see> that holds the 
 datastructures to read to, and write from.</param>
 <param name="datasourceType">Type of data source to open; specify
 <see cref="F:EwEUtils.Core.eDataSourceTypes.NotSet"/> to automatically determine the
 type of data source.</param>
 <param name="bReadOnly">Flag stating whether a data source should be
 opened as read-only.</param>
 <returns>True if opened successfully.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.Create(System.String,System.String,EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Create the data source connection, possibly overwriting an existing data source
 </summary>
 <param name="strName">Name of the data source to create.</param>
 <param name="strModelName">Name to assign to the model.</param>
 <param name="core"><see cref="T:EwECore.cCore">Core instance</see> that holds the 
 datastructures to read to, and write from.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.IsOpen">
 -------------------------------------------------------------------
 <summary>
 States whether a data source is already open.
 </summary>
 <returns>True if the data source is open.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.Close">
 -------------------------------------------------------------------
 <summary>
 Close the data source connection
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.SetChanged(EwEUtils.Core.eCoreComponentType)">
 -------------------------------------------------------------------
 <summary>
 Flag a core object as changed in the data source. The data source
 will consult this information when performing incremental saves.
 </summary>
 <param name="cc">The <see cref="T:EwEUtils.Core.eCoreComponentType">core component</see>
 that changed.</param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.DataSources.IEwEDataSource.Connection">
 -------------------------------------------------------------------
 <summary>
 Get the connection to the data (file, database, stream, other?) that
 this data source operates on.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.ToString">
 -------------------------------------------------------------------
 <summary>
 Get the name of the connection to the data (file, database, stream, 
 other?) that this data source operates on.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.Directory">
 -------------------------------------------------------------------
 <summary>
 Get the directory associated with a data source.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.FileName">
 -------------------------------------------------------------------
 <summary>
 Get the file name associated with a data source.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.Extension">
 -------------------------------------------------------------------
 <summary>
 Get the file extension associated with a data source.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.Version">
 -------------------------------------------------------------------
 <summary>
 Returns the version of the data source.
 </summary>
 <returns>A version number.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.BeginTransaction">
 -------------------------------------------------------------------
 <summary>
 Start a database transaction.
 </summary>
 <returns>
 True if successful.
 </returns>
 <remarks>
 Transactions cannot be nested.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.EndTransaction(System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 End a database transaction.
 </summary>
 <param name="bCommit">States whether the transaction should be 
 committed (True) or reverted (False).</param>
 <returns>
 True if successful.
 </returns>
 <remarks>
 Transactions cannot be nested.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.Compact(System.String)">
 -------------------------------------------------------------------
 <summary>
 Compact a database.
 </summary>
 <param name="strTarget">The target identifying the a new database
 to compact into. If left blank, the current database is compacted 
 and no new database is generated.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.CanCompact(System.String)">
 -------------------------------------------------------------------
 <summary>
 States whether the data source is able to compact.
 </summary>
 <param name="strTarget">The target identifying the a new database
 to compact into. If left blank, the current database is compacted 
 and no new database is generated.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.IEwEDataSource.IsOSSupported(EwEUtils.Core.eDataSourceTypes)">
 -------------------------------------------------------------------
 <summary>
 States whether the operating system supports a given type of EwE 
 <see cref="T:EwEUtils.Core.eDataSourceTypes">data source</see>.
 </summary>
 <param name="dst">The type of EwE <see cref="T:EwEUtils.Core.eDataSourceTypes">data source</see>
 to test.</param>
 <returns>True if the system appears to support the type of EwE datas source.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.DataSources.IEwEDatasourceMetadata">
 =======================================================================
 <summary>
 Base interface for implementing metadata functionality on to a datasource.
 </summary>
 =======================================================================
</member>
<member name="M:EwECore.DataSources.IEwEDatasourceMetadata.GetDescription(EwEUtils.Core.eDataTypes,System.Int32)">
 <summary>
 Returns a name for a given data type and DBID.
 </summary>
 <param name="dt"><see cref="T:EwEUtils.Core.eDataTypes"/> to obtain a description for.</param>
 <param name="iDBID">Unique ID of this datatype to obtain a description for.</param>
 <returns>A textual description, or an empty string if the request could not be honoured.</returns>
</member>
<member name="T:EwECore.DataSources.cDBDataSource">
 ---------------------------------------------------------------------------
 <summary>
 <see cref="T:EwECore.DataSources.IEwEDataSource">EwE data source</see> implementation for reading
 and writing Ecopath, Ecosim and Ecospace data from a database.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.DataSources.cDBDataSource.s_EcopathComponents">
 <summary>Core components stored with Ecopath.</summary>
</member>
<member name="F:EwECore.DataSources.cDBDataSource.s_EcosimComponents">
 <summary>Core components stored with Ecosim.</summary>
</member>
<member name="F:EwECore.DataSources.cDBDataSource.s_EcospaceComponents">
 <summary>Core components stored with Ecospace.</summary>
</member>
<member name="F:EwECore.DataSources.cDBDataSource.s_EcotracerComponents">
 <summary>Core components stored with Ecotracer.</summary>
</member>
<member name="F:EwECore.DataSources.cDBDataSource.m_db">
 <summary>The <see cref="T:EwEUtils.Database.cEwEDatabase">Database</see> connected to this data source.</summary>
</member>
<member name="F:EwECore.DataSources.cDBDataSource.m_core">
 <summary>The <see cref="T:EwECore.cCore">core</see> connected to this data source.</summary>
</member>
<member name="F:EwECore.DataSources.cDBDataSource.m_strName">
 <summary>Datasource name</summary>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsOSSupported(EwEUtils.Core.eDataSourceTypes)">
 -------------------------------------------------------------------
 <summary>
 States whether the local OS supports connecting to a data source
 of a given type.
 </summary>
 <param name="dst"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.Open(System.String,EwECore.cCore,EwEUtils.Core.eDataSourceTypes,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Open an existing DB.
 </summary>
 <param name="strName">Name of the DB database to open.</param>
 <param name="core"><see cref="T:EwECore.cCore">Core instance</see> that holds the 
 data structures to read to, and write from.</param>
 <param name="datasourceType">Type of database to open; specify
 <see cref="F:EwEUtils.Core.eDataSourceTypes.NotSet"/> to automatically determine the
 type of database.</param>
 <param name="bReadOnly">Flag stating whether a data source should be
 opened as read-only.</param>
 <returns>True if opened successfully.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsOpen">
 -------------------------------------------------------------------
 <summary>
 States whether a data source is already open.
 </summary>
 <returns>True if the data source is open.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.Create(System.String,System.String,EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Create a new DB, overwriting an existing file.
 </summary>
 <param name="strName">Name of the data source to create.</param>
 <param name="strModelName">Name to assign to the model.</param>
 <param name="core"><see cref="T:EwECore.cCore">Core instance</see> that holds the 
 data structures to read to, and write from.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.Close">
 -------------------------------------------------------------------
 <summary>
 Close the DB.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsConnected">
 -------------------------------------------------------------------
 <summary>
 Returns whether the data source is connected.
 </summary>
 <returns>True if connected.</returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.DataSources.cDBDataSource.Connection">
 -------------------------------------------------------------------
 <summary>
 Get the connection to the <see cref="T:EwEUtils.Database.cEwEDatabase">database</see>
 that this data source operates on.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.ToString">
 -------------------------------------------------------------------
 <summary>
 Returns a string representation of the data source.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.Directory">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.DataSources.IEwEDataSource.Directory"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.FileName">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.DataSources.IEwEDataSource.FileName"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.Extension">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.DataSources.IEwEDataSource.Extension"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveAs(System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Switch an open data source to a new database of the same type.
 </summary>
 <param name="strFileName">New FN to copy the DB to</param>
 <returns>True if successful.</returns>
 <remarks>This will open the new database if successful.</remarks>
 -------------------------------------------------------------------
</member>
<member name="F:EwECore.DataSources.cDBDataSource.cDATABASE_NOVERSION">
 <summary>Unknown version.</summary>
</member>
<member name="F:EwECore.DataSources.cDBDataSource.m_sVersion">
 <summary>Database version number.</summary>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.Version">
 -------------------------------------------------------------------
 <summary>
 Returns the version of the data source.
 </summary>
 <returns>A version number, or <see cref="F:EwECore.DataSources.cDBDataSource.cDATABASE_NOVERSION">cDATABASE_NOVERSION</see> 
 if the database is not connected.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.BeginTransaction">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.DataSources.IEwEDataSource.BeginTransaction" />
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.EndTransaction(System.Boolean)">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.DataSources.IEwEDataSource.EndTransaction(System.Boolean)" />
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsReadOnly">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.DataSources.IEwEDataSource.IsReadOnly" />
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.CopyEcopathTo(EwECore.DataSources.IEcopathDataSource)">
 <inheritdoc cref="M:EwECore.DataSources.IEcopathDataSource.CopyTo(EwECore.DataSources.IEcopathDataSource)" />
 <remarks>Method not implemented.</remarks>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.CopyEcosimTo(EwECore.DataSources.IEcosimDatasource)">
 <inheritdoc cref="M:EwECore.DataSources.IEcopathDataSource.CopyTo(EwECore.DataSources.IEcopathDataSource)" />
 <remarks>Method not implemented.</remarks>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.CopyEcospaceTo(EwECore.DataSources.IEcospaceDatasource)">
 <inheritdoc cref="M:EwECore.DataSources.IEcopathDataSource.CopyTo(EwECore.DataSources.IEcopathDataSource)" />
 <remarks>Method not implemented.</remarks>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SplitNumberString(System.String@)">
 -----------------------------------------------------------------------
 <summary>
 <para>Helper method, splits a string of numbers into an array of strings,
 each string representing a number. This method assumes that numbers are
 separated by a ASCII character 32, a single space.</para>
 </summary>
 <param name="strNumberString">A comma-seoarated string of numbers to split.</param>
 <returns>
 An array of strings, each representing a number in the string.
 </returns>
 <remarks>
 <para>This method tries to resolve number formatting issues, introduced
 in models written by systems with different locale settings.</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsChanged">
 -------------------------------------------------------------------
 <summary>
 States whether the data source has unsaved changes that do not relate
 to any of the supported sub-models.
 </summary>
 <returns>True if the data source has pending changes.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.ClearChanged">
 -------------------------------------------------------------------
 <summary>
 Clears all changed information for either a given data type or for 
 the entire data source.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="F:EwECore.DataSources.cDBDataSource.m_dictChangedComponents">
 <summary>Dictionary of changed core components.</summary>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SetChanged(EwEUtils.Core.eCoreComponentType)">
 -------------------------------------------------------------------
 <summary>
 Flag a core object as changed in the data source.
 </summary>
 <param name="cc">The <see cref="T:EwEUtils.Core.eDataTypes">Type</see> of the object that changed.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsChanged(EwEUtils.Core.eCoreComponentType[])">
 -------------------------------------------------------------------
 <summary>
 Helper method; states whether there are pending changes for a particular
 <see cref="T:EwEUtils.Core.eCoreComponentType">EwE component</see>.
 </summary>
 <param name="acomponents">The EwE components to check.</param>
 <returns>True if there are any pending changes for any datatype that
 belongs to this EwE component.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.ClearChanged(EwEUtils.Core.eCoreComponentType[])">
 -------------------------------------------------------------------
 <summary>
 Clears the changed administration for all datatypes that belong to
 a given <see cref="T:EwEUtils.Core.eCoreComponentType">EwE component</see>.
 </summary>
 <param name="acomponents">The EwE components to clear the changed
 adminsitration for.</param>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.DataSources.cDBDataSource.cIDMappings">
 -----------------------------------------------------------------------
 <summary>
 Helper class, maintains a list of database ID mappings per datatype. Use this class
 when duplicating objects in the database. Via the mappings, newly created objects
 (with new DBID values) can be saved using content of their originals (with old
 DBID values)
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.DataSources.cDBDataSource.cIDMappings.m_dictMappings">
 <summary>Array of ID mappings, per datatype.</summary>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.cIDMappings.Initialize">
 -----------------------------------------------------------------------
 <summary>
 Initialize the ID mapper by allocating space for the lookup tables.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.cIDMappings.Add(EwEUtils.Core.eDataTypes,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Add an ID mapping for a specific object.
 </summary>
 <param name="dt">The <see cref="T:EwEUtils.Core.eDataTypes">Data Type</see> of the object to map.</param>
 <param name="iIDOrg">The original database ID of the object. This is the value
 under which the object is stored in the current database, and how it is currently
 known in the core database ID arrays.</param>
 <param name="iIDNew">The mapped database ID of the object. This is the value that
 has been assigned by the data source when creating a new instance of the object
 in the database.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.cIDMappings.GetID(EwEUtils.Core.eDataTypes,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns a mapped ID for a specific core object. If no mapping exists, the
 original ID is returned.
 </summary>
 <param name="dt">The <see cref="T:EwEUtils.Core.eDataTypes">Data Type</see> of the object
 to retrieve the mapping for.</param>
 <param name="iIDOrg">The original database ID of the object.</param>
 <returns>A mapped ID if present, or the original ID if no mapping was found.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.cIDMappings.HasMapping(EwEUtils.Core.eDataTypes,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether a mapping exists for a core object.
 </summary>
 <param name="dt">The <see cref="T:EwEUtils.Core.eDataTypes">Data Type</see> of the object to
 test a mapping for.</param>
 <param name="iIDOrg">The original database ID of the object to test.</param>
 <returns>True if a mapping exists.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LogMessage(System.String,EwEUtils.Core.eMessageType,EwEUtils.Core.eMessageImportance)">
 -------------------------------------------------------------------
 <summary>
 Logs a message to the application log.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.Compact(System.String)">
 -----------------------------------------------------------------------
 <summary>
 Compact the data in the data source. Please ensure that this operation
 is possible via <see cref="M:EwECore.DataSources.cDBDataSource.CanCompact(System.String)">CanCompact</see>.
 </summary>
 <param name="strTarget">The destination to compact the data source to.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.CanCompact(System.String)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the data underlying the data source can be compacted.
 </summary>
 <param name="strTarget">The destination to test whether the data source 
 can compact to.</param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadModel">
 -------------------------------------------------------------------
 <summary>
 Initiates a full load of an EwE model.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveModel">
 -------------------------------------------------------------------
 <summary>
 Initiates a save of an EwE model
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadModelInfo">
 -------------------------------------------------------------------
 <summary>
 Helper method, loads model info for the current model.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveModelInfo">
 -----------------------------------------------------------------------
 <summary>
 Updates model info into the database.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcosimScenarioDefinitions">
 -----------------------------------------------------------------------
 <summary>
 Load the list of available Ecosim scenarios.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will NOT load any actual Ecosim scenario. Scenario definitions 
 merely provide a preview of available Ecosim scenarios in the database.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcosimScenarioDefinitions">
 -----------------------------------------------------------------------
 <summary>
 Saves the list of available Ecosim scenarios.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will NOT save any actual Ecosim scenario. Here, only the
 Ecosim scenario preview information is updated.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcospaceScenarioDefinitions">
 -----------------------------------------------------------------------
 <summary>
 Load the list of available Ecospace scenarios.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will NOT load any actual Ecospace scenario. Scenario definitions 
 merely provide a preview of available Ecospace scenarios in the database.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcospaceScenarioDefinitions">
 -----------------------------------------------------------------------
 <summary>
 Saves the list of available Ecospace scenarios.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will NOT save any actual Ecospace scenario. Here, only the
 Ecospace scenario preview information is updated.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcotracerScenarioDefinitions">
 -----------------------------------------------------------------------
 <summary>
 Load the list of available Ecotracer scenarios.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will NOT load any actual Ecotracer scenario. Scenario definitions 
 merely provide a preview of available Ecotracer scenarios in the database.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcotracerScenarioDefinitions">
 -----------------------------------------------------------------------
 <summary>
 Saves the list of available Ecotracer scenarios.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will NOT save any actual Ecotracer scenario. Here, only the
 Ecotracer scenario preview information is updated.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadPedigreeLevels">
 -----------------------------------------------------------------------
 <summary>
 Load the pedigree level definitions.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadPedigreeAssignments">
 -----------------------------------------------------------------------
 <summary>
 Load the pedigree level assignments.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SavePedigreeLevels">
 -----------------------------------------------------------------------
 <summary>
 Save pedigree level definitions.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddPedigreeLevel(System.Int32,System.String,System.Int32,System.String,EwEUtils.Core.eVarNameFlags,System.Single,System.Single,System.Int32@)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.DataSources.IEcopathDataSource.AddPedigreeLevel(System.Int32,System.String,System.Int32,System.String,EwEUtils.Core.eVarNameFlags,System.Single,System.Single,System.Int32@)"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.MovePedigreeLevel(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move a pedigree level to a different position in the level sequence.
 </summary>
 <param name="iPedigreeLevelID">Database ID of the pedigree level to move.</param>
 <param name="iPosition">The new position of the pedigree level in the 
 level sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemovePedigreeLevel(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Remove a pedigree level from the data source.
 </summary>
 <param name="iPedigreeLevelID">Database ID of the pedigree level to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadParticleSizeDistribution">
 -------------------------------------------------------------------
 <summary>
 Load Particle Size Distribution data for Ecopath.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveParticleSizeDistribution">
 -------------------------------------------------------------------
 <summary>
 Save Particle Size Distribution data for Ecopath.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadStanza">
 -----------------------------------------------------------------------
 <summary>
 Load all model-generic stanza information.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveStanza">
 -------------------------------------------------------------------
 <summary>
 Updates a stanza group in the DB.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendStanza(System.String,System.Int32[],System.Int32[],System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a stanza group to the DB.
 </summary>
 <param name="strStanzaName">Name to assign to new stanza group.</param>
 <param name="aiGroupID">Zero-based array of <see cref="T:EwECore.cEcoPathGroupInput">Ecopath group</see>
 IDs to assign to this multi-stanza configuration.</param>
 <param name="iGroupAges">Zero-based array of start ages, corresponding
 to the <paramref name="aiGroupID">group ID list</paramref>.</param>
 <param name="iStanzaID">Database ID assigned to the new stanza group.</param>
 <returns>Always false.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveStanza(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a stanza group from the DB.
 </summary>
 <param name="iStanzaID">Database ID of the stanza group to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddStanzaLifestage(System.Int32,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Adds a life stage to an existing stanza configuration.
 </summary>
 <param name="iStanzaDBID">Database ID of the stanza group to add the life stage to.</param>
 <param name="iGroupDBID">Group to add as a life stage.</param>
 <param name="iStartAge">Start age of this life stage.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveStanzaLifestage(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a life stage from an existing stanza configuration.
 </summary>
 <param name="iStanzaDBID">Database ID of the stanza group to remove the life stage from.</param>
 <param name="iGroupDBID">Group to remove as the life stage.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsEcopathModified">
 -------------------------------------------------------------------
 <summary>
 States if the data source has unsaved changes for Ecopath.
 </summary>
 <returns>True if the data source has pending changes for Ecopath.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcopathGroups">
 -------------------------------------------------------------------
 <summary>
 Loads Ecopath Group information.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcopathGroups">
 -------------------------------------------------------------------
 <summary>
 Update group info in the data source.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddGroup(System.String,System.Single,System.Single,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Create a record for a new Ecopath group in the data source.
 </summary>
 <param name="strGroupName">The name of the group to create.</param>
 <param name="sPP">The type of the new group; 0=consumer, 1=producer, 2=detritus, or a cons/prod ratio.</param>
 <param name="sVBK">The vbK value to pass to the group.</param>
 <param name="iPosition">The position of the new group in the group sequence.</param>
 <param name="iGroupID">Database ID assigned to the new Group.</param>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will not adjust the data arrays. Due to the complex organization of the
 core a full data reload is required after a group is created.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveGroup(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Remove a group from the data source.
 </summary>
 <param name="iEcopathGroupID">DBID of the Ecopath group to remove.</param>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will not adjust the data arrays. Due to the complex organization of the
 core a full data reload is required after a group is removed.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.MoveGroup(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecopath group to a different position in the group sequence.
 </summary>
 <param name="iGroupID">Database ID of the group to move.</param>
 <param name="iPosition">The new position of the group in the group sequence.</param>
 <returns>True if successful.</returns>
 <remarks>
 This method will directly modify the entry in the database
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcopathDietComp">
 -------------------------------------------------------------------
 <summary>
 Loads ecopath diet composition information.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcopathDietComp">
 -------------------------------------------------------------------
 <summary>
 Writes the DietComp information to the database.
 </summary>
 <returns>True if successful</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsFishing">
 -------------------------------------------------------------------
 <summary>
 States if there is catch for at least one group.
 </summary>
 <returns>True if catch was found.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcopathFleetInfo">
 -------------------------------------------------------------------
 <summary>
 Loads all fleet-related data.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 If there is <see cref="M:EwECore.DataSources.cDBDataSource.IsFishing">no fishing</see>, the fleet data will not be loaded.
 This check is inherited from EwE5.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcopathFleets">
 -------------------------------------------------------------------
 <summary>
 Loads all Ecopath fleets.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcopathFleetInfo">
 -------------------------------------------------------------------
 <summary>
 Saves all fleet-related data to the data source.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcopathFleets">
 -------------------------------------------------------------------
 <summary>
 Saves all fleets.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddFleet(System.String,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a fleet to the data source.
 </summary>
 <param name="strFleetName">Name of the new fleet.</param>
 <param name="iFleetID">Database ID assigned to the new fleet.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveFleet(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a fleet from the data source.
 </summary>
 <param name="iFleetID">Ecopath ID of the fleet to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.MoveFleet(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecopath fleet to a different position in the fleet sequence.
 </summary>
 <param name="iFleetID">Database ID of the fleet to move.</param>
 <param name="iPosition">The new position of the fleet in the fleet sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadTimeSeriesDatasets">
 -------------------------------------------------------------------
 <summary>
 Load all time series dataset definitions for Ecopath.
 </summary>
 <returns>True if successful.</returns>
 <remarks>Yeah, this is odd; time series can only be used with Ecosim
 but this logic just reads which time series will be available for Ecosim
 later on; it is convenient to know which data sets are provided with
 the model, just as it is convenient to know which scenarios are
 before they are loaded ;)</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendTimeSeriesDataset(System.String,System.String,System.String,System.String,System.Int32,System.Int32,EwECore.eTSDataSetInterval,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an time series dataset to the data source.
 </summary>
 <param name="strDatasetName">Name to assign to new dataset.</param>
 <param name="strDescription">Description to assign to new dataset.</param>
 <param name="strAuthor">Author to assign to the new dataset.</param>
 <param name="strContact">Contact info to assign to the new dataset.</param>
 <param name="iFirstYear">First year of the dataset.</param>
 <param name="iNumPoints">Number of data points in the dataset.</param>
 <param name="interval"><see cref="T:EwECore.eTSDataSetInterval">Interval</see> between
 to points in the dataset.</param>
 <param name="iDatasetID">Database ID assigned to the new dataset.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveTimeSeriesDataset(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes all time series belonging to a specific dataset from the data source.
 </summary>
 <param name="iDataset">Index of the dataset to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveTimeSeriesDatasetID(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes all time series belonging to a specific dataset from the data source.
 </summary>
 <param name="iDatasetID">Database ID of the dataset to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcopathTaxon">
 -------------------------------------------------------------------
 <summary>
 Loads Ecopath taxonomy information.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcopathTaxon">
 -------------------------------------------------------------------
 <summary>
 Update group info in the data source.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddTaxon(System.Int32,System.Boolean,EwEUtils.Core.ITaxonSearchData,System.Single,System.Single,System.Int32@)">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.DataSources.IEcopathDataSource.AddTaxon(System.Int32,System.Boolean,EwEUtils.Core.ITaxonSearchData,System.Single,System.Single,System.Int32@)" />
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveTaxon(System.Int32)">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.DataSources.IEcopathDataSource.RemoveTaxon(System.Int32)" />
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsEcosimModified">
 -------------------------------------------------------------------
 <summary>
 States if the data source has unsaved changes for Ecosim.
 </summary>
 <returns>True if the data source has pending changes for Ecosim.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcosimScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Loads an Ecosim scenario from the DB.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to load.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcosimScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Save the current active Ecosim scenario in the data source under
 a given database ID.
 </summary>
 <param name="iScenarioID">Database ID to save the current scenario to.
 If this parameter is left blank, the current scenario is saved
 under its own database ID.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendEcosimScenario(System.String,System.String,System.String,System.String,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a scenario to the DB.
 </summary>
 <param name="strScenarioName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <param name="strAuthor">Author to assign to the new scenario.</param>
 <param name="strContact">Contact info to assign to the new scenario.</param>
 <param name="iScenarioID">Database ID assigned to the new scenario.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveEcosimScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a scenario from the DB.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcosimGroupToAllScenarios(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Create or fixes a group in each ecosim scenario
 </summary>
 <param name="iEcopathGroupID">Ecopath Group DBID</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.CreateRepairEcosimGroup(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Create or repair an ecosim group in a given scenario.
 </summary>
 <param name="iEcopathGroupID">Ecopath Group DBID.</param>
 <param name="iScenarioID">Scenario ID to add the group to.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcosimFleetToAllScenarios(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Create or fixes a fleet in each ecosim scenario
 </summary>
 <param name="iEcopathFleetID">Ecopath fleet DBID</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.CreateRepairEcosimFleet(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Create or repair an ecosim group in a given scenario.
 </summary>
 <param name="iEcopathFleetID">Ecopath Group DBID.</param>
 <param name="iScenarioID">Scenario ID to add the group to.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveEcosimFleet(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 <para>
 *Sigh*
 </para>
 <para>
 Due to the limited capabilities of Microzork Access SQL, database 
 update-generated foreign keys to fleets and groups cannot cacading 
 delete. Hence, we need to eradicate linked groups and fleets via code.
 </para> 
 </summary>
 <param name="iEcopathFleetID"></param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveEcosimGroup(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Due to the limited capabilities of Microzork Access SQL, database 
 update-generated foreign keys to fleets and groups cannot cascading 
 delete. Hence, we need to eradicate linked groups and fleets via code.
 </summary>
 <param name="iGroupID">DBID of the Ecosim group to remove.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadMediationWeights">
 -----------------------------------------------------------------------
 <summary>
 Load the mediation weights for the active scenario.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendShape(System.String,EwEUtils.Core.eDataTypes,System.Int32@,System.Single[],System.Int64,System.Single[])">
 -------------------------------------------------------------------
 <summary>
 Appends a forcing shape to the data source.
 </summary>
 <param name="strShapeName">Name to assign to new shape.</param>
 <param name="shapeType"><see cref="T:EwEUtils.Core.eDataTypes">Type of the shape</see> to add.</param>
 <param name="iShapeID">Database ID assigned to the new shape.</param>
 <param name="asData">Shape point data.</param>
 <param name="functionType">Primitive function type shape was created from.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendShapeImpl(System.String,EwEUtils.Core.eDataTypes,System.Int32@,System.Single[],System.Int64,System.Single[])">
 -------------------------------------------------------------------
 <summary>
 Append a shape to the database, internal implementation.
 </summary>
 <param name="strShapeName"></param>
 <param name="shapeType"></param>
 <param name="iShapeID"></param>
 <param name="points"></param>
 <param name="functionType"></param>
 <param name="params"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveShape(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Deletes a forcing shape from the DB.
 </summary>
 <param name="iShapeID">Database ID of the shape to remove.</param>
 <returns>True if successful.</returns>
 <remarks>The number of shapes has changed in the database so all the
 shape data is reloaded in memory.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.ImportTimeSeries(EwECore.cTimeSeriesImport,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Import a <see cref="T:EwECore.cTimeSeriesImport">cTimeSeriesImport</see> instance into the data source.
 </summary>
 <param name="ts">The time series data to import.</param>
 <param name="iDataset">Index of the dataset to add the time series to.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddAsForcingFunction(EwECore.cTimeSeriesImport)">
 -------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="ts"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddAsTimeSeries(EwECore.cTimeSeriesImport,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="ts"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddGroupTimeSeries(EwECore.cTimeSeriesImport,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="ts"></param>
 <param name="iTimeSeriesID"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddFleetTimeSeries(EwECore.cTimeSeriesImport,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="ts"></param>
 <param name="iTimeSeriesID"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadTimeSeriesDataset(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Load all time series for a given dataset.
 </summary>
 <param name="iDataset">Index of dataset to load.</param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendTimeSeries(System.String,System.Int32,System.Int32,EwECore.eTimeSeriesType,System.Single,System.Single[],System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a time series to the data source.
 </summary>
 <param name="strName">Name of the new Time Series to add.</param>
 <param name="timeSeriesType"><see cref="T:EwECore.eTimeSeriesType">Type</see> of the time series.</param>
 <param name="iPool">Group/fleet code to assign to TS.</param>
 <param name="sWeight">Relative weight of TS.</param>
 <param name="asValues">Initial values to set in the TS.</param>
 <param name="iShapeID">Database ID assigned to the new TS.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveTimeSeries(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a time series from the data source.
 </summary>
 <param name="iTimeSeriesID">Database ID of the time series to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsEcospaceModified">
 -------------------------------------------------------------------
 <summary>
 States if the data source has unsaved changes for Ecospace.
 </summary>
 <returns>True if the data source has pending changes for Ecospace.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcospaceScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Updates the active ecospace scenario under the given ID in the data source.
 This method is the one external interface to save an Ecospace scenario
 and everything under it.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to update. This
 parameter is optional; if left to zero the active scenario will be saved.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcospaceScenario(EwECore.DataSources.cDBDataSource.cIDMappings)">
 -------------------------------------------------------------------
 <summary>
 Internal method; updates the active ecospace scenario in the data source,
 optionally saving to a different scenario.
 </summary>
 <param name="idm"><see cref="T:EwECore.DataSources.cDBDataSource.cIDMappings">ID mapping</see> providing
 ID mappings when saving to a different scenario ID.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendEcospaceScenario(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecospace scenario to the data source.
 </summary>
 <param name="strScenarioName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <param name="strAuthor">Author to assign to the new scenario.</param>
 <param name="strContact">Contact info to assign to the new scenario.</param>
 <param name="iScenarioID">Database ID assigned to the new scenario.</param>
 <param name="sCellLength">Length of cells, in km.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.ResizeEcospaceBasemap(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Resizes the basemap in an Ecospace scenario.
 </summary>
 <param name="InRow">New number of rows to assign to the basemap.</param>
 <param name="InCol">New number of columns to assign to the basemap.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcospaceMap(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Load the spatial data associated with an Ecospace scenario.
 </summary>
 <param name="iScenarioID">The scenario to load the data for.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcospaceMonthlyMaps(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Load the spatial data associated with an Ecospace scenario.
 </summary>
 <param name="iScenarioID">The scenario to load the data for.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcospaceMap(EwECore.DataSources.cDBDataSource.cIDMappings)">
 -----------------------------------------------------------------------
 <summary>
 Save the spatial data associated with an Ecospace scenario.
 </summary>
 <param name="idm">The scenario to save the data for.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcospaceMonthlyMaps(EwECore.DataSources.cDBDataSource.cIDMappings)">
 -----------------------------------------------------------------------
 <summary>
 Save the spatial data associated with an Ecospace scenario.
 </summary>
 <param name="idm">The scenario to save the data for.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcospaceHabitat(System.String,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Append an habitat to the current ecospace scenario
 </summary>
 <param name="strName"></param>
 <param name="iDBID"></param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcospaceHabitat(System.String,System.Int32,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Append an habitat to a given ecospace scenario
 </summary>
 <param name="strName"></param>
 <param name="iDBID"></param>
 <param name="iScenarioID">Ecospace scenario ID to add the habitat to.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveHabitat(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Remove an ecospace habitat from the current scenario
 </summary>
 <param name="iHabitatID"></param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.MoveEcospaceHabitat(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecospace habitat to a different position in the habitat sequence.
 </summary>
 <param name="iHabitatID">Database ID of the habitat to move.</param>
 <param name="iPosition">The new position of the habitat in the habitat sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcospaceGroupToAllScenarios(System.Int32,System.Boolean)">
 <summary>
 Create a group for each ecospace scenario
 </summary>
 <param name="iEcopathGroupID">Ecopath Group DBID</param>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcospaceGroup(System.Int32,System.Int32,System.Boolean,System.Int32@)">
 <summary>
 Add a group to a given Ecospace scenario.
 </summary>
 <param name="iEcopathGroupID"><see cref="P:EwECore.cCoreInputOutputBase.DBID">Ecopath ID</see> of this group</param>
 <param name="iScenarioID"><see cref="P:EwECore.cCoreInputOutputBase.DBID">Ecospace scenario ID</see> of the scenario to add the group to.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveEcospaceGroup(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 <para>
 Due to the limited capabilities of Microzork Access SQL, database 
 update-generated foreign keys to fleets and groups cannot cacading 
 delete. Hence, we need to eradicate linked groups and fleets via code.
 </para> 
 </summary>
 <param name="iEcospaceGroupID">DBID of the Ecospace group to remove.</param>
 <param name="iEcopathGroupID">DBID of the Ecopath group.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcospaceFleetToAllScenarios(System.Int32)">
 <summary>
 Create a fleet for each ecospace scenario
 </summary>
 <param name="iEcopathFleetID">Ecopath Fleet DBID</param>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcospaceFleet(System.Int32,System.Int32,System.Int32@)">
 <summary>
 Add an ecospace fleet to a given ecospace scenario.
 </summary>
 <param name="iEcopathFleetID">Ecopath Fleet DBID.</param>
 <param name="iScenarioID">Scenario ID to add the fleet to.</param>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveEcospaceFleet(System.Int32)">
 <summary>
 Remove an ecospace fleet.
 </summary>
 <param name="iEcopathFleetID">Ecopath Fleet DBID.</param>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendEcospaceMPA(System.String,System.Int32,System.Boolean[],System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add a MPA to the active Ecospace scenario
 </summary>
 <param name="strName"></param>
 <param name="iDBID"></param>
 <param name="bMPAMonths">One-based series of flags that indicate when the 
 MPA is OPEN for fishing.</param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcospaceMPA(System.String,System.Int32,System.Int32,System.Boolean[],System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add a MPA to a given scenario.
 </summary>
 <param name="strName"></param>
 <param name="iScenarioID"></param>
 <param name="bMPAMonths">One-based series of flags that indicate when the 
 MPA is OPEN for fishing.</param>
 <param name="iDBID"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveEcospaceMPA(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Remove a MPA from the active Ecospace scenario.
 </summary>
 <param name="iMPAID">Database ID of the MPA to remove.</param>
 <returns>True if you have been good last year.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.MoveEcospaceMPA(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecospace MPA to a different position in the MPA sequence.
 </summary>
 <param name="iMPAID">Database ID of the MPA to move.</param>
 <param name="iPosition">The new position of the MPA in the MPA sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendEcospaceImportanceLayer(System.String,System.String,System.Single,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecospace Importance Layer to the active scenario in the
 data source.
 </summary>
 <param name="strName"></param>
 <param name="strDescription"></param>
 <param name="sWeight"></param>
 <param name="iLayerID">Database ID assigned to the new layer.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcospaceImportanceLayer(System.String,System.Int32,System.String,System.Single,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Add a ImportanceLayer to a given scenario.
 </summary>
 <param name="strName"></param>
 <param name="strDescription"></param>
 <param name="sWeight"></param>
 <param name="iLayerID"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveEcospaceImportanceLayer(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecospace Importance Layer from the active scenario in the
 data source.
 </summary>
 <param name="iLayerID">Database ID of the layer to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.EcospaceScenarioLayerConnectionDisabled(System.Int32)">
 <summary>
 Loads the layers for which external data has been disabled.
 </summary>
 <param name="iScenarioID">The scenario identifier.</param>
 <returns></returns>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcospaceDriverLayer(System.String,System.String,System.String,System.Int32@)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.DataSources.IEcospaceDatasource.AddEcospaceDriverLayer(System.String,System.String,System.String,System.Int32@)" />"
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.DataSources.cDBDataSource.getLayerIDs(EwEUtils.Core.eVarNameFlags)">
 -------------------------------------------------------------------
 <summary>
 Obtain a layer DBID for any varname and index.
 </summary>
 <param name="varname"></param>
 <remarks>
 This method is robust to any type of abuse; non-registered <paramref name="varname">variables</paramref>
 are dealt with properly.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.IsEcotracerModified">
 -------------------------------------------------------------------
 <summary>
 States if the data source has unsaved changes for Ecotracer.
 </summary>
 <returns>True if the data source has pending changes for Ecotracer.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcotracerScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Loads an Ecotracer scenario from the data source.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to load.</param>
 <returns>True if successful.</returns>
 <remarks>An implementing class should ensure that this load will cascade to
 load all information pertaining to a scenario.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.LoadEcotracerGroups(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Load Ecotracer groups from the data source.
 </summary>
 <param name="iScenarioID">The Ecotracer scenario to load groups for.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.SaveEcotracerScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Save the current active Ecotracer scenario in the data source under
 a given database ID.
 </summary>
 <param name="iScenarioID">Database ID to save the current scenario to.
 If this parameter is left blank, the current scenario is saved
 under its own database ID.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AppendEcotracerScenario(System.String,System.String,System.String,System.String,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an Ecotracer scenario to the data source.
 </summary>
 <param name="strScenarioName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <param name="strAuthor">Author to assign to the new scenario.</param>
 <param name="strContact">Contact info to assign to the new scenario.</param>
 <param name="iScenarioID">Database ID assigned to the new scenario.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.RemoveEcotracerScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes an Ecotracer scenario from the data source.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcotracerGroupToAllScenarios(System.Int32)">
 <summary>
 Create a group for each Ecotracer scenario
 </summary>
 <param name="iEcopathGroupID">Ecopath Group DBID</param>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.AddEcotracerGroup(System.Int32,System.Int32)">
 <summary>
 Add a group to a given Ecotracer scenario.
 </summary>
 <param name="iEcopathGroupID"><see cref="P:EwECore.cCoreInputOutputBase.DBID">Ecopath ID</see> of this group</param>
 <param name="iScenarioID"><see cref="P:EwECore.cCoreInputOutputBase.DBID">Ecotracer scenario ID</see> of the scenario to add the group to.</param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.DuplicateAuxillaryData(EwECore.DataSources.cDBDataSource.cIDMappings,EwEUtils.Core.eDataTypes,System.Int32)">
 <summary>
 
 </summary>
 <param name="idm"></param>
 <param name="dt"></param>
 <param name="iDBID">Original database ID to duplicate</param>
 <returns></returns>
</member>
<member name="M:EwECore.DataSources.cDBDataSource.GetDescription(EwEUtils.Core.eDataTypes,System.Int32)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.DataSources.IEwEDatasourceMetadata.GetDescription(EwEUtils.Core.eDataTypes,System.Int32)"/>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.cEIIDataSource">
 ===========================================================================
 <summary>
 Data access for an EwE5 .EII file
 </summary>
 ===========================================================================
</member>
<member name="M:EwECore.cEIIDataSource.Open(System.String,EwECore.cCore,EwEUtils.Core.eDataSourceTypes,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Open an existing data source connection
 </summary>
 <param name="strName">Name of the EII file to open.</param>
 <param name="core"><see cref="T:EwECore.cCore">Core instance</see> that holds the 
 datastructures to read to, and write from.</param>
 <returns>True if opened successfully.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.IsOpen">
 -------------------------------------------------------------------
 <summary>
 States whether a datasource is already open.
 </summary>
 <returns>True if the datasource is open.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.Create(System.String,System.String,EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Create the EII datasource.
 </summary>
 <param name="strName">Name of the EII file to create.</param>
 <param name="strModelName">Name to assign to the model.</param>
 <param name="core"><see cref="T:EwECore.cCore">Core instance</see> that holds the 
 datastructures to read to, and write from.</param>
 <returns>Always false.</returns>
 <remarks>This action is not supported in EwE6.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.Close">
 -------------------------------------------------------------------
 <summary>
 Close the EII datasource.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.SetChanged(EwEUtils.Core.eCoreComponentType)">
 -------------------------------------------------------------------
 <summary>
 Flag a core object as changed in the datasource. Since the EIIDataSource
 does not support saving of data, this method contains no implementation
 </summary>
 <param name="cc">The <see cref="T:EwEUtils.Core.eCoreComponentType">core component</see> that changed.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.ClearChanged">
 -------------------------------------------------------------------
 <summary>
 Clear change flags in the datasource. Since the EIIDataSource does 
 not support saving of data, this method contains no implementation
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cEIIDataSource.Connection">
 -------------------------------------------------------------------
 <summary>
 Get the name of the EII file that this datasource operates on.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.ToString">
 -------------------------------------------------------------------
 <summary>
 Get the name of the EII file that this datasource operates on.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.IsModified">
 -------------------------------------------------------------------
 <summary>
 States whether the datasource has unsaved changes that do not relate
 to any of the supported sub-models.
 </summary>
 <returns>True if the datasource has pending changes.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.LoadModel">
 -------------------------------------------------------------------
 <summary>
 Initiates a full load of an ecopath model.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.SaveModel">
 -------------------------------------------------------------------
 <summary>
 Initiates a save of an EwE model
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.IsEcopathModified">
 -------------------------------------------------------------------
 <summary>
 States if the datasource has unsaved changes for Ecopath.
 </summary>
 <returns>True if the datasource has pending changes for Ecopath.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.AddGroup(System.String,System.Single,System.Single,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Create a record for a new Ecopath group in the datasource.
 </summary>
 <param name="strGroupName">The name of the group to create.</param>
 <param name="sPP">The Type of the new group; 0=consumer, 1=producer, 2=detritus.</param>
 <param name="iPosition">The position of the new group in the group sequence.</param>
 <param name="iDBID">Database ID assigned to the new Group.</param>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will not adjust the data arrays. Due to the complex organization of the
 core a full data reload is required after a group is created.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.RemoveGroup(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Remove a group from the datasource.
 </summary>
 <param name="iDBID">Database ID of the group to remove.</param>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will not adjust the data arrays. Due to the complex organization of the
 core a full data reload is required after a group is removed.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.MoveGroup(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecopath group to a different position in the group sequence.
 </summary>
 <param name="iDBID">Database ID of the group to move.</param>
 <param name="iPosition">The new position of the group in the group sequence.</param>
 <returns>Always false.</returns>
 <remarks>
 For now, this method is not supported since all data arrays need to be adjusted
 and there is no real need to implement this for EII datasources.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.AddFleet(System.String,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a fleet to the datasource.
 </summary>
 <param name="strFleetName">Name of the new fleet.</param>
 <param name="iDBID">Database ID assigned to the new fleet.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.RemoveFleet(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a fleet from the datasource.
 </summary>
 <param name="iDBID">Database ID of the fleet to remove.</param>
 <returns>Always false.</returns>
 <remarks>This action is not supported in EwE6.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.MoveFleet(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecopath fleet to a different position in the fleet sequence.
 </summary>
 <param name="iDBID">Database ID of the fleet to move.</param>
 <param name="iPosition">The new position of the fleet in the fleet sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.AppendStanza(System.String,System.Int32[],System.Int32[],System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a stanza group to the EII.
 </summary>
 <returns>Always false; mutli-stanza logis is not supported in the EII data format.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.RemoveStanza(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a stanza group from the EII.
 </summary>
 <param name="iDBID">Database ID of the stanza group to remove.</param>
 <returns>Always false; mutli-stanza logis is not supported in the EII data format.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.AddStanzaLifestage(System.Int32,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Adds a life stage to an existing stanza configuration.
 </summary>
 <param name="iStanzaDBID">Database ID of the stanza group to add the life stage to.</param>
 <param name="iGroupDBID">Group to add as a life stage.</param>
 <param name="iStartAge">Start age of this life stage.</param>
 <returns>Always false; mutli-stanza logis is not supported in the EII data format.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIDataSource.RemoveStanzaLifestage(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a life stage from an existing stanza configuration.
 </summary>
 <param name="iStanzaDBID">Database ID of the stanza group to remove the life stage from.</param>
 <param name="iGroupDBID">Group to remove as the life stage.</param>
 <returns>Always false; mutli-stanza logis is not supported in the EII data format.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.cEIIXMLDataSource">
 ===========================================================================
 <summary>
 Data access for an EwE6 .eiixml file
 </summary>
 ===========================================================================
</member>
<member name="M:EwECore.cEIIXMLDataSource.Open(System.String,EwECore.cCore,EwEUtils.Core.eDataSourceTypes,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Open an existing data source connection
 </summary>
 <param name="strName">Name of the EII file to open.</param>
 <param name="core"><see cref="T:EwECore.cCore">Core instance</see> that holds the 
 datastructures to read to, and write from.</param>
 <returns>True if opened successfully.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.IsOpen">
 -------------------------------------------------------------------
 <summary>
 States whether a datasource is already open.
 </summary>
 <returns>True if the datasource is open.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.Create(System.String,System.String,EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Create the EII datasource.
 </summary>
 <param name="strName">Name of the EII file to create.</param>
 <param name="strModelName">Name to assign to the model.</param>
 <param name="core"><see cref="T:EwECore.cCore">Core instance</see> that holds the 
 datastructures to read to, and write from.</param>
 <returns>Always false.</returns>
 <remarks>This action is not supported in EwE6.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.Close">
 -------------------------------------------------------------------
 <summary>
 Close the EII datasource.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.SetChanged(EwEUtils.Core.eCoreComponentType)">
 -------------------------------------------------------------------
 <summary>
 Flag a core object as changed in the datasource. Since the EIIDataSource
 does not support saving of data, this method contains no implementation
 </summary>
 <param name="cc">The <see cref="T:EwEUtils.Core.eCoreComponentType">core component</see> that changed.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.ClearChanged">
 -------------------------------------------------------------------
 <summary>
 Clear change flags in the datasource. Since the EIIDataSource does 
 not support saving of data, this method contains no implementation
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cEIIXMLDataSource.Connection">
 -------------------------------------------------------------------
 <summary>
 Get the name of the EII file that this datasource operates on.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.ToString">
 -------------------------------------------------------------------
 <summary>
 Get the name of the EII file that this datasource operates on.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.IsModified">
 -------------------------------------------------------------------
 <summary>
 States whether the datasource has unsaved changes that do not relate
 to any of the supported sub-models.
 </summary>
 <returns>True if the datasource has pending changes.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadModel">
 -------------------------------------------------------------------
 <summary>
 Initiates a full load of an ecopath model.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadModelInfo">
 -------------------------------------------------------------------
 <summary>
 Helper method, loads model info for the current model.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcopathGroups">
 -------------------------------------------------------------------
 <summary>
 Loads Ecopath Group information.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcopathDietComp">
 -------------------------------------------------------------------
 <summary>
 Loads ecopath diet composition information.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcopathFleetInfo">
 -------------------------------------------------------------------
 <summary>
 Loads all fleet-related data.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 If there is no <see cref="M:EwECore.cEIIXMLDataSource.IsFishing">fishing</see>, the fleet data will not be loaded.
 This check is inherited from EwE5.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcopathFleets">
 -------------------------------------------------------------------
 <summary>
 Loads all Ecopath fleets.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadPedigreeLevels">
 -----------------------------------------------------------------------
 <summary>
 Load the pedigree level definitions.
 </summary>
 <returns>True if successful.</returns>
 <remarks>Not supported yet</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadPedigreeAssignments">
 -----------------------------------------------------------------------
 <summary>
 Load the pedigree level assignments.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcopathTaxon">
 -------------------------------------------------------------------
 <summary>
 Loads Ecopath taxonomy information.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcosimScenarioDefinitions">
 -----------------------------------------------------------------------
 <summary>
 Load the list of available Ecosim scenarios.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will NOT load any actual Ecosim scenario. Scenario definitions 
 merely provide a preview of available Ecosim scenarios in the database.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcospaceScenarioDefinitions">
 -----------------------------------------------------------------------
 <summary>
 Load the list of available Ecospace scenarios.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will NOT load any actual Ecospace scenario. Scenario definitions 
 merely provide a preview of available Ecospace scenarios in the database.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcotracerScenarioDefinitions">
 -----------------------------------------------------------------------
 <summary>
 Load the list of available Ecotracer scenarios.
 </summary>
 <returns>True if successful.</returns>
 <remarks>Not supported yet</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadTimeSeriesDatasets">
 -------------------------------------------------------------------
 <summary>
 Load all time series dataset definitions for Ecopath.
 </summary>
 <returns>True if successful.</returns>
 <remarks>Yeah, this is odd; time series can only be used with Ecosim
 but this logic just reads which time series will be available for Ecosim
 later on; it is convenient to know which data sets are provided with
 the model, just as it is convenient to know which scenarios are
 before they are loaded ;)</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcosimScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Loads an ecosim scenario from the DB.
 </summary>
 <param name="iScenarioID">Database ID of the scenario to load.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadMediationWeights">
 -----------------------------------------------------------------------
 <summary>
 Load the mediation weights for the active scenario.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadTimeSeriesDataset(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Load all time series for a given dataset.
 </summary>
 <param name="iDataset">Index of dataset to load.</param>
 <returns>Always false.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcospaceMap(System.Data.DataTable,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Load the spatial data associated with an Ecospace scenario.
 </summary>
 <param name="iScenarioID">The scenario to load the data for.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LoadEcospaceMonthlyMaps(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Load the spatial data associated with an Ecospace scenario.
 </summary>
 <param name="iScenarioID">The scenario to load the data for.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.SaveModel">
 -------------------------------------------------------------------
 <summary>
 Initiates a save of an EwE model
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.SaveFromDB(EwEUtils.Database.cEwEDatabase,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Save an Ecopath database to a file
 </summary>
 <param name="db"></param>
 <param name="strFile">The file to save to</param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.IsEcopathModified">
 -------------------------------------------------------------------
 <summary>
 States if the datasource has unsaved changes for Ecopath.
 </summary>
 <returns>True if the datasource has pending changes for Ecopath.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.AddGroup(System.String,System.Single,System.Single,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Create a record for a new Ecopath group in the datasource.
 </summary>
 <param name="strGroupName">The name of the group to create.</param>
 <param name="sPP">The Type of the new group; 0=consumer, 1=producer, 2=detritus.</param>
 <param name="iPosition">The position of the new group in the group sequence.</param>
 <param name="iDBID">Database ID assigned to the new Group.</param>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will not adjust the data arrays. Due to the complex organization of the
 core a full data reload is required after a group is created.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.RemoveGroup(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Remove a group from the datasource.
 </summary>
 <param name="iDBID">Database ID of the group to remove.</param>
 <returns>True if successful.</returns>
 <remarks>
 Note that this will not adjust the data arrays. Due to the complex organization of the
 core a full data reload is required after a group is removed.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.MoveGroup(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecopath group to a different position in the group sequence.
 </summary>
 <param name="iDBID">Database ID of the group to move.</param>
 <param name="iPosition">The new position of the group in the group sequence.</param>
 <returns>Always false.</returns>
 <remarks>
 For now, this method is not supported since all data arrays need to be adjusted
 and there is no real need to implement this for EII datasources.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.AddFleet(System.String,System.Int32,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a fleet to the datasource.
 </summary>
 <param name="strFleetName">Name of the new fleet.</param>
 <param name="iDBID">Database ID assigned to the new fleet.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.RemoveFleet(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a fleet from the datasource.
 </summary>
 <param name="iDBID">Database ID of the fleet to remove.</param>
 <returns>Always false.</returns>
 <remarks>This action is not supported in EwE6.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.MoveFleet(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Move an Ecopath fleet to a different position in the fleet sequence.
 </summary>
 <param name="iDBID">Database ID of the fleet to move.</param>
 <param name="iPosition">The new position of the fleet in the fleet sequence.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.AppendStanza(System.String,System.Int32[],System.Int32[],System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a stanza group to the EII.
 </summary>
 <returns>Always false; mutli-stanza logis is not supported in the EII data format.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.RemoveStanza(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a stanza group from the EII.
 </summary>
 <param name="iDBID">Database ID of the stanza group to remove.</param>
 <returns>Always false; mutli-stanza logis is not supported in the EII data format.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.AddStanzaLifestage(System.Int32,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Adds a life stage to an existing stanza configuration.
 </summary>
 <param name="iStanzaDBID">Database ID of the stanza group to add the life stage to.</param>
 <param name="iGroupDBID">Group to add as a life stage.</param>
 <param name="iStartAge">Start age of this life stage.</param>
 <returns>Always false; mutli-stanza logis is not supported in the EII data format.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.RemoveStanzaLifestage(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a life stage from an existing stanza configuration.
 </summary>
 <param name="iStanzaDBID">Database ID of the stanza group to remove the life stage from.</param>
 <param name="iGroupDBID">Group to remove as the life stage.</param>
 <returns>Always false; mutli-stanza logis is not supported in the EII data format.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.IsEcosimModified">
 -------------------------------------------------------------------
 <summary>
 States if the datasource has unsaved changes for Ecosim.
 </summary>
 <returns>True if the datasource has pending changes for Ecosim.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.SaveEcosimScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Updates an ecosim scenario in the EII.
 </summary>
 <param name="iDBID">Database ID of the scenario to update.</param>
 <returns>Always false.</returns>
 <remarks>This action is not supported in EwE6.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.AppendEcosimScenario(System.String,System.String,System.String,System.String,System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds an ecosim scenario to the EII.
 </summary>
 <param name="strName">Name to assign to new scenario.</param>
 <param name="strDescription">Description to assign to new scenario.</param>
 <param name="strAuthor">Author to assign to the new scenario.</param>
 <param name="strContact">Contact info to assign to the new scenario.</param>
 <param name="iDBID">Database ID assigned to the new scenario.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.RemoveEcosimScenario(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes an ecosim scenario from the EII.
 </summary>
 <param name="iDBID">Database ID of the scenario to remove.</param>
 <returns>Always false.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.AppendShape(System.String,EwEUtils.Core.eDataTypes,System.Int32@,System.Single[],System.Int64,System.Single[])">
 -------------------------------------------------------------------
 <summary>
 Appends a forcing shape to the EII.
 </summary>
 <param name="strShapeName">Name to assign to new shape.</param>
 <param name="shapeType"><see cref="T:EwEUtils.Core.eDataTypes">Type of the shape</see> to add.</param>
 <param name="iDBID">Database ID assigned to the new shape.</param>
 <param name="asData">Shape point data.</param>
 <param name="functionType">Primitive function type shape was created from.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.RemoveShape(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Deletes a forcing shape from the EII.
 </summary>
 <param name="iDBID">Database ID of the shape to remove.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.AppendTimeSeries(System.String,System.Int32,System.Int32,EwECore.eTimeSeriesType,System.Single,System.Single[],System.Int32@)">
 -------------------------------------------------------------------
 <summary>
 Adds a time series to the datasource.
 </summary>
 <param name="strName">Name of the new Time Series to add.</param>
 <param name="timeSeriesType"><see cref="T:EwECore.eTimeSeriesType">Type</see> of the time series.</param>
 <param name="asValues">Initial values to set in the TS.</param>
 <param name="iDBID">Database ID assigned to the new TS.</param>
 <returns>Always false.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.RemoveTimeSeries(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes a time series from the datasource.
 </summary>
 <param name="iTimeSeriesID">Database ID of the time series to remove.</param>
 <returns>Always false.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.AppendTimeSeriesDataset(System.String,System.String,System.String,System.String,System.Int32,System.Int32,EwECore.eTSDataSetInterval,System.Int32@)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.DataSources.IEcosimDatasource.AppendTimeSeriesDataset(System.String,System.String,System.String,System.String,System.Int32,System.Int32,EwECore.eTSDataSetInterval,System.Int32@)"/>
 <returns>Always false.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.ImportTimeSeries(EwECore.cTimeSeriesImport,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Import a complete <see cref="T:EwECore.cTimeSeriesImport">cTimeSeriesImport</see>
 instance into the datasource.
 </summary>
 <param name="ts">The time series data to import.</param>
 <param name="iDataset">Index of the dataset to add time series to.</param>
 <returns>Always false.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.RemoveTimeSeriesDataset(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Removes all time series belonging to a specific dataset from the datasource.
 </summary>
 <param name="iDataset">Index of the dataset to remove.</param>
 <returns>Always false.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.IsFishing">
 -------------------------------------------------------------------
 <summary>
 States if there is catch for at least one group.
 </summary>
 <returns>True if catch was found.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.ReadSafe``1(System.Data.DataRow,System.String,``0,``0)">
 -----------------------------------------------------------------------
 <summary>
 Helper method, reads data from a column that may not exist. In that case,
 an optional default value is returned
 </summary>
 <param name="row">The <see cref="T:System.Data.DataRow"/> to read from.</param>
 <param name="strField">The name of the DB field (column) to read.</param>
 <param name="objValueDefault">A default value to return if the field could not be read.</param>
 <param name="objValueIgnore">Value to interpret as 'no value. When encountered, the default value will be returned.</param>
 <returns>The value of the requested column, or the provided default if an error occurred.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.LogMessage(System.String,EwEUtils.Core.eMessageType,EwEUtils.Core.eMessageImportance)">
 -------------------------------------------------------------------
 <summary>
 Logs a message to the application log.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEIIXMLDataSource.SplitNumberString(System.String@)">
 -----------------------------------------------------------------------
 <summary>
 <para>Helper method, splits a string of numbers into an array of strings,
 each string representing a number. This method assumes that numbers are
 separated by a ASCII character 32, a single space.</para>
 </summary>
 <param name="strNumberString">A comma-seoarated string of numbers to split.</param>
 <returns>
 An array of strings, each representing a number in the string.
 </returns>
 <remarks>
 <para>This method tries to resolve number formatting issues, introduced
 in models written by systems with different locale settings.</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.WebServices.Ecobase.cModelData">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing the data for model parameters.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.EcobaseCode">
 <summary>Ecobase ID.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.Area">
 <summary>Area size.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.North">
 <summary>Northern limit of the <see cref="P:EwECore.WebServices.Ecobase.cModelData.Extent"/>.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.East">
 <summary>Eastern limit of the <see cref="P:EwECore.WebServices.Ecobase.cModelData.Extent"/>.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.West">
 <summary>Western limit of the <see cref="P:EwECore.WebServices.Ecobase.cModelData.Extent"/>.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.South">
 <summary>Southern limit of the <see cref="P:EwECore.WebServices.Ecobase.cModelData.Extent"/>.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.Extent">
 <summary>Spatial bounding box.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.EcosystemType">
 <summary>Ecosystem type.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.UnitCurrency">
 <summary>Currency unit.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.UnitCurrencyIsCustom">
 <summary>Flag, stating if currency unit is a custom unit.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.AllowDissemination">
 <summary>Flag, stating if Ecobase has the right to make model parameters available for download.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.DOI">
 <summary>The digitial object identifier (doi) of the publication for this model.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.URI">
 <summary>The URI to the publication for this model.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.Reference">
 <summary>The reference of the publication for this model.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.EwEVersion">
 <summary>EwE version</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.ModelMatchesPaper">
 <summary>Flag, stating if the model matches the paper version.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.TempMean">
 <summary></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.TempMin">
 <summary></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.TempMax">
 <summary></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.DepthMean">
 <summary></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.DepthMin">
 <summary></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.DepthMax">
 <summary></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.EcosimUsed">
 <summary>Is Ecosim used?</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.EcospaceUsed">
 <summary>Is Ecospace used?</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.IsWholeFoodWeb">
 <summary>Is the entire foodweb accounted for?</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.CommentsDifference">
 <summary>Comments if there is difference between model used for the references and model upload</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.CommentsAccess">
 <summary>Comments if model is not declared as open access.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.Objectives">
 <summary>Description of objectives of the model.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.SubmissionType">
 <summary>
 
 </summary>
 <remarks>Set as <see cref="T:EwECore.WebServices.Ecobase.cModelData.eSubmissionType"/></remarks>
</member>
<member name="P:EwECore.WebServices.Ecobase.cModelData.SubmissionLink">
 <summary>
 Linked / updated EcoBase model
 </summary>
</member>
<member name="T:EwECore.WebServices.Ecobase.cGroupData">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing all data for a single group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cGroupData.BH">
 <summary>Biomass in habitat area</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cGroupData.Shadow">
 <summary>Non-market price</summary>
</member>
<member name="M:EwECore.WebServices.Ecobase.cGroupData.#ctor(EwECore.cCore,System.Int32)">
 <summary>
 Constructor, initializes an instance with model data for submitting to EcoBase.
 </summary>
 <param name="core">The core to obtain data from.</param>
 <param name="iGroup"></param>
</member>
<member name="T:EwECore.WebServices.Ecobase.cDietData">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing a single diet for a predator.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.WebServices.Ecobase.cFleetData">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing the data for a single fleet.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cFleetData.Index">
 <summary>Sequential, one-based index of a fleet.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cFleetData.Name">
 <summary>Name of a fleet.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cFleetData.NominalEffort">
 <summary>Nominal effort of a fleet.</summary>
</member>
<member name="T:EwECore.WebServices.Ecobase.cCatchData">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing a single catch for a group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cCatchData.GroupIndex">
 <summary>Name of the fleet the catch belongs to.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cCatchData.Amount">
 <summary>Catch value.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cCatchData.CatchType">
 <summary>Interpreted <see cref="T:EwECore.WebServices.Ecobase.cCatchData.eCatchType">value</see>.</summary>
</member>
<member name="T:EwECore.WebServices.Ecobase.cDiscardFateData">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing a discard fate for a fleet/group combination.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cDiscardFateData.GroupIndex">
 <summary>Name of the fleet the catch belongs to.</summary>
</member>
<member name="T:EwECore.WebServices.Ecobase.cStanzaData">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing the data for a single fleet.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cStanzaData.Index">
 <summary>Sequential, one-based index of a stanza.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cStanzaData.Name">
 <summary>Name of a stanza.</summary>
</member>
<member name="T:EwECore.WebServices.Ecobase.cStanzaLifeStageData">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing the data for a single multi-stanza life stage.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cStanzaLifeStageData.Index">
 <summary>Sequential, one-based index of a stanza.</summary>
</member>
<member name="T:EwECore.WebServices.Ecobase.cPedigreeData">
 -----------------------------------------------------------------------
 <summary>
 Class for containing a single pedigree level.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cPedigreeData.Index">
 <summary>Index of the pedigree level.</summary>
</member>
<member name="T:EwECore.WebServices.Ecobase.cPedigreeAssignmentData">
 -----------------------------------------------------------------------
 <summary>
 Class for containing a single pedigree level.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cPedigreeAssignmentData.LevelIndex">
 <summary>Index of the pedigree level.</summary>
</member>
<member name="T:EwECore.WebServices.Ecobase.cTaxonData">
 -----------------------------------------------------------------------
 <summary>
 Class for containing a single species.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.TaxonIndex">
 <summary>Index of the taxon.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.Kingdom">
 <summary>Reserved for future use.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.Phylum">
 <summary>Reserved for future use.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.CodeSAUP">
 <summary>See <see cref="F:EwEUtils.Core.eVarNameFlags.CodeSAUP"></see></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.CodeFB">
 <summary>See <see cref="F:EwEUtils.Core.eVarNameFlags.CodeFB"></see></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.CodeSLB">
 <summary>See <see cref="F:EwEUtils.Core.eVarNameFlags.CodeSLB"></see></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.CodeFAO">
 <summary>See <see cref="F:EwEUtils.Core.eVarNameFlags.CodeFAO"></see></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.CodeLSID">
 <summary>See <see cref="F:EwEUtils.Core.eVarNameFlags.CodeLSID"></see></summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.North">
 <summary>Northern limit of the <see cref="P:EwECore.WebServices.Ecobase.cTaxonData.Extent"/>.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.East">
 <summary>Eastern limit of the <see cref="P:EwECore.WebServices.Ecobase.cTaxonData.Extent"/>.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.West">
 <summary>Western limit of the <see cref="P:EwECore.WebServices.Ecobase.cTaxonData.Extent"/>.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.South">
 <summary>Southern limit of the <see cref="P:EwECore.WebServices.Ecobase.cTaxonData.Extent"/>.</summary>
</member>
<member name="P:EwECore.WebServices.Ecobase.cTaxonData.Extent">
 <summary>Spatial bounding box.</summary>
</member>
<member name="T:EwECore.WebServices.Ecobase.cEcobaseModelParameters">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing the data for a single model, as received from
 EcoBase
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cEcobaseModelParameters.Model">
 <summary>The <see cref="T:EwECore.WebServices.Ecobase.cModelData"/>.</summary>
</member>
<member name="F:EwECore.WebServices.Ecobase.cEcobaseModelParameters.Groups">
 <summary>The list of <see cref="T:EwECore.WebServices.Ecobase.cGroupData">groups</see>.</summary>
</member>
<member name="F:EwECore.WebServices.Ecobase.cEcobaseModelParameters.Fleets">
 <summary>The list of <see cref="T:EwECore.WebServices.Ecobase.cFleetData">fleets</see>.</summary>
</member>
<member name="F:EwECore.WebServices.Ecobase.cEcobaseModelParameters.Stanzas">
 <summary>The list of <see cref="T:EwECore.WebServices.Ecobase.cStanzaData">multi-stanza groups</see>.</summary>
</member>
<member name="F:EwECore.WebServices.Ecobase.cEcobaseModelParameters.PedigreeLevels">
 <summary>The list of <see cref="T:EwECore.WebServices.Ecobase.cPedigreeData">pedigree levels</see>.</summary>
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseModelParameters.#ctor">
 -------------------------------------------------------------------
 <summary>
 Default contructor
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseModelParameters.#ctor(EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Constructor, loads an instance from the currently loaded model.
 </summary>
 <param name="core">The core that has the loaded model.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseModelParameters.FromXML(System.String)">
 -------------------------------------------------------------------
 <summary>
 Factory method, create a cEcobaseData instance from WSDL output.
 </summary>
 <param name="strModel"></param>
 <returns>A cEcobaseData instance, or nothing if an error occurred.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseModelParameters.ToXML(EwECore.WebServices.Ecobase.cEcobaseModelParameters)">
 -------------------------------------------------------------------
 <summary>
 Convert a cEcobaseData instance to a chunk of XML for submission to EcoBase
 </summary>
 <param name="data"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.WebServices.Ecobase.cEcobaseModelList">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing a list of models received from EcoBase.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cEcobaseModelList.Models">
 <summary>The list of <see cref="T:EwECore.WebServices.Ecobase.cModelData"/> for all models in EcoBase.</summary>
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseModelList.#ctor">
 -------------------------------------------------------------------
 <summary>
 Deafult hidden constructor.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseModelList.FromXML(System.String)">
 -------------------------------------------------------------------
 <summary>
 Factory method, create a cEcobaseData instance from WSDL output.
 </summary>
 <param name="strModelsList">Models list XML from EcoBase.</param>
 <returns>A cEcobaseData instance, or nothing if an error occurred.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.WebServices.Ecobase.cEcobaseDataAccessAgreement">
 -----------------------------------------------------------------------
 <summary>
 Class for receiving the EcoBase data access agreement.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseDataAccessAgreement.#ctor">
 -------------------------------------------------------------------
 <summary>
 Default contructor
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseDataAccessAgreement.FromXML(System.String)">
 -------------------------------------------------------------------
 <summary>
 Factory method, create a cEcobaseDataAccessAgreement instance from WSDL output.
 </summary>
 <param name="strXML"></param>
 <returns>A cEcobaseDataAccessAgreement instance, or nothing if an error occurred.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.WebServices.Ecobase.cEcobaseSubmission">
 -----------------------------------------------------------------------
 <summary>
 Base class for containing the data for a single model
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.WebServices.Ecobase.cEcobaseSubmission.ModelNumber">
 <summary>Ecobase ID.</summary>
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseSubmission.#ctor">
 -------------------------------------------------------------------
 <summary>
 Default contructor
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseSubmission.FromXML(System.String)">
 -------------------------------------------------------------------
 <summary>
 Factory method, create a cEcobaseData instance from WSDL output.
 </summary>
 <param name="strXML"></param>
 <returns>A cEcobaseData instance, or nothing if an error occurred.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.WebServices.Ecobase.cEcobaseSubmission.ToXML(EwECore.WebServices.Ecobase.cEcobaseModelParameters)">
 -------------------------------------------------------------------
 <summary>
 Convert a cEcobaseData instance to a chunk of XML for submission to EcoBase
 </summary>
 <param name="data"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcoFunctions">
 <summary>
 Class to provide access to functions needed both internally to the core and 
 externally by plugins or other things.
 </summary>
</member>
<member name="M:EwECore.cEcoFunctions.Init(EwECore.cCore)">
 <summary>
 Initialize the instance to the current core.
 </summary>
 <param name="theCore">The core to initialize to.</param>
</member>
<member name="P:EwECore.cEcoFunctions.MatrixCalc">
 <summary>
 Matrix calculation object used by various routines in the core and plugins
 </summary>
</member>
<member name="M:EwECore.cEcoFunctions.EstimateTrophicLevels(System.Int32,System.Int32,System.Single[],System.Single[0:,0:],System.Single[])">
 <summary>
 Utility method, estimate trophic levels from diets.
 </summary>
 <param name="Diet"></param>
 <param name="TLreturn"></param>
 <remarks>
 This method is totally independent of cCore; all required information
 is passed in.
 </remarks>
</member>
<member name="M:EwECore.cEcoFunctions.getStanzaIndexForGroup(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the zero-based stanza index for a group index, or <see cref="F:EwECore.cCore.NULL_VALUE"/>
 if the group does not belong to a stanza..
 </summary>
 <param name="iGroup">The one-based group index to get the stanza for.</param>
 <returns>Gets Stanza index if this group is a stanza group, or
 cCore.NULL_VALUE if this group does not belong to a stanza configuration.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMatrixCalc.MatSEqnS(System.Single[0:,0:]@,System.Single[]@)">
 -----------------------------------------------------------------------
 <summary>
 MatSEqnS solves a system of n linear equations, Ax=b, and puts the 
 answer in b. A is first put in LU form by matluS, then matbsS is called
 to solve the system.  matrices A,b are single precision.
 </summary>
 <param name="A">contains coefficient matrix</param>
 <param name="B">contains the right side</param>
 <returns>A in LU form, solution in b</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMatrixCalc.matluS(System.Single[0:,0:]@,System.Boolean@)">
 -----------------------------------------------------------------------
 <summary>
 matluS does Gaussian elimination with total pivoting to put a square, single
 precision matrix in LU form. The multipliers used in the row operations to
 create zeroes below the main diagonal are saved in the zero spaces.
 </summary>
 <param name="A">Matrix</param>
 <param name="OkToContinue"></param>
 <returns>A in LU form with corresponding pivot vectors; the total number 
 of pivots in count, which is used to find the sign of the determinant.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMatrixCalc.matbsS(System.Single[0:,0:]@,System.Single[]@,System.Single[]@)">
 -----------------------------------------------------------------------
 <summary>
 matbsS takes a matrix in LU form, found by matluS, and a vector b
 and solves the system Ux=Lb for x. matrices A,b,x are single precision.
 </summary>
 <param name="A">LU matrix</param>
 <param name="B">right side</param>
 <param name="X">solution</param>
 <returns>solution in x, b is modified, rest unchanged</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcopathFleetInput">
 <summary>
 Class to encapsulate a variables for a single Fishing Fleet Input
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.cEcopathFleetOutput">
 <summary>
 Results from EcoPath for a single fleet.
 </summary>
</member>
<member name="P:EwECore.cEcopathFleetOutput.CatchTotalByGroup(System.Int32)">
 <summary>
 Total Catch Landings + discards. Includes discards that survived
 </summary>
 <param name="iGrp"></param>
 <returns></returns>
</member>
<member name="P:EwECore.cEcopathFleetOutput.LandingsByGroup(System.Int32)">
 <summary>
 Landings only
 </summary>
 <param name="iGrp"></param>
 <returns></returns>
</member>
<member name="P:EwECore.cEcopathFleetOutput.DiscardByGroup(System.Int32)">
 <summary>
 Total Discards 
 </summary>
 <param name="iGrp"></param>
</member>
<member name="P:EwECore.cEcopathFleetOutput.DiscardMortByGroup(System.Int32)">
 <summary>
 Discards that incurred mortality Discards * DiscardMortRate
 </summary>
 <param name="iGrp"></param>
 <returns></returns>
</member>
<member name="P:EwECore.cEcopathFleetOutput.DiscardSurvivalByGroup(System.Int32)">
 <summary>
 Discards that survived Discards * (1 - DiscardMortRate)
 </summary>
 <param name="iGrp"></param>
 <returns></returns>
</member>
<member name="T:EwECore.cEcoPathGroupInput">
 <summary>
 Inputs for EcoPath for a single group.
 </summary>
 <remarks>
 This class wraps the inputs to EcoPath for one group into a single object.
 </remarks>
</member>
<member name="M:EwECore.cEcoPathGroupInput.ClearCurrentStatus">
 <summary>
 Clear the Status/message (CurrentStatus) object for this group 
 </summary>
 <remarks></remarks>
</member>
<member name="P:EwECore.cEcoPathGroupInput.BioAccumInput">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.BA">biomass accumulation</see>
 value for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.PBInput">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.PBinput">production per biomass</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.QBInput">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.QBinput">consuption per biomass</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.GEInput">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.GEinput">production per consuption</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.GS">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.GS">unassimilation per consumption</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.DetImport">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.DtImp">detritus import</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.Area">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.Area">Area</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.BiomassAreaInput">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.BH">Biomass per Area</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.EEInput">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.EEinput">Ecotrophic efficiency</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.OtherMortInput">
 -----------------------------------------------------------------------
 <summary>
 Get/set the other mortality ratio for this group, defined as 1 - <see cref="P:EwECore.cEcoPathGroupInput.EEInput"/>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.DietComp(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.DC">Diet composition</see> ratio
 for a particular prey for this group.
 </summary>
 <param name="iPreyGroup">The <see cref="P:EwECore.cCoreInputOutputBase.Index">index</see> of the prey (or group)
 that makes up a percentage of this predators diet.</param>
 <remarks>
 <para>How to use:</para>
 <para>Set the diet composition of group 1 to 50% of its diet from group 4</para>
 <code>
 Dim core As cCore = cCore.GetInstance()
 Dim group As cEcoPathGroupInput = Nothing
 
 ' Get the group
 group = core.EcoPathGroupInputs(1)
 ' Set the diet comp for group 4 to 50%
 EcoPathGroup.DietComp(4) = .5
 ' or
 core.EcoPathGroupInputs(1).DietComp(4) = .5
 </code>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.DietComp">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.DC">Diet composition</see>
 ratio array for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.DetritusFate(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.DF">Detritus fate</see> ratio
 for a particular prey for this group.
 </summary>
 <param name="iDetritusGroup"></param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.DetritusFate">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.DF">Detritus fate</see> ratio
 array for a particular prey for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.EmigRate">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.Emig">emigration rate relative to biomass</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.BioAccumRate">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.BaBi">Biomass accumulation per biomass</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.Immigration">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.Immig">immigration</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.Emigration">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.Emigration">emigration</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.IsFished">
 -----------------------------------------------------------------------
 <summary>
 Get whether a group is being fished. This value is kept up to date by 
 the core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.IsPred(System.Int32)">
 <summary>
 Get whether this group is predated on by <paramref name="iGroup">group index</paramref>.
 </summary>
 <param name="iGroup">Group index of the predator</param>
</member>
<member name="P:EwECore.cEcoPathGroupInput.IsPrey(System.Int32)">
 <summary>
 Get whether this group predates on <paramref name="iGroup">group index</paramref>.
 </summary>
 <param name="iGroup">Group index of the prey</param>
</member>
<member name="P:EwECore.cEcoPathGroupInput.DietCompStatus(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.DietComp">DietComp value</see> of this group.
 </summary>
 <param name="iGroup">Prey <see cref="P:EwECore.cCoreInputOutputBase.Index">index</see>.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.DetritusFateStatus(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.DetritusFate">DestritusFate value</see> of this
 group.
 </summary>
 <param name="iDetritusGroup">Detritus group <see cref="P:EwECore.cCoreInputOutputBase.Index">index</see>.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.AreaStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.Area">Area value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.BiomassAreaStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.BiomassAreaInput">BiomassArea input</see> value of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.PBStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.PBInput">PBInput value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.QBInputStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.QBInput">QBInput value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.EEInputStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.EEInput">EEInput value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.OtherMortInputStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.OtherMortInput">OtherMortInput value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.GEStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.GEInput">GEInput value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.GSStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.GS">GS value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.DetImportStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.DetImport">DetImport value</see> this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.BioAccumStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.BioAccumInput">BioAccum input value</see> this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.EmigRateStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.EmigRate">EmigRate value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.EmigrationStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.Emigration">Emigration value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.ImmigrationStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.Immigration">Immigration value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.BioAccumRateStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.BioAccumRate">BioAccumRate value</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.ImpDietStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eStatusFlags">status</see> of the 
 <see cref="P:EwECore.cEcoPathGroupInput.ImpDiet">imported diet</see> of this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.NTaxon">
 -----------------------------------------------------------------------
 <summary>
 Get the number of taxa assigned to this group = either directly
 via <see cref="P:EwECore.cTaxon.Group"/>, or indirectly via <see cref="P:EwECore.cTaxon.Stanza"/>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoPathGroupInput.iTaxon(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="P:EwECore.cCoreInputOutputBase.Index">Index</see> of a taxon
 for this group. Taxa are stored in a one-based array.
 </summary>
 <param name="iIndex">The one-based index to obtain the taxon index for.</param>
 <returns>Index of a taxon that is assigned to this group - either directly
 via <see cref="P:EwECore.cTaxon.Group"/>, or indirectly via <see cref="P:EwECore.cTaxon.Stanza"/>.</returns>
 <remarks>
 <para>The returned index identifies the index of a particular taxon assigned
 to this group.</para>
 <code>
 Dim grp As cEcoPathGroupInputs = Nothing
 Dim taxon As cTaxon = Nothing
 
 ' Get the first group
 grp = core.EcopathGroupInputs(1)
 
 ' Iterate over the taxa that are assigned to this group
 For iIndex As Integer = 1 To grp.NTaxon
    taxon = core.Taxon(grp.iTaxon(iIndex))
    ' Do something with the taxon
    ' ..
    ' ..
 Next iIndex
 </code>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcopathGroupOutput">
 <summary>
 Results from EcoPath for a single group.
 </summary>
 <remarks>
 This class wraps the outputs from EcoPath for one group into a single object.
 </remarks>
</member>
<member name="F:EwECore.cEcopathGroupOutput.eNullTestTypes.NonZero">
 <summary>Value is not allowed to be 0 or core Null.</summary>
</member>
<member name="F:EwECore.cEcopathGroupOutput.eNullTestTypes.GreaterThanZero">
 <summary>Value must be larger than 0 (and not core Null).</summary>
</member>
<member name="F:EwECore.cEcopathGroupOutput.eNullTestTypes.NonCoreNull">
 <summary>Value must not be core Null.</summary>
</member>
<member name="M:EwECore.cEcopathGroupOutput.SetNullFlag(EwEUtils.Core.eVarNameFlags,System.Single,System.Int32,EwECore.cEcopathGroupOutput.eNullTestTypes)">
 <summary>
 Set the status flag of this variable to NULL if it is less than zero
 </summary>
 <param name="varName">Name of the variable that will get the status flag set</param>
 <param name="sValueToTest">
 <para>Value of the variable to test.</para>
 <para>The value is passed in so that the calling method can use either the core data structures or the output object. 
 If just the eVarNameFlags is used then only the getVariable() method can be used to retrieve the value.</para>
 </param>
 <param name="Index">Optional variable index.</param>
 <param name="nullTest">Flag stating how to test for NULL values.</param>
</member>
<member name="P:EwECore.cEcopathGroupOutput.PredMort(System.Int32)">
 <summary>
 Predation mortality on this group caused by this ipred
 </summary>
 <param name="iPred">iPredator group </param>
 <value>Returns predation mortality on this group caused by this iPredator</value>
 <remarks>
 B(pred) * QB(pred) * DC(pred, prey) / B(prey) 
</remarks>
</member>
<member name="P:EwECore.cEcopathGroupOutput.PredMort">
 <summary>
 Predation mortality array
 </summary>
 <value>Returns an array of predation mortalities for this group</value>
 <remarks> B(pred) * QB(pred) * DC(pred, prey) / B(prey) </remarks>
</member>
<member name="P:EwECore.cEcopathGroupOutput.MortCoPB">
 <summary> PB(iGroup) </summary>
</member>
<member name="P:EwECore.cEcopathGroupOutput.MortCoFishRate">
 <summary> Catch(i) / B(i) </summary>
</member>
<member name="P:EwECore.cEcopathGroupOutput.MortCoPredMort">
 <summary> M2(i) </summary>
</member>
<member name="P:EwECore.cEcopathGroupOutput.MortCoBioAcumRate">
 <summary> BA(i) / B(i) </summary>
</member>
<member name="P:EwECore.cEcopathGroupOutput.MortCoNetMig">
 <summary> (Emigration(i) - Immig(i)) / B(i) </summary>
</member>
<member name="P:EwECore.cEcopathGroupOutput.FishMortPerTotMort">
 <summary>
  Fishing mort / total mort 
 </summary>
 <value></value>
 <returns></returns>
 <remarks>output.FishMortPerTotMort = output.MortCoFishRate / (m0 + m_EcoPathData.M2(iGroup) + output.MortCoFishRate) 'F/Z</remarks>
</member>
<member name="P:EwECore.cEcopathGroupOutput.NatMortPerTotMort">
 <summary>
  Proportion of mortality due to predation and other mort 
 </summary>
 <value></value>
 <returns></returns>
 <remarks>output.NatMortPerTotMort = CSng(1.0 - output.FishMortPerTotMort) 'M/Z</remarks>
</member>
<member name="T:EwECore.cEcopathDataStructures">
 <summary>
 Wrapper for the underlying data structures of the EcoPath model. 
 Provides a way to wrap all the data from EcoPath into one place
 </summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.ModelUnitCurrency">
 <summary>Index of current selected currency units.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.ModelEcobaseCode">
 <summary>Code of a model in the Ecobase repository, if any.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.GroupName">
 <summary>Group names.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.GroupDBID">
 <summary>Group Database ID - uniquely identifies a group.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.NumEcosimScenarios">
 <summary>Number of Ecosim scenarios available in a loaded model.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcosimScenarioName">
 <summary>Array of Ecosim scenario names.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcosimScenarioDBID">
 <summary>Array of Ecosim scenario database IDs.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcosimScenarioDescription">
 <summary>Array of Ecosim scenario descriptions.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcosimScenarioAuthor">
 <summary>Array of Ecosim scenario authors.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcosimScenarioContact">
 <summary>Array of Ecosim scenario contacts.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcosimScenarioLastSaved">
 <summary>Array of Ecosim scenario save dates (in julian day format).</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.ActiveEcosimScenario">
 <summary>Index of active Ecosim scenario.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.NumEcospaceScenarios">
 <summary>Number of Ecospace scenarios available in a loaded model.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcospaceScenarioName">
 <summary>Array of Ecospace scenario names.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcospaceScenarioDBID">
 <summary>Array of Ecospace scenario database IDs.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcospaceScenarioDescription">
 <summary>Array of Ecospace scenario descriptions.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcospaceScenarioAuthor">
 <summary>Array of Ecospace scenario authors.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcospaceScenarioContact">
 <summary>Array of Ecospace scenario contacts.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcospaceScenarioLastSaved">
 <summary>Array of Ecospace scenario save dates (in julian day format).</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.ActiveEcospaceScenario">
 <summary>Index of active Ecospace scenario.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.NumEcotracerScenarios">
 <summary>Number of Ecotracer scenarios available in a loaded model.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcotracerScenarioName">
 <summary>Array of Ecotracer scenario names.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcotracerScenarioDBID">
 <summary>Array of Ecotracer scenario database IDs.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcotracerScenarioDescription">
 <summary>Array of Ecotracer scenario descriptions.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcotracerScenarioAuthor">
 <summary>Array of Ecotracer scenario authors.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcotracerScenarioContact">
 <summary>Array of Ecotracer scenario contacts.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EcotracerScenarioLastSaved">
 <summary>Array of Ecotracer scenario save dates (in julian day format).</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.ActiveEcotracerScenario">
 <summary>Index of active Ecotracer scenario.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.B">
 <summary>Biomass (computed)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.BH">
 <summary>Biomass in habitat area (t/km²)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.BAInput">
 <summary>Biomass accumulation (t/km²/year) as entered by the user</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.BaBi">
 <summary>Biomass accumulation / biomass</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.BA">
 <summary>Biomass accumulation (t/km²/year)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.PB">
 <summary>Production / biomass (/year)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.QB">
 <summary>Consumption / biomass (/year)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.EE">
 <summary>Ecotrophic efficiency (ratio)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.GE">
 <summary>Production / consumption (ratio)</summary>
 <remarks>Fraction of the production that is passed up in the food web.</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.GS">
 <summary>Unassimilation / consumption (ratio)</summary>
 <remarks>Fraction of the food that is not assimilated.</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.GSEng">
 <summary>Unassimilation / consumption (ratio) for Energy Currency units ONLY</summary>
 <remarks>Fraction of the food that is not assimilated.</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.EEinput">
 <summary>Ecotrophic efficiency (ratio) - original user input value of <see cref="F:EwECore.cEcopathDataStructures.EE">EE</see>.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.OtherMortinput">
 <summary>Other mortaility (ratio) - defined as 1-<see cref="F:EwECore.cEcopathDataStructures.EE">EE</see>.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.PBinput">
 <summary>Production / biomass (/year) - original user input of <see cref="F:EwECore.cEcopathDataStructures.PB">PB</see>.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.QBinput">
 <summary>Consumption / biomass (/year) - original user input of <see cref="F:EwECore.cEcopathDataStructures.QB">QB</see>.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.GEinput">
 <summary>Production / consumption (ratio) - original user input of <see cref="F:EwECore.cEcopathDataStructures.GE">GE</see>.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Binput">
 <summary>Biomass (input value)- original user input of <see cref="F:EwECore.cEcopathDataStructures.B">B</see>.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.BHinput">
 <summary>Biomass habitat area (input value)- original user input of <see cref="F:EwECore.cEcopathDataStructures.BH">BH</see>.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.NumGroups">
 <summary>Total number of groups (living and detritus)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.NumLiving">
 <summary>Total number of living groups.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.NumDetrit">
 <summary>Total number of detritus groups.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.NumFleet">
 <summary>Total number of fleets.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.TimeUnitName">
 <summary>User-provided name for time units.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.TimeUnitIndex">
 <summary>Index of current selected time unit.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.DietsModified">
 <summary>Flag stating whether diets have been modified since the last time Ecopath has ran.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.fCatch">
 <summary>Sum (per <see cref="F:EwECore.cEcopathDataStructures.NumGroups">NumGroups</see>) of landings + discards.</summary>
 <remarks>Computed in Catch_calculations(). was called Catch but this causes a naming conflict with Try Catch blocks</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.DC">
 <summary>Diet composition(per pred, prey) (ratio), a <see cref="F:EwECore.cEcopathDataStructures.NumGroups">NumGroups</see> * <see cref="F:EwECore.cEcopathDataStructures.NumGroups">NumGroups</see>
 matrix of species consumption ratios.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.DF">
 <summary>Detritus fate(per <see cref="F:EwECore.cEcopathDataStructures.NumGroups">NumGroups</see>, <see cref="F:EwECore.cEcopathDataStructures.NumDetrit">NumDetrit</see>) (ratio)</summary>
 <remarks>Matrix describing where to direct surplus detritus.</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.Area">
 <summary>Area (<see cref="F:EwECore.cEcopathDataStructures.NumGroups">NumGroups</see>)</summary>
 <remarks>Fraction of the Area where a group occurs.</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.DCChanged">
 <summary>Diet (<see cref="F:EwECore.cEcopathDataStructures.NumGroups">pred</see>, <see cref="F:EwECore.cEcopathDataStructures.NumGroups">prey</see>) change flags.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Resp">
 <summary>All non-usable 'model currency' that leaves the box represented by a group.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.det">
 <summary>Detritus flow (#groups + #fleet,#groups + #fleet)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.DCDet">
 <summary>Diet Composition of Detritus  for fishery.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.FlowToDet">
 <summary>Flow to detritus (x (group + fleet)).</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.InputToDet">
 <summary>Input to detritus (x group).</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Immig">
 <summary>Migration into the area covered by the model (t/km²/year)</summary>
 <remarks>Note that migration is not the same as import, refer to the manual for details.</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.Emigration">
 <summary>Emigration (per group) out of the area covered by the model (t/km²/year)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Emig">
 <summary>Emigration (per group) relative to biomass (ratio)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.GroupIsFish">
 <summary>States which groups are fishes. There is no interface in EwE for this flag, and its function should be replaced by the taxonomy logic</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.GroupIsInvert">
 <summary>States which groups are invertebrates. There is no interface in EwE for this flag, and its function should be replaced by the taxonomy logic</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.TTLX">
 <summary>Trophic levels in Ecopath.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.DtImp">
 <summary>Detritus import (ratio)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.FleetName">
 <summary>Names of fleets.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.FleetDBID">
 <summary>Database IDs per fleet.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.cost">
 <summary> cost(nFleets,3) '1 is fixed cost, 2 is cost per unit effort, 3 sailing cost </summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.NominalEffort">
 <summary>Actual, real-world effort represented by the fleet</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Discard">
 <summary>Discarded biomass by fleet group </summary>
 <remarks>Includes survival!</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.DiscardFate">
 <summary>Fate of discards (by fleet, #detritus)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Landing">
 <summary>Landinged biomass (by fleet,group)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Market">
 <summary>Market value of landings (by fleet,group)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.PropDiscard">
 <summary>Proportion of total catch that are discards (by fleet, group)</summary>
 <remarks>This is proportion of the total catch that are discarded. Including mortality and survivals.</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.PropDiscardMort">
 <summary>Proportion of regulated discards that die (by fleet, group)</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.CatchSum">
 <summary>Sum of catch.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.GEff">
 <summary>Gross efficiency.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.TLcatch">
 <summary>Tropic level of the catch.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Dt">
 <summary>Total flow of detritus</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.SumEx">
 <summary>Sum of exports.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.SumP">
 <summary>Sum of all production.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Conn">
 <summary>Connectance Index.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.vbK">
 <summary>VBGF curvature parameter K (/year).</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.GroupColor">
 <summary>Colours for groups in an interface (x group).</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.FleetColor">
 <summary>Colours for fleets in an interface (x fleet).</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.PedigreeLevelIndexValue">
 <summary>Index value expressed in ratio [0, 1]</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.PedigreeLevelConfidence">
 <summary>Confidence interval expressed in rounded percentages</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.Pedigree">
 <summary>Array [#groups, #supported vars] = Level index.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.PedigreeVariables">
 <summary>One-based array of variables supported by the pedigree system.</summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.NumPedigreeVariables">
 <summary>Number of <see cref="F:EwECore.cEcopathDataStructures.PedigreeVariables"/></summary>
</member>
<member name="F:EwECore.cEcopathDataStructures.mis">
 <summary>
 Number of missing variables per groups
 </summary>
 <remarks>These are the variables that need to be computed be Ecopath</remarks>
</member>
<member name="F:EwECore.cEcopathDataStructures.isEcospaceModelCoupled">
 <summary>
 Is the currently loaded Ecospace model setup for coupling with an external model.
 </summary>
 <remarks>
 Coupling joins Ecospace to an external model that is used to dynamically compute PP or other lower trophic level values. 
 This flag is used to dimension variables during the load of an Ecospace model.
 Stored with the Ecopath data because this needs to be set before an Ecospace scenario is loaded so it can be used for dimensioning.
 </remarks>
</member>
<member name="P:EwECore.cEcopathDataStructures.DiversityIndex">
 <summary>
 Returns the computed diversity index that is selected in <see cref="F:EwECore.cEcopathDataStructures.DiversityIndexType"/>
 </summary>
</member>
<member name="M:EwECore.cEcopathDataStructures.redimGroups">
 <summary>
 Redim All variables that in EcoPath that have an NGroup dimension
 </summary>
 <returns></returns>
 <remarks>This act as a central location to change the number of groups in the EcoPath data</remarks>
</member>
<member name="M:EwECore.cEcopathDataStructures.redimGroupVariables">
 <summary>
 redimension array variables 
 called when a new model is loaded
 </summary>
 <returns></returns>
 True if no error
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcopathDataStructures.RedimFleetVariables(System.Boolean)">
 <summary>
 Redimension all fishing variables
 </summary>
 <param name="NoPreserve">
 A flag to keep the existing values in the arrays 
 True means do NOT keep the original values NO preserve.
 False to KEEP the values.
 </param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcopathDataStructures.onPostEcopathRun(EwECore.cEcoFunctions)">
 <summary>
 Central handler for computing anything after an Ecopath model run.
 </summary>
 <returns></returns>
</member>
<member name="M:EwECore.cEcopathDataStructures.ComputeFisheriesStats">
 <summary>
     Computes 
CatchSum: sum of catch.
GEff: Gross efficiency catch/net p.p..
TLcatch: Mean trophic level of the catch.
Run after the parameters have been estimated.
 </summary>
 <remarks>
 This code was originally at the bottom of ParamEstimate1.
 </remarks>
</member>
<member name="M:EwECore.cEcopathDataStructures.Compute_M2_Resp_and_Stats(EwECore.cEcoFunctions,System.Boolean)">
<summary>
Computes the following:
M2(): Predator mortality for group i.
Resp(i): Respiration for group i.
RTZ: sum resp.  
ConSum: sum of consumption.
SumBio: sum of biomass.
min_B_QB: minimum B*QB.
 </summary>
 <param name="bQuiet">Flag to suppress any system warning messages that this method may produce.</param>
 <returns>True if there were all respiration is valied</returns>
 <remarks>
 Was Public Sub ParamEstimate2() in original code
 </remarks>
</member>
<member name="M:EwECore.cEcopathDataStructures.ComputeMoreStats(EwECore.cEcoFunctions)">
 <summary>
 Compute
 Conn: Connectance Index.
 SumEx: sum of export.
 SumP: Sum of all production.
 SysOm: System Omnivory Index.
 Shannon: ShannonDiversity  ---- either Shannon
 Kempton: KemptonsQ         ---- or Kempton will be shown
 </summary>
</member>
<member name="M:EwECore.cEcopathDataStructures.CopyInputToModelArrays">
 <summary>
 Copy the Input arrays into the arrays that are used for modeling and model output.
 </summary>
 <returns>True if all the values were copied successfully.</returns>
 <remarks>This is call at the start of an Ecopath model run to copy the input data into the arrays that are used
 for model computations and output. I.e. copies EEinput(NumGroups) into EE(NumGroups). In EwE5 this is called MakeUnknownUnknown </remarks>
</member>
<member name="M:EwECore.cEcopathDataStructures.UpdateBH">
 <summary>
 Compute missing <see cref="F:EwECore.cEcopathDataStructures.BH">BH</see> (Biomass/Area) values.
 </summary>
 <returns>True if successfully.</returns>
 <remarks>
 EwE5 performed differently here; BH() value was left at its NULL input value,
 and was computed in the interface for display. I hope this doesn't mess anything up.
 </remarks>
</member>
<member name="M:EwECore.cEcopathDataStructures.SumDCToOne">
 <summary>
 Sums a <see cref="F:EwECore.cEcopathDataStructures.DC">Diet Composition</see> matrix to one. 
 </summary>
</member>
<member name="M:EwECore.cEcopathDataStructures.areUnitCurrencyNutrients">
 -----------------------------------------------------------------------
 <summary>
 Returns whether Ecopath is set to use Nutrient-based currency units.
 </summary>
 <returns>True if Ecopath is set to use Nutrient-based currency units.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcopathDataStructures.onPostInitialization">
 <summary>
 Run any post initialization validation
 </summary>
 <remarks>This should only be called from the datasouce once it has populated the Ecopath variables.
 It should not be called by the core in response to an edit because it can alter values in an unknown number of places. 
 The core would need to reload all it's Ecopath data after the call.
 If other logic is need that the core can have access to it should be put in a separate routine and called here. 
 The core can then access the logic via a different interface.
  </remarks>
</member>
<member name="T:EwECore.Ecopath.eEcopathRunState">
 <summary>
 State of the last call to <see cref="M:EwECore.Ecopath.cEcopathModel.Run">cEcopathmodel.Run</see>
 </summary>
 <remarks>This passes out the internal state of an Ecopath run.</remarks>
</member>
<member name="F:EwECore.Ecopath.eEcopathRunState.NotRun">
 <summary>Model has not been run yet.</summary>
</member>
<member name="F:EwECore.Ecopath.eEcopathRunState.ValidEE">
 <summary>Model ran with a balanced model. EE in bounds. </summary>
</member>
<member name="F:EwECore.Ecopath.eEcopathRunState.InValidEE">
 <summary>Failed EE out of bounds.</summary>
</member>
<member name="F:EwECore.Ecopath.eEcopathRunState.MissingParameter">
 <summary>Failed to find all the parameter. </summary>
</member>
<member name="F:EwECore.Ecopath.eEcopathRunState.InValidDietMatrix">
 <summary>Failed to run because diet matrix does not sum to one. </summary>
</member>
<member name="F:EwECore.Ecopath.eEcopathRunState.InValidInitialization">
 <summary>Failed due to invalid initialization of data.  </summary>
</member>
<member name="F:EwECore.Ecopath.eEcopathRunState.Error">
 <summary>Failed to run because an error was encountered. </summary>
</member>
<member name="T:EwECore.Ecopath.cEcopathModel">
 <summary>
 Class that Encapsulates the EcoPath Model
 </summary>
</member>
<member name="T:EwECore.Ecopath.cEcopathModel.eEstimateTypes">
 <summary>Enumerator indicating which variables to estimate.</summary>
</member>
<member name="F:EwECore.Ecopath.cEcopathModel.eEstimateTypes.NotSet">
 <summary>Default value for the <see cref="F:EwECore.Ecopath.cEcopathModel.EstimateWhat">estimation flag</see>, 
 it seems that type EE and 0 are used interchangably.</summary>
</member>
<member name="F:EwECore.Ecopath.cEcopathModel.eEstimateTypes.EE">
 <summary>Estimate EE.</summary>
</member>
<member name="F:EwECore.Ecopath.cEcopathModel.eEstimateTypes.BA">
 <summary>Estimate Biomass Accumulation.</summary>
</member>
<member name="F:EwECore.Ecopath.cEcopathModel.eEstimateTypes.Migration">
 <summary>Estimate migration.</summary>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.Clear">
 <summary>
 What does this do, and why only these variables and not the lot?
 </summary>
</member>
<member name="P:EwECore.Ecopath.cEcopathModel.EstimationStatus">
 <summary>
 Results of the Parameter Estimation 
 </summary>
 <returns></returns>
 <remarks>Parameter Estimation results are done as a Property instead of the return value so that a plugin can do the estimation  </remarks>
</member>
<member name="P:EwECore.Ecopath.cEcopathModel.Messages">
 -----------------------------------------------------------------------
 <summary>
 Exposes the MessagePublisher instance so that the core can add message handlers
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecopath.cEcopathModel.suppressMessages">
 <summary>
 Do not send any messages
 </summary>
 <value>True to prevent Ecopath from sending messages, false to allow Ecopath to send messages (which is the default behaviour).</value>
 <returns></returns>
 <remarks>This allows Ecopath to run in a 'Silent' mode</remarks>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.NotifyCore(EwECore.cMessage)">
 <summary>
 Tell the core to send this message
 </summary>
 <param name="msg"></param>
 <remarks>Wraps the delegate instance that is use to notify the core of a message</remarks>
</member>
<member name="P:EwECore.Ecopath.cEcopathModel.EcopathData">
 <summary>
 Get or Set the cEcoPathDatastructures object
 </summary>
 <value></value>
 <remarks>
 This is the wrapper that contains all the underlying data for EcoPath
 </remarks>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.Run">
 <summary>
 Estimate the unknown parameters in EcoPath
 </summary>
 <returns>
 True if successfull 
 False if something went wrong
 </returns>
 <remarks>
 EcoPath must be initialized before this can be called
 see cModelInterface.InitEcoPath(Datasource_filename) for EcoPath initialization.
 Check the EstimationStatus (eStatusFlag) for failure code 
 </remarks>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.onModelUnitCurrencyChanged">
 <summary>
 Set GS Unassimilated Consumption based on the Model Currency Units <see cref="F:EwECore.cEcopathDataStructures.ModelUnitCurrency"/>
 </summary>
 <remarks>
 If Currency is Nutrient then GS has a default of (1 - Me.GE(igrp))
 Otherwise it is defined by the user with a default of 0.2.
 </remarks>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.setEstimateWhat">
 <summary>
 Set the EstimateWhat(iGroup) in response to user input
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.CheckQB">
 <summary>
 Set all QB values that are CORE_NULL to Zero
 </summary>
 <remarks>QB is used by Ecosim which assumes that null values are zero</remarks>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.Chesson">
 <summary>
 
 </summary>
 <remarks>This method is borrowed from EwE5 EcoRanger since it is required for
 calculating Ecopath outputs.</remarks>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.CheckForMissingDetritusBiomass">
 <summary>
 Warn the user if detritus has no biomass
 </summary>
 <remarks>In EwE5 this was part of FindMissing()</remarks>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.CheckStanzaHabArea">
 <summary>
 Warn the user if stanza groups use fractional habitat area proportions
 </summary>
</member>
<member name="M:EwECore.Ecopath.cEcopathModel.checkDietsSumToOne(System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="bQuiet">Flag stating whether the user should be asked
 what to do if diets do not sum to one. If true, this method executes
 quietly and no questions will be asked. If False, the user will be
 prompted.</param>
 <returns>True if diets do sum to one.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Ecopath.cEcopathMergeGroups">
 ---------------------------------------------------------------------------
 <summary>
 Class to merge two groups in Ecopath.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecopath.cEcopathMergeGroups.#ctor(EwECore.cCore)">
 -----------------------------------------------------------------------
 <summary>
 Constructor.
 </summary>
 <param name="core">The <see cref="T:EwECore.cCore"/> to operate on.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecopath.cEcopathMergeGroups.CanMergeGroups(System.Int32,System.Int32,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the current Ecopath model is ready to merge two specific
 groups and a candidate name.
 </summary>
 <param name="agg1">The one-based index of the first group.</param>
 <param name="agg2">The one-based index of the second group.</param>
 <param name="strName">A suggested name for the aggregation of two groups.</param>
 <returns>True if the proposed merge can be executed.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecopath.cEcopathMergeGroups.CompatibleGroups(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns an array of <see cref="P:EwECore.cCoreInputOutputBase.Index">indexes</see> of
 groups that can be merged with the provided <paramref name="iGroup">group index</paramref>.
 </summary>
 <param name="iGroup">The group index to find compatible groups for.</param>
 <returns></returns>
 <remarks>
 <para>Producers can be merged with producers;</para>
 <para>Consumers with consumers;</para>
 <para>Detritus with detritus.</para>
 <para>For stanza groups, only life stages within the same stanza group 
 can be merged</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecopath.cEcopathMergeGroups.GroupName(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns a suggested name for the aggregation of two groups.
 </summary>
 <param name="agg1">The one-based index of the first group.</param>
 <param name="agg2">The one-based index of the second group.</param>
 <returns>A suggested name for the aggregation of two groups.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecopath.cEcopathMergeGroups.Merge">
 -----------------------------------------------------------------------
 <summary>
 Merge two groups.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.Ecopath.cEcopathMergeSplitGroups.m_core">
 <summary>The core that holds the source model.</summary>
</member>
<member name="M:EwECore.Ecopath.cEcopathMergeSplitGroups.CanMergeSplitGroups(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the current Ecopath model is ready to merge or split groups.
 </summary>
 <param name="bSendMessage"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecopath.cEcopathMergeSplitGroups.SendMessage(System.String,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Send a message.
 </summary>
 <param name="strMessage"></param>
 <param name="bSuccess"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecopath.cEcopathSplitGroup.CanSplitGroups(System.Int32,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the current Ecopath model is ready to split a group to a 
 candidate name.
 </summary>
 <param name="iGroup">The one-based index of the group to split.</param>
 <param name="strName">A suggested name for the split groups.</param>
 <returns>True if the proposed split can be executed.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecopath.cEcopathSplitGroup.SplitGroup(System.Int32,System.String,System.Single,System.Single,EwECore.cTaxon[])">
 -------------------------------------------------------------------
 <summary>
 Split a non-stanza group.
 </summary>
 <param name="iSrc"><see cref="P:EwECore.cCoreInputOutputBase.Index">index</see> of 
 the group split.</param>
 <param name="strNameSplit">Name for the new split group.</param>
 <param name="sBiomassSource"></param>
 <param name="sBiomassSplit"></param>
 <param name="taxaSplit"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecopath.cEcopathSplitGroup.SplitLifeStage(System.Int32,System.String,System.Int32)">
 <summary>
 Split a stanza life stage.
 </summary>
 <param name="iSrc"></param>
 <param name="strNameSplit"></param>
 <param name="iStartAgeSplit"></param>
 <returns></returns>
</member>
<member name="T:EwECore.cEcopathResultWriter">
 ---------------------------------------------------------------------------
 <summary>
 Writer to save Ecopath estimates to a CSV file.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcopathResultWriter.#ctor(EwECore.cCore)">
 -----------------------------------------------------------------------
 <summary>
 Constructor.
 </summary>
 <param name="core">The core instance to write result for.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcopathResultWriter.WriteResults(System.String)">
 -----------------------------------------------------------------------
 <summary>
 Write Ecopath estimates to a CSV file.
 </summary>
 <param name="strFN">The target file name.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcopathModelFromEcosim">
 <summary>
 Class to export an Ecosim time step to a new Ecopath model.
 </summary>
</member>
<member name="F:EwECore.cEcopathModelFromEcosim.m_core">
 <summary>The core that holds the source model.</summary>
</member>
<member name="F:EwECore.cEcopathModelFromEcosim.m_msgStatus">
 <summary>Progress of a run.</summary>
</member>
<member name="T:EwECore.cEcopathModelFromEcosim.eBACalcTypes">
 -----------------------------------------------------------------------
 <summary>
 Enumerated type indicating how BA should be calculated.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cEcopathModelFromEcosim.eBACalcTypes.FromEcosimYearsAverage">
 <summary>BA is calculated from an average over X number of years.</summary>
</member>
<member name="F:EwECore.cEcopathModelFromEcosim.eBACalcTypes.FromEcosimStart">
 <summary>BA is taken as the change in group biomass over the Ecosim run.</summary>
</member>
<member name="F:EwECore.cEcopathModelFromEcosim.eBACalcTypes.FromEcopath">
 <summary>BA kept at Ecopath base value.</summary>
</member>
<member name="F:EwECore.cEcopathModelFromEcosim.eBACalcTypes.SetToZero">
 <summary>BA is set to 0.</summary>
</member>
<member name="M:EwECore.cEcopathModelFromEcosim.SaveModel(System.String,System.String,System.Int32,EwECore.cEcopathModelFromEcosim.eBACalcTypes,System.Int32,System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Create a model from the current Ecosim time step.
 </summary>
 <param name="strFileName">Full path to the model file to create.</param>
 <param name="strModelName">Name of the model to create.</param>
 <param name="iTime">The Ecosim time step to populate data from.</param>
 <param name="BACalculation"><see cref="T:EwECore.cEcopathModelFromEcosim.eBACalcTypes">Flag</see> 
 stating how BA should be calculated.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcopathModelFromEcosim.CreateItems(EwECore.cCore)">
 -----------------------------------------------------------------------
 <summary>
 Create groups, fleets and stanza configurations in the new Ecopath model.
 </summary>
 <param name="coreNew">The core that holds the new Ecopath model.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcopathModelFromEcosim.PopulateItems(EwECore.cCore,System.Int32,EwECore.cEcopathModelFromEcosim.eBACalcTypes,System.Int32,System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Populate groups, fleets and stanza configurations in a new Ecopath model.
 </summary>
 <param name="coreNew">The core that holds the new model.</param>
 <param name="iTime">The Ecosim time step to populate data from.</param>
 <param name="BACalculation"><see cref="T:EwECore.cEcopathModelFromEcosim.eBACalcTypes">Flag</see> 
 stating how BA should be calculated.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcopathModelFromEcosim.SetStartEndTimesteps(System.Int32,EwECore.cEcopathModelFromEcosim.eBACalcTypes,System.Int32,System.Int32@,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Determine the start and end time steps for computing BA.
 </summary>
 <param name="iTime"></param>
 <param name="BACalculation"></param>
 <param name="nYearsAverage"></param>
 <param name="iStartIndex"></param>
 <param name="nBAtimesteps"></param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcosimArena.Prey">
 <summary>
 One-based prey index.
 </summary>
</member>
<member name="P:EwECore.cEcosimArena.Pred">
 <summary>
 One-based pred index.
 </summary>
</member>
<member name="M:EwECore.cEcosimArenaManager.Load">
 <summary>
 Reloads and rebuilds the arena data structures.
 </summary>
</member>
<member name="M:EwECore.cEcosimArenaManager.ResetArenas(System.Int32)">
 <summary>
 Resets the arenas for a given prey. If Prey is 0 or less, all arenas will be reset.
 </summary>
 <param name="iPrey">The i prey.</param>
</member>
<member name="P:EwECore.cEcosimArenaManager.Groups(System.Boolean)">
 <summary>
 Get prey indices for which there are multiple arenas
 </summary>
</member>
<member name="M:EwECore.cEcosimEnviroInputData.Update">
 <inheritdocs cref="M:EwECore.IEnviroInputData.Update"/>
</member>
<member name="M:EwECore.cEcosimEnviroInputData.setManager(EwECore.IEnvironmentalResponseManager)">
 <inheritdocs cref="M:EwECore.IEnviroInputData.SetManager(EwECore.IEnvironmentalResponseManager)"/>
</member>
<member name="M:EwECore.cEcosimEnviroInputData.Histogram">
 <inheritdocs cref="M:EwECore.IEnviroInputData.Histogram"/>
</member>
<member name="P:EwECore.cEcosimEnviroInputData.Max">
 <inheritdocs cref="P:EwECore.IEnviroInputData.Max"/>
</member>
<member name="P:EwECore.cEcosimEnviroInputData.Mean">
 <inheritdocs cref="P:EwECore.IEnviroInputData.Mean"/>
</member>
<member name="P:EwECore.cEcosimEnviroInputData.Min">
 <inheritdocs cref="P:EwECore.IEnviroInputData.Min"/>
</member>
<member name="P:EwECore.cEcosimEnviroInputData.Layer">
 <summary>
 The basemap layer that provides the data that this map operates onto.
 </summary>
</member>
<member name="P:EwECore.cEcosimEnviroInputData.ResponseIndexForGroup(System.Int32,System.Boolean)">
 <summary>
 Sets or gets the response(mediation) function index to use from the current cMediationDataStructures load during the Init(...)
 </summary>
 <param name="GrpIndex">One-based group index for the response function.</param>
 <value></value>
 <returns></returns>
 <remarks>The Index of the ResponseFunction must exist in the underlying mediation data.</remarks>
</member>
<member name="M:EwECore.cEcosimEnviroInputData.ResponseFunction(System.Int32,System.Int32,System.Int32)">
 <summary>
 Return a value for a cell in the input map base on the the response function for a group.
 </summary>
 <param name="igrp">Group index for the response function</param>
 <param name="iMapRow">Row of the input map</param>
 <param name="iMapCol">Col of the input map</param>
 <returns>Y = F(x)</returns>
</member>
<member name="P:EwECore.cEcosimFleetInput.EPower">
 <summary>
 Effort response pow.fi
 </summary>
</member>
<member name="P:EwECore.cEcosimFleetInput.CapDepreciateRate">
 <summary>
 capital depreciation rate
 </summary>
</member>
<member name="P:EwECore.cEcosimFleetInput.PcapBase">
 <summary>
 Initial effort / capital capacity
 </summary>
</member>
<member name="P:EwECore.cEcosimFleetInput.CapBaseGrowth">
 <summary>
 initial capitial growth
 </summary>
</member>
<member name="P:EwECore.cEcosimFleetInput.EffortConversionFactor">
 <summary>
 Effort conversion factor used for summing maps into a single Effort value
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.cEcosimGroupInput">
 <summary>
 Inputs for EcoSim for a single group.
 </summary>
 <remarks>
 This class wraps the inputs to EcoSim for one group into a single object.
 </remarks>
</member>
<member name="M:EwECore.cEcosimGroupInput.ResetStatusFlags(System.Boolean)">
 <summary>
 Public access to set the status flags by calling each validator.
 </summary>
 <returns>True is successful. False otherwise</returns>
 <remarks>This is the default behaviour for Input objects. An output will need to override this to provide its own implementation.</remarks>
</member>
<member name="P:EwECore.cEcosimGroupInput.VulMult(System.Int32)">
 <summary>
 Vulnerability multiplier vulnerability of this group to predation
 </summary>
 <param name="iPredGroup">Group index of the predator group</param>
 <value></value>
</member>
<member name="T:EwECore.cEcosimGroupOutput">
 <summary>
 Results from EcoSim for a single group.
 </summary>
 <remarks>
 This class wraps results from EcoSim for one group into a single object.
 </remarks>
</member>
<member name="P:EwECore.cEcosimGroupOutput.isCatchAggregated">
 <summary>
 Is the catch on this group aggregated across all the fleets.
 </summary>
</member>
<member name="P:EwECore.cEcosimGroupOutput.Biomass(System.Int32)">
 <summary>
 Get the Biomass at a given time step.
 </summary>
 <param name="iTime">Time index</param>
 <value>Single</value>
</member>
<member name="P:EwECore.cEcosimGroupOutput.TL(System.Int32)">
 <summary>
 Get the Trophic Level of a group at a given time step.
 </summary>
</member>
<member name="P:EwECore.cEcosimGroupOutput.BiomassRel(System.Int32)">
 <summary>
 Get the biomass relative to the base biomass at a given time step.
 </summary>
 <param name="iTime">Time index</param>
 <value>Single</value>
 <remarks> B(t)/B(0)</remarks>
</member>
<member name="P:EwECore.cEcosimGroupOutput.Catch(System.Int32)">
 <summary>
 Get the total catch on this group at a given time step.
 </summary>
 <param name="iTime">Time index</param>
 <remarks>Sum of catch across all fleets for this group</remarks>
</member>
<member name="P:EwECore.cEcosimGroupOutput.CatchRel(System.Int32)">
 <summary>
 Get the total catch relative to the Ecopath inputs catch on this group at a given time step.
 </summary>
 <param name="iTime">Time index</param>
</member>
<member name="P:EwECore.cEcosimGroupOutput.CatchByFleet(System.Int32,System.Int32)">
 <summary>
 Total Catch by fleet for this group at a given time step. Includes discards the died.
 </summary>
 <param name="iFleetIndex">Fleet index</param>
 <param name="iTime">Time index</param>
</member>
<member name="P:EwECore.cEcosimGroupOutput.FishingMortByFleet(System.Int32,System.Int32)">
 <summary>
 Fishing Mortality by Fleet at a given time step.
 </summary>
 <param name="iFleetIndex">Fleet inded</param>
 <param name="iTime">Time index</param>
 <value>Single</value>
 <returns>Fishing Mortality on this group caused by a fleet</returns>
</member>
<member name="P:EwECore.cEcosimGroupOutput.ConsumpBiomass(System.Int32)">
 <summary>
 Get consumption over biomass at a given time step.
 </summary>
 <param name="iTime"></param>
</member>
<member name="P:EwECore.cEcosimGroupOutput.FeedingTime(System.Int32)">
 <summary>
 Get the feeding time at a given time step.
 </summary>
 <param name="iTime"></param>
</member>
<member name="P:EwECore.cEcosimGroupOutput.PredMort(System.Int32)">
 <summary>
 Get the predation mortality at a given time step.
 </summary>
 <param name="iTime"></param>
</member>
<member name="P:EwECore.cEcosimGroupOutput.FishMort(System.Int32)">
 <summary>
 Get the Predation mortality + fishing mortality at a given time step.
 </summary>
</member>
<member name="P:EwECore.cEcosimGroupOutput.TotalMort(System.Int32)">
 <summary>
 Sum of all mortality for this group at a given time step.
 </summary>
 <param name="iTime">Time index</param>
 <remarks>Fishing mort + Predation mort + Natural mort</remarks>
</member>
<member name="P:EwECore.cEcosimGroupOutput.ProdConsump(System.Int32)">
 <summary>
 Production / Consumption (Ecopath GE) at a given time step.
 </summary>
</member>
<member name="P:EwECore.cEcosimGroupOutput.MortVPred(System.Int32)">
 <summary>
  Predation / total loss rate  [Eatenof(i) / (loss(i) / B(i))]
 </summary>
</member>
<member name="P:EwECore.cEcosimGroupOutput.MortVFishing(System.Int32)">
 <summary>
 Catch / total loss rate [B(i) * F(i) / (loss(i) / b(i))
 </summary>
</member>
<member name="P:EwECore.cEcosimGroupOutput.PreyPercentage(System.Int32,System.Int32)">
 <summary>
 Percentage of a group this group consumes
 </summary>
 <param name="iPreyGroup">Index of group that this group preys on</param>
 <param name="iTime">Ecosim time step</param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cEcosimGroupOutput.Predation(System.Int32,System.Int32)">
 <summary>
 Predation rate on this prey by a pred 
 </summary>
 <param name="iPredGroup">Index of group that predates on this group</param>
 <param name="iTime">Ecosim time step</param>
 <value></value>
 <returns>Predation on this group</returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.cEcoSimModelParameters">
 <summary>
 Contains the Model Run Parameters for EcoSim
 i.e. 'NumberYears' number of years to run the model for
 </summary>
 <remarks>
 This class is used by the interface to get/set parameters for running the EcoSim model
 For Group related info see cEcoSimGroupInfo
 </remarks>
</member>
<member name="P:EwECore.cEcoSimModelParameters.NumberYears">
 <summary>
 Number of years to run the EcoSim model for
 </summary>
 <value></value>
 <remarks>
 This is a property so that when the user changes NumberYears this class can tell the EcoSim model to redim 
 all variables that are dimensioned by time
 </remarks>
</member>
<member name="P:EwECore.cEcoSimModelParameters.ForagingTimeLowerLimit">
 -----------------------------------------------------------------------
 <summary>
 Compatibility flag. EwE up to version 6.4 limited the foraging time to 0.1, 
 but this turned some ecosystems volaltile. The limit has been changed to
 a min of 0.01. 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoSimModelParameters.StartSummaryTime">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcosimDatastructures.SumStart">start</see>
 of the first summary period (in years) for this model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoSimModelParameters.EndSummaryTime">
 -----------------------------------------------------------------------
 <summary>
 Start of the last summary period (in years).
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcoSimModelParameters.NumberSummaryTimeSteps">
 -----------------------------------------------------------------------
 <summary>
 Number to time steps to summarize the data over.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcosimOutput.FIB(System.Int32)">
 <summary>
 Get/set the fishing in-balance (FIB) index.
 </summary>
</member>
<member name="T:EwECore.cEcoSimResults">
 <summary>
 Results from the last completed EcoSim Time Step
 Passed out by EcoSim via the EcoSimTimeStepDelegate(iTime,Results) delegate
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcoSimResults.nGroups">
 <summary>
 Number of groups
 </summary>
</member>
<member name="F:EwECore.cEcoSimResults.nFleets">
 <summary>
 Number of fleets
 </summary>
</member>
<member name="F:EwECore.cEcoSimResults.CurrentT">
 <summary>
 Timestep counter at the currrent model timestep
 </summary>
</member>
<member name="F:EwECore.cEcoSimResults.Biomass">
 <summary>
 Relative biomass by group
 </summary>
</member>
<member name="F:EwECore.cEcoSimResults.Effort">
 <summary>
 Fishing effort used for the current timestep by fleet
 </summary>
</member>
<member name="F:EwECore.cEcoSimResults.Yield">
 <summary>
 Catch by group relative to Ecopath base
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcoSimResults.BCatch">
 <summary>Catch {group x fleet}</summary>
</member>
<member name="F:EwECore.cEcoSimResults.Landings">
 <summary>Landings discards not included {group x fleet}</summary>
</member>
<member name="F:EwECore.cEcoSimResults.nStanza">
 <summary>
 Number of multi stanza groups. Used by BStock(nStanza,nMaxLifeStages) and BRecruitment(nStanza,nMaxLifeStages)
 </summary>
</member>
<member name="F:EwECore.cEcoSimResults.nMaxLifeStages">
 <summary>
 Maximum number of life stages across all the multi stanza groups
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcoSimResults.BStock">
 <summary>
 Relative biomass of stock, BStock(nStanza,nMaxLifeStages)
 </summary>
 <remarks>X axis in EwE5 sr plot</remarks>
</member>
<member name="F:EwECore.cEcoSimResults.BRecruitment">
 <summary>
 Relative biomass of recruits, BRecruitment(nStanza,nMaxLifeStages)
 </summary>
 <remarks>Y axis in EwE5 sr plot</remarks>
</member>
<member name="P:EwECore.cEcoSimResults.hasSRData(System.Int32,System.Int32)">
 <summary>
 Is there stock recruitment data for Multi stanza , Life stage pair
 </summary>
 <remarks></remarks>
</member>
<member name="P:EwECore.cEcoSimResults.hasSRData">
 <summary>
 Is there stock recruitment data for this time step
 </summary>
</member>
<member name="M:EwECore.cEcoSimResults.Clone">
 <summary>
 Return a deep copy of the current results.
 </summary>
 <returns></returns>
</member>
<member name="T:EwECore.cEcoSimScenario">
 <summary>
 Class to encapsulate scenario parameters for a single scenario in the cEcoSim Model
 </summary>
</member>
<member name="T:EwECore.cEcosimDatastructures">
 <summary>
 This class wraps the underlying EcoSim data structures
 </summary>
 <remarks>
 
 </remarks>
</member>
<member name="T:EwECore.cEcosimDatastructures.eEcosimResults">
 <summary>
 Enumerated index to the type of Ecosim Data saved over time
 </summary>
 <remarks>This is the index to the first element in ResultsOverTime(eEcosimResults, igroup, itime) that specifies the data being saved at each time step across groups</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.BioMedData">
 <summary>
 Mediation data for Biomass Mediation
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.PriceMedData">
 <summary>
 Mediation data for Price Elasticity (mediation function)
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.CapEnvResData">
 <summary>
 Capacity Environmental Response functions (mediation functions). 
 Shape to convert input value to capacity value e.g. CapacityMap(irow,icol) = F(InputMap(irow,icol)) (capacity as a function of X)
 </summary>
 <remarks>
 Generical Environmental Response functions are used to convert an enviromental input value to a value used in either Ecosim(time series input data) or Ecospace(spatial/temporal data)
 For Capacity Environmental Response functions are used in conjunction with a cEnviroInputMap(of T) to populate the Capacity map
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.bTimestepOutput">
 <summary>
 Boolean flag set by the calling routine to tell Ecosim if it should process the output timestep data cEcoSImModel.ProcessTimeStep()
 </summary>
 <remarks>If true then Ecosim will compute all output data including data over time and call the timestep delegate. If false then it will run in a silent mode and not compute output data  </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.GroupDBID">
 <summary>Array of Ecosim group database IDs.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.FleetDBID">
 <summary>Array of Ecosim fleet database IDs.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.nGroups">
 <summary>Total number of groups in the model.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.nGear">
 <summary>Total number of fleets in the model.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.NumYears">
 <summary>Duration of simulation (years).</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.NumStepsPerYear">
 <summary>Number of steps per year.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.StepSize">
 <summary>Integration steps (per year).</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.SorWt">
 <summary>Relaxation parameter [0,1].</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.Discount">
 <summary>Discount rate (% per year).</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.EquilibriumStepSize">
 <summary>Equilibrium step size.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.EquilScaleMax">
 <summary>Equilibrium max. fishing rate (relative).</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.NutBaseFreeProp">
 <summary>Base proportion of free nutrients.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.EnvRespFuncIndex">
 <summary>
 Index of the Response function that has been applied to this EnviromentalDrive and Group (driver,group)
 </summary>
 <remarks>EnvRespFuncIndex(1,2) = 10 means that the tenth response function has been applied to the first environmental driver and second group</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.MortalityRespFuncIndex">
 <summary>
 Index of the Mortality Response function that has been applied to this EnviromentalDrive and Group (driver,group)
 </summary>
 <remarks>MortalityRespFuncIndex(1,2) = 10 means that the tenth response function has been applied to the first environmental driver and second group</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.NutBiom">
 <summary>Sum of biomass across all groups </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.NutTot">
 <summary>Total nutrient bound in system </summary>
 <remarks>NutTot = NutBiom / (1 - NutBaseFreeProp)</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.NutFree">
 <summary>Nutrient free in the enviroment  </summary>
 <remarks>NutFree = NutTot - NutBiom</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.VulMult">
 <summary>
 Vulnerability multiplier of a prey to a predator
 </summary>
 <remarks>VulMult(iPrey,iPred) User entered value to increase the vulnerability of a prey</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.bAlwaysCalcTLc">
 <summary>Toggle to enable TL calculations during searches. Normally this 
 is not enabled because TL info is not used by searches.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.TLC">
 <summary>TL of catch (x time)</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.FIB">
 <summary>FIB index (x time)</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.TLSim">
 <summary>TL based on Ecosim diets (x group)</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.CatchSim">
 <summary>Total catch per timestep</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.Kemptons">
 <summary>Kemptons's Q</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ShannonDiversity">
 <summary>Shannon Diversity Index</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.VulnerabilityPredator">
 <summary> Max vulnerability across all prey for this predator VulnerabilityPredator(pred) = max(VulMult(prey,pred))</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.NutForceNumber">
 <summary>Nutrient loading forcing function number. This is an index in the tval() array.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.NutPBmax">
 <summary>Max PB/(Base PB) due to nutrient concent.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.SystemRecovery">
 <summary>System recovery (+/- %).</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.FtimeMax">
 <summary>Max relative feeding time.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.FtimeAdjust">
 <summary>Feeding time adjustment rate (0-1).</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.MoPred">
 <summary>Fraction of other mortality.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.mo">
 <summary>
 Mortality other computed as (1-ee)*pb
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.RiskTime">
 <summary>Predation effect on feeding time (0-1).</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.QmQo">
 <summary>Density-dependant catchability QMax/Qo.</summary> 
</member>
<member name="F:EwECore.cEcosimDatastructures.CmCo">
 <summary>QBmax/QBo for handling time > 1.</summary> 
</member>
<member name="F:EwECore.cEcosimDatastructures.SwitchPower">
 <summary>Switching power parameter (0-2).</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.Consumption">
 <summary>
 Base consumption on a prey by a predator 
 </summary>
 <remarks>
 Consumption(iPrey,iPred) 
 computed in <see cref="M:EwECore.Ecosim.cEcosimModel.CalcEatenOfBy">Ecosim.CalcEatenOfBy</see>
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.NoIntegrate">
 <summary>
 Flag for doing integration in rk4 for each group
 </summary>
 <remarks>This can be set to one of several value:
 value = i "NoIntegrate(1) = 1" do the normal integration,
 value = 0 "NoIntegrate(1) = 0" no integration,
 value less than 0 "NoIntegrate(2)= -2" this is a stanza group the final integration is handled by SplitUpdate()
 this was also used to tell if a group is part of a splitpool 
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.Fish1">
 <summary>Mortality due to fishing FCatch(group) / EcopathBiomass(group) by group </summary>
 <remarks>Initialized in SetupSimVariables() </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.FishTime">
 <summary>
 Mortality due to fishing at the current time step
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.FishRateMax">
 <summary>Max catch rate ??? </summary>
 <remarks>stored in database defaults set in SetUpSimVariables(). This may not be neccessary in EwE6 it was only used for scaling in EwE5</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.FishMGear">
 <summary>
 Fishing mortality by Fleet, Group
 </summary>
 <remarks> Array element FishMGear(nFleets + 1,iGroup) will contain the sum across all fleets and should be the same as Fish1()</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.FishRateNo">
 <summary>
 Fishing mortality over time for each group.
 </summary>
 <remarks>Fishing mortality by group-time. It's default value is Fish1() Catch/Biomass set in DefaultFishMortalityRates(). 
 It is used as a forcing/driving value over time. It is used to compute FishTime() </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.GroupFishRateNoDBID">
 <summary>Fish rate no shape DBID per group</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.FishRateGear">
 <summary>
 Fishing Effort multiplier relative to Ecopath base, by Fleet, Time.
 </summary>
 <remarks>Zero removes all fishing, one sets fishing effort to Ecopath value, two would double the fishing mortality for all groups fished by this fleet.
  Used to scale the FishRateNo() for all the groups fished by a fleet.</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.Ftime">
 <summary>
 Feeding Time scaling value
 </summary>
 <remarks>Default value = one set in InitialState. Computed at the end of each time step in rk4()</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.DetritusOut">
 <summary>
 Base rate of Detritus accumulation ([accumulated detritus biomass]/[biomass t=0]) calculated in <see cref="M:EwECore.Ecosim.cEcosimModel.SimDetritusMT(System.Int32,System.Single[],System.Single[0:,0:],System.Single[],System.Single[],System.Single[]@,System.Single[]@)">SimDetritusMT</see>.
 </summary>
 <remarks>
 Calculated during the initialization of Ecosim by <see cref="M:EwECore.Ecosim.cEcosimModel.Init(System.Boolean)">Init()</see> and <see cref="M:EwECore.Ecosim.cEcosimModel.SetTimeSteps">SetTimeSteps()</see>. 
 Used by both Ecosim and Ecospace. When Ecospace initializes it calls Ecosim.Init() this sets DetritusOut() to the base Ecosim values. 
 This avoids any issues with setting the initial biomass or threading races. 
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.pbbiomass">
 <summary>pbbiomass = (PB * MaxPB / PB - 1) / B </summary>
 <remarks>For primary producers only. Will be zero for all other groups</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.relQ">
 <summary>
  Catch Rate at Ecopath base. Include all catch even discards that survive. set in SetRelativeCatchabilities
 </summary>
 <remarks>EcopathCatch / StartBiomass</remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.MPred">
 <summary>
  Mortalily rate due to predation by Link
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.GroupDetritus">
 <summary>
  Detritus from all sources by group
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.PaddP">
 <summary>
  PaddP is proportion of predation rate that is additive
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.MoPredBase">
 <summary>
 Predation mortality rate at base
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.PhHalf">
 <summary>
 1 / PaddP - 1
 </summary>
</member>
<member name="T:EwECore.cEcosimDatastructures.ShapeParameters">
 <summary>
 Structure to contain all settings that wrap the primitive defining the contents of a forcing or time shape
 </summary>
 <remarks>
 jb April-07-2006 replaced Shapes() with ShapeParameters
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.ShapeParameters.ShapeFunctionType">
 <summary>
 The <seealso cref="T:EwEUtils.Core.eShapeFunctionType">primite function</seealso> 
 that defined the content of a forcing or time shape.
 </summary>
 <remarks>
 0 must be supplied if there is no underlying primitive function. 
 Note that plug-ins can add their own ShapeFunctionType, values will
 not be restricted to <see cref="T:EwEUtils.Core.eShapeFunctionType"/>.
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.ShapeParameters.ShapeFunctionParams">
 <summary>
 The parameters for <see cref="F:EwECore.cEcosimDatastructures.ShapeParameters.ShapeFunctionType"/>.
 </summary>
</member>
<member name="P:EwECore.cEcosimDatastructures.ShapeParameters.nShapeFunctionParams">
 <summary>
 The number of parameters for <see cref="F:EwECore.cEcosimDatastructures.ShapeParameters.ShapeFunctionType"/>.
 </summary>
</member>
<member name="P:EwECore.cEcosimDatastructures.ShapeParameters.ShapeFunctionParam(System.Int32)">
 <summary>
 Get/set the value of a <see cref="F:EwECore.cEcosimDatastructures.ShapeParameters.ShapeFunctionParams"/>.
 </summary>
 <param name="iParam">Zero-based param index</param>
</member>
<member name="F:EwECore.cEcosimDatastructures.ForcingDBIDs">
 <summary>
 Unique database IDs for forcing shapes.
 </summary>
 <remarks>
 Because Time(Forcing) and EggProd shapes are stored in the same arrays and this is for both shape types
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.inlinks">
 <summary>Total number of links/flow between groups</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ilink">
 <summary>iPrey for inlinks</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.jlink">
 <summary>iPred for inlinks</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.pbm">
 <summary> Max PB = PBmax*PB </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.nSumTimeSteps">
 <summary>Number of timesteps in the summary data</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsOverTime">
 <summary>
 Model results over time (number of variables x groups x time)
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.PredPreyResultsOverTime">
 <summary>pred/prey(2) x groups x groups x time</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsAvgByPreyPred">
 <summary>pred/prey(2) x groups x groups</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsSumCatchByGroupGear">
 <summary>Group x fleets x time.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsSumCatchByGear">
 <summary>fleets x time</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsLandings">
 <summary>Landings by Group, Fleet</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsTimeDiscardsGroupGear">
 <summary>Total discards by Group, fleets, time.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsTimeDiscardsMortGroupGear">
 <summary>Discards that suffered mortality by Group, fleets, time.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsTimeDiscardsSurvivedGroupGear">
 <summary>Discards that survived by Group, fleets, time.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsTimeLandingsGroupGear">
 <summary>
 Landing by Group, Fleet, Time.
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ResultsSumFMortByGroupGear">
 <summary>
 Fishing mortality by time
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ProfitByFleet">
 <summary>Summarized Profit from results </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.EmploymentValueByFleet">
 <summary>Summarized Jobs from results </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.NumStep">
 <summary>Number of time steps for averaging results.</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.SumStart">
 <summary>Start time of the first and second summary data period. In Years </summary>
 <remarks> Data is summarized over two time periods set by SumStart(0) and SumStart(1). The number of time steps to summarize over is set in NumStep.
 Defaults are set in redimTimeVaraibles().
 Used in cEcospace.summarySetTimeStep() to set the index to store the summary data in. The first or second summary period.
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.ArenaNo">
 <summary>The arena number (prey, pred)</summary>
 <example> [proportion of consumption by pred in arena] = PeatArena(ArenaNo(iprey,ipred),ipred) </example>
</member>
<member name="F:EwECore.cEcosimDatastructures.IlinkSet">
 <summary> i (prey) index of foraging arena with positive feeding on prey i by predator k </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.JlinkSet">
 <summary> j (pred) index of foraging arena having positive feeding on i by predator k </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.KlinkSet">
 <summary> index of predator whose peatarea for arena i,j is stored in list element </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.PeatArena">
 <summary> diet proportions by foraging arena from/to database </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.ArenaLink">
 <summary> Arena Number for a pred, prey link when PeatArena(ArenaNo(iprey,jpred),jpred)>0. This pred eats from this arena.  </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.Qlink">
 <summary> total ecopath base consumption by trophic link </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.NlinksSet">
 <summary> note number of arena foraging links set from or to database </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.SS">
 <summary>
 Sum of squares fit to reference data
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.SSGroup">
 <summary>
 Sum of squares by group
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.bMultiThreaded">
 <summary>
 Boolean flag that tells Ecosim to run on it's own thread.
 </summary>
 <remarks>
 True if Ecosim is running on a seperate thread. False otherwise. 
 This flag can only be set from code and it not available from the scientific interface. 
 The scientific interface is suppose to be thread safe but plugin interfaces may NOT be. 
 Once the Ecosim run has completed bMultiThreaded will be set to False. bMultiThreaded will only be true for one run.
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.StepsPerMonth">
 <summary>
 Number of sub timesteps Ecosim will run per month 
 </summary>
 <remarks>
 Monthly timesteps in Ecosim can be divided into multiple sub timesteps. The number of sub timesteps in set via the cEcosimDatastructures.StepsPerMonth which has a default of one.  
 This allows a plugin to run Ecosim with more then 12 timesteps per year. Once Ecosim has run it will reset cEcosimDatastructures.StepsPerMonth to its default value of one 
 all subsequent runs of Ecosim will be on a monthly timestep unless cEcosimDatastructures.StepsPerMonth has been reset before the next run. 
 This funtionality is only available via code and has no user interface. 
 User interface objects e.g. cCore.EcosimGroupOutputs are NOT update for sub timesteps and will not be updated until the end of the monthly timestep. 
 </remarks>
</member>
<member name="F:EwECore.cEcosimDatastructures.PropLandedTime">
 <summary>Proportion of regulated landings (by gear group) for the current time step</summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.Propdiscardtime">
 <summary>
 Proportion of the total catch that suffered mortality for the current time step (by gear group). Does not include discards that survived.
 Initialized in cEcosim.InitPropLanded() Propdiscardtime(iflt, igrp) = PropDiscard(iflt, igrp) * PropDiscardMort(iflt, igrp)
 </summary>
</member>
<member name="F:EwECore.cEcosimDatastructures.EffortConversionFactor">
 <summary>
 Unit conversion factor for fishing effort 
 </summary>
 <remarks>Used to sum effort into a single output map</remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.RedimArenaLinks">
 <summary>
 Redims the arenas.
 </summary>
 <remarks>
 Make sure both <see cref="F:EwECore.cEcosimDatastructures.Narena"/> and <see cref="F:EwECore.cEcosimDatastructures.NlinksSet"/> are properly initialized prior to redimensioning arenas
 </remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.ValidateSharedArenas">
 <summary>
 Validate and patch up shared arena use.
 </summary>
 <returns>True if arenas were valid; false if corrections were needed.</returns>
 <remarks>
 This stage is needed to ensure that shared arenas, as read by a datasource,
 are in sync with the consumption links in Ecosim.
 </remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.clearFishForced">
 <summary>
 Set the FisForced() array to False of all groups
 </summary>
 <remarks>This is called before loading forcing data (DoDatValCalulations())to clear out the old flags. 
  EwE5 never clears this flag once set to True when forcing data is loaded this stays set and FishRateNo() is reset via a the interface, strange?</remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.InitForcingShapes">
 <summary>
 Initialize the forcing shapes to a value of one. This will overwrite  an existing values
 </summary>
 <remarks>In EwE5 this is called RedimZMax(). It gets called before the shapes are populated. </remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.ResizeForcingShapes(System.Int32,System.Int32@)">
 <summary>
 Resize the Forcing Shape Data to the new size this can be bigger or smaller then the existing number of elements
 </summary>
 <param name="newNumberOfShapes">The new size of the arrays</param>
 <param name="newEcoSimIndex">optional Index of the last array element this is used for an AddShape functionality</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.ResizeMediationShapes(System.Int32,System.Int32@)">
 <summary>
 Resize the Forcing Shape Data to the new size this can be bigger or smaller then the existing number of elements
 </summary>
 <param name="newNumberOfShapes">The new size of the arrays</param>
 <param name="newEcoSimIndex">optional Index of the last array element this is used for an AddShape functionality</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.DimForcingShapes">
 <summary>
 Dimension all forcing function variables by ForcingPoints (number of forcing points/simulation years) and or ForcingShapes (number of forcing shapes)
 </summary>
 <remarks>Call this any time the number of ForcingPoints(this is the number of simulation years * 12 months) or ForcingShapes changes.
 This gets called to added or remove a forcing function from the EcoSim data. The data will have to be repopulated after this has been run. 
 Core.CoreForcingFunctionUpdater() will update all EcoSim Forcing and Mediation function data with the data held currently in memory by the Shape Managers. 
 </remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.redimTime(System.Int32,System.Int32,System.Boolean)">
 <summary>
 Resize and set time data to the new number of years set by a user
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.SetDefaultParameters">
 <summary>
 Hardwire some default values
 </summary>
 <remarks>
 In the original code this was called "EcoSimFileOpen()"
 </remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.DefaultSummaryPeriods">
 <summary>
 Set the summary time periods to using the Ecoism run length (NTime)
 </summary>
</member>
<member name="M:EwECore.cEcosimDatastructures.redimFishingRates(System.Int32)">
 <summary>
 Redim preserve the Fishing Rate and Fish Mort arrays to the number of time steps the model will run for.
 </summary>
</member>
<member name="M:EwECore.cEcosimDatastructures.dimResults(System.Int32)">
 <summary>
 Dimension the results over time arrays i.e. ResultsOverTime(),ResultsSumCatchByGroupGear()
 </summary>
 <remarks>This only gets called if/when the model is actually run <see>cEcoSimModel.RunModelValue</see>
 This reduces the memory needs of ecosim so that it can be initialized but not run. 
 Ecosim is initialized but not run when Ecospace is loaded.
 This would also allow for a flag to turn of the saving of results over time.
 </remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.eraseResults">
 <summary>
 Erase all the results arrays 
 </summary>
</member>
<member name="P:EwECore.cEcosimDatastructures.NTimes">
 <summary>
 Number of time steps to run the model for
 </summary>
 <remarks>[number of years]*[number of time steps per year]</remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.DefaultFishingRates">
 <summary>
 Set default fish rate values
 </summary>
 <remarks>
 <para>This gets called after the data has been dimensioned and before it is populated by the database</para>
 <para>The interface may call this as well to reset fish rate values.</para>
 </remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.setEffortToDefault(System.Collections.Generic.List{System.Int32})">
 <summary>
 Set effort to default value for all the fleets in list
 </summary>
 <param name="lstFleetsIndexesToSet">List for fleets to set to default</param>
 <remarks>Call when an effort timeseries has been unloaded to reset effort to default values</remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.DefaultFishMortalityRates">
 <summary>
 Set default fish mortality values
 </summary>
 <remarks>
 <para>This gets called after the data has been dimensioned and before it is populated by the database</para>
 <para>The interface may call this as well to reset fish rate values.</para>
 </remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.CopyTo(EwECore.cEcosimDatastructures@)">
 <summary>
 Deep-copy Ecosim data structures to another instance.
 </summary>
 <param name="d">The instance to copy to.</param>
</member>
<member name="M:EwECore.cEcosimDatastructures.summaryTimeIndex(System.Int32)">
 <summary>
 Get the time index for the Summary Start and End Time
 </summary>
 <param name="iSummary">0 = Start Summary Time Period. 1 = End Summary Time Period</param>
 <returns>iTime Index</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.SummarizeResults(System.Single[0:,0:],System.Single[])">
 <summary>
 Computed summarized results for Ecosim
 </summary>
 <param name="EcopathCost">Ecopath precentage of Cost CostPct(3,nfleets)</param>
 <param name="JobMultiplier">Jobs multiplier from the Search data</param>
 <remarks>Computes ProfitByFleet(nFleets), JobsByFleet(nfleets), Prey Pred consumption</remarks>
</member>
<member name="M:EwECore.cEcosimDatastructures.onEcosimRunCompleted">
 <summary>
 An Ecosim run has completed
 </summary>
 <remarks>Sets StepsPerMonth and bMultiThreaded to default values</remarks>
</member>
<member name="T:EwECore.Ecosim.eEcoSimCompletedReason">
 <summary>
 Reason the model completed
 </summary>
</member>
<member name="F:EwECore.Ecosim.eEcoSimCompletedReason.Completed">
 <summary>The model finished the run successfully</summary>
</member>
<member name="F:EwECore.Ecosim.eEcoSimCompletedReason.UserInterupted">
 <summary>User stopped model from completing</summary>
</member>
<member name="F:EwECore.Ecosim.eEcoSimCompletedReason.ErrorEncountered">
 <summary>Error while model was running</summary>
</member>
<member name="T:EwECore.Ecosim.EcoSimTimeStepDelegate">
 <summary>
 Definition of Time Step Delegate use for notification of an EcoSim time step
 </summary>
 <param name="iTime">Index of the completed time step (1 to n time steps)</param>
 <param name="data">cEcoSimResults object containing results from this time step (iTime)</param>
 <remarks>This delegate will get called at the end of each time step to pass data out of the model</remarks>
</member>
<member name="T:EwECore.Ecosim.cEcosimModel">
 <summary>
 Class to encapsulate EcoSim Model
 </summary>
</member>
<member name="F:EwECore.Ecosim.cEcosimModel.DatSumZ">
 <summary>sumof log(observed/predicted) (by time series)</summary>
</member>
<member name="F:EwECore.Ecosim.cEcosimModel.DatSumZ2">
 <summary>sumof log(observed/predicted)^2 (by time series)</summary>
</member>
<member name="F:EwECore.Ecosim.cEcosimModel.DatNobs">
 <summary>number of observation</summary>
</member>
<member name="F:EwECore.Ecosim.cEcosimModel.ResetPred">
 <summary>Boolean flag use to force biomass with the data in m_refData.PoolForceBB(ngroup,nyears). </summary>
 <remarks>True means Biomass is forced with data from m_refData.PoolForceBB(). False biomass is computed.
 ResetPred() is set immediately before the rk4() is run and immediately after. 
 The flag is used by setPred() which is called be Derivt() and SplitUpdate() which are called by the rk4()</remarks>
</member>
<member name="F:EwECore.Ecosim.cEcosimModel.bStopRunning">
 <summary>
 Public flag to stop the currently running EcoSim model
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.Ecosim.cEcosimModel.BBAvg">
 <summary> Biomass averaged from sub timesteps to a monthly value</summary>
</member>
<member name="F:EwECore.Ecosim.cEcosimModel.LossAvg">
 <summary> Loss averaged from sub timesteps to a monthly value</summary>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.Init(System.Boolean)">
 <summary>
 Call initialization routines for EcoSim
 </summary>
 <returns>True if successful. False otherwise</returns>
 <remarks>
 Was called StartEcoSim() in original code
 </remarks>
</member>
<member name="P:EwECore.Ecosim.cEcosimModel.Messages">
 -----------------------------------------------------------------------
 <summary>
 Exposes the MessagePublisher instance so that the core can add message handlers
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecosim.cEcosimModel.EcopathData">
 <summary>
 Get or Set the EcoPath data
 </summary>
 <value></value>
 <remarks>
 This is used to initialize EcoSim with the last EcoPath estimated parameters
 See cModelInterface.InitEcoSim(...)
 </remarks>
</member>
<member name="P:EwECore.Ecosim.cEcosimModel.EcosimData">
 <summary>
 Get or Set the Ecosim data
 </summary>
 <value></value>
 <remarks>
 </remarks>
</member>
<member name="P:EwECore.Ecosim.cEcosimModel.TimeStepDelegate">
 <summary>
 Get/set the time step delegate for Ecosim to call at each time step
 </summary>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.InitPropLanded">
 <summary>
 Init Propdiscardtime(fleets,groups) and PropLandedTime(fleets, groups) to Ecopath landing and discards
 </summary>
 <remarks>This must be call before <see cref="M:EwECore.Ecosim.cEcosimModel.Init(System.Boolean)">Ecosim.Init(Boolean)</see> 
 so Propdiscardtime() and PropLandedTime() can be used to init <see cref="F:EwECore.cEcosimDatastructures.FishRateNo">FishRateNo()</see> (fishing mortality)</remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.ScaleVulnerabilitiesToTL(System.Single,System.Single)">
 <summary>
 Scale vulnerabilities to trophic level
 </summary>
 <param name="Lower">The lower vulnerability to scale from.</param>
 <param name="Upper">The upport vulnerability to scale to.</param>
 <returns>True if successful.</returns>
 <remarks>
 Ported from EwE5 frmSim1.cmdfTL_Click
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.RunModelValue(System.Int32,System.Double@,System.Double@,System.Double@,System.Double@,System.Double[]@,System.Int32)">
 <summary>
 Overloaded RunModelValue() provided so that older search code will run without a major over haul
 </summary>
 <param name="NumberOfYears"></param>
 <param name="totval"></param>
 <param name="Employ"></param>
 <param name="manvalue"></param>
 <param name="ecovalue"></param>
 <param name="frateopt"></param>
 <param name="nopt"></param>
 <remarks>Hopefully this is temporary once all the existing code is changed to use RunModelValue(NumberOfYears,frateopt(),nopt) this can be removed</remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.CalcCatchForSearch(System.Int32,System.Int32,System.Int32,System.Single[],System.Single[],System.Single[])">
 <summary>
 Calculates Ecosim yearly catch, sum of catch for year, for search data.
 </summary>
 <param name="iTime">Current time step</param>
 <param name="iYear">Current year</param>
 <param name="iMonth">Current month in year (12)</param>
 <param name="biomass">Biomass of current time step</param>
 <param name="Fgear">Effort set by searches</param>
 <param name="QYear">Catchability increase for year</param>
 <remarks>Uses <see cref="M:EwECore.Ecosim.cEcosimModel.CalcLandings(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)"> CalcCatch to compute catch.</see></remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.CalcLandings(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
 <summary>
 Return Landings for the Group, Fleet, Biomass, Effort, Q, QYear and Density dependant catchability
 </summary>
 <param name="iGrp">Group index</param>
 <param name="iFlt">Fleet index</param>
 <param name="B">Biomass of the group</param>
 <param name="Effort">Effort</param>
 <param name="Qrate">Catchability rate</param>
 <param name="QYear">Catchability multiplier used for increase in catchability over time (QYear())</param>
 <returns>Landings</returns>
 <remarks>Qmult() must be set via <see cref="M:EwECore.Ecosim.cEcosimModel.setDenDepCatchMult(System.Single[])">setDenDepCatchMult</see> before calling CalcCatch(). </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.CalcValueFromLandings(System.Int32,System.Int32)">
 <summary>
 Calculate the Price Elasticity value of the landings from Ecosim Results for a time step
 </summary>
 <param name="iTime"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.LandingsValue(System.Int32,System.Int32,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Return the Ecopath market value (off vessel price) as a function of 
 time series forcing and any applied price elasticity function.
 </summary>
 <param name="iGrp">One-based index of the affected group. This is the group 
 that the price function is applied to in the application grid.</param>
 <param name="iFlt">One-based index of the affected fleet. This is the fleet 
 that the price function is applied to in the application grid.</param>
 <param name="iTime">Cummulative time step.</param>
 <param name="iYear">Current year.</param>
 <returns>([Ecopath market value] or [OffVesselPrice time series]) * [PES multiplier]</returns>
 <remarks>Any <see cref="F:EwECore.eTimeSeriesType.OffVesselPrice">absolute landings time series</see> are 
 used if provided. if not, Ecopath base off-vessel prices are multiplied with 
 <see cref="F:EwECore.eTimeSeriesType.OffVesselPriceRel">relative time series</see> 
 and applied price elasticity functions.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.EffortCost(System.Int32,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Return the Ecopath effort cost value as a function of time series forcing.
 </summary>
 <param name="iFlt">One-based index of the fleet.</param>
 <param name="iTime">Cummulative time step.</param>
 <param name="iYear">Current year.</param>
 <returns>Ecopath effort cost value as a function of time series forcing</returns>
 <remarks>Any <see cref="F:EwECore.eTimeSeriesType.EffortCost">absolute landings time series</see> are 
 used if provided. if not, Ecopath base effort costs are multiplied with 
 <see cref="F:EwECore.eTimeSeriesType.EffortCostRel">relative time series</see>.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SailCost(System.Int32,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Return the Ecopath sail cost value as a function of time series forcing.
 </summary>
 <param name="iFlt">One-based index of the fleet.</param>
 <param name="iTime">Cummulative time step.</param>
 <param name="iYear">Current year.</param>
 <returns>Ecopath sail cost value as a function of time series forcing</returns>
 <remarks>Any <see cref="F:EwECore.eTimeSeriesType.SailCost">absolute landings time series</see> are 
 used if provided. if not, Ecopath base sail costs are multiplied with 
 <see cref="F:EwECore.eTimeSeriesType.SailCostRel">relative time series</see>.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.FixedCost(System.Int32,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Return the Ecopath fixed cost value as a function of time series forcing.
 </summary>
 <param name="iFlt">One-based index of the fleet.</param>
 <param name="iTime">Cummulative time step.</param>
 <param name="iYear">Current year.</param>
 <returns>Ecopath fixed cost value as a function of time series forcing</returns>
 <remarks>Any <see cref="F:EwECore.eTimeSeriesType.FixedCost">absolute landings time series</see> are 
 used if provided. if not, Ecopath base fixed costs are multiplied with 
 <see cref="F:EwECore.eTimeSeriesType.FixedCost">relative time series</see>.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.setFishTime(System.Int32,System.Int32,System.Single[])">
 <summary>
 Set FishTime(Group) total fishing mortality used by Ecosim in Deritt()
 </summary>
 <param name="iTime">Index of the current time step.</param>
  <param name="iYear">Index of the current year.</param>
 <remarks>
  If runnning in a regular mode (no search) then use FishRateNo(ngroups,ntime) * density dependant catchability, if forced catch or F (fishing mortality rates) then don't use density dependance.
  If in a FP search use FishYear() to set FishRateNo(ngroups,ntime)  and FishTime(ngroups). 
  MSE sets FishRateNo(ngroups,ntime) in <see cref="M:EwECore.MSE.cMSE.DoRegulations(System.Single[],System.Single[],System.Single[],System.Single[],System.Int32,System.Int32,System.Int32)">DoRegulations()</see>
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SetFGear(System.Single[]@,System.Single[],System.Single[]@,System.Int32)">
 <summary>
 Set fishing effort to a value supplied by a search routine or FishRateGear()
 </summary>
 <param name="Fgear">Fishing Effort</param>
 <param name="RelFopt"></param>
 <param name="iYear"></param>
 <remarks>At the start of a year Fgear(nFleets)(fishing effort) is set to a user entered value FishRateGear(nFleets,nTime) or effort set by a search. 
 If in a search Fgear() is then used to compute FishYear() which is used to set FishRateNo() and compute FishTime(). FishTime() is what is used by Derivt() Confused yet???? </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.avgMonthlyStanzaVars(System.Single[],System.Boolean)">
 <summary>
 Average biomass and loss from sub timesteps(more then one per month) to monthly values 
 </summary>
 <param name="BB"></param>
 <param name="UpdateStanza"></param>
 <remarks>Multistanza calculations SplitUpdate() need to run on a monthly timestep using the monthly average values for biomass and loss</remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SplitUpdate(System.Single[],System.Single[],System.Single[])">
 <summary>
 Updates numbers, weight, and biomass for multiple stanza species
 </summary>
 <param name="BAvg">Average biomass over all the sub timesteps</param>
 <param name="LossAvg">Average loss over all the sub timesteps</param>
 <param name="BtoUpdate">Biomass array to update to multistanza biomass</param>
 <remarks>BAvg and LossAvg are temporary variables any changes to them will be lost. To update biomass use BtoUpdate(ngroups)</remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.debugTestRelQFishMGear">
 <summary>
 For Debugging. Test that relQ() and FishMGear have been set correctly. 
 </summary>
 <remarks>Only called during initialization of Ecosim. At other times during the run relQ() and FishMGear() may not be equal.</remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.Run">
 <summary>
 Public Function to run the Ecosim Model 
 </summary>
 <returns></returns>
 <remarks>
 The EcoSim model must be Initialized before this is call.
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.setSearchOff">
 <summary>
 Turn off all searches
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.FireOnTimeStep(System.Int32)">
 <summary>
 Wraps all the calls to the TimeStep delegate into on method
 </summary>
 <param name="iTime"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.MarshallTimeStep(System.Object)">
 <summary>
 Marshall the TimeStep delegate call onto the thread that created Ecosim
 </summary>
 <param name="Args"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.PopulateResults(System.Int32,System.Int32,System.Int32)">
 <summary>
 Processes the current EcoSim Time step
 </summary>
 <param name="iTime">Current time step</param>
 <remarks>
 This is call by RunModelValue() at the end of a time step.
 To package/summarize data from the model into an cEcoSimResults object which 
 then gets passed to the Delegate function (mProgressDelegate) that was initialized in InitMultiThreading(...)
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.checkOKToRun">
 <summary>
 Encapsulate all logic that validates the model before it is run.
 </summary>
 <returns >
 A message to indicate that something is wrong and the run cannot continue, or 
 nothing if Ecosim is ready to run.
 </returns>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.AccumulateDataInfo(System.Int32,System.Int32,System.Int32,System.Single[],System.Single[]@)">
 <summary>
 Compute stats used for SS for this Ecosim year
 </summary>
 <param name="iyear">Ecosim year index, zero based, first year = zero</param>
 <param name="BB">Ecosim predicted biomass for this year</param>
 <param name="loss">Ecosim predicted loss for this year</param>
 <remarks>Called once a year in the middle of the year </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SetTimeSteps">
 <summary>
 Sets DeltaT and StepsPerMonth.
 Turns off numeric integration if rate of change to great [loss]/[Ecopath base biomass]
 </summary>
 <remarks>This makes a call to Derivt() to compute loss() for numeric integration checking </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SimDetritusMT(System.Int32,System.Single[],System.Single[0:,0:],System.Single[],System.Single[],System.Single[]@,System.Single[]@)">
 <summary>
 Thread safe version of SimDetritus
 </summary>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.InitializeMedFunctions">
 <summary>
 called from InitialState to set up trophic mediation functions
 and determine which ones are active for a simulation
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.Set_pbm_pbbiomass">
 <summary>
 Sets pbbiomass() and clears pbm() for Primary Producer groups
 </summary>
 <remarks>
 pbm() and pbbiomass() must be zero for groups that are not primary producers. 
 This prevents Derivt() from calculating primary production on non PP groups.  
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.InitStanza">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 call calculatestanzaparameters whenever going from ecopath to ecosim
 to set up multistanza initial state variables
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.CalculateStanzaParameters(System.Int32,System.Int32,System.Int32,System.Int32[]@,System.Int32[]@,System.Single[]@,System.Single@,System.Single[]@,System.Int32@,System.Single[]@,System.Single@,System.Single[]@)">
 <summary>
 Compute initial state stanza variables for a split group argument #1 isp
 
 </summary>
 <param name="isp">index of the split group to compute variables for</param>
 <param name="Stanza">Number of Stanzas (life stages) in this split group Nstanza(isp)</param>
 <param name="BaseStanza">index of the base stanza for this split group this is the i of the oldest (base) stanza/life stage for this split group</param>
 <param name="first">index of Age1 for all stanzas in this split group</param>
 <param name="Second">Output Variable index of Age2 for all stanzas in this split group</param>
 <param name="Bio">biomass for the base stanza of this split group. 
 During initialization of ecosim this is the Ecopath biomass for this base stanza.</param>
 <param name="vbK">Growth curvature parameter for the base stanza of the split group</param>
 <param name="Z">mortality of each stanza for this split. Ecopath PB</param>
 <param name="BaseCB">Consumption Biomass (Ecopath QB) for the base stanza of this split group BaseStanzaCB(isp)</param>
 <param name="cb">Consumption Biomass (Ecopath QB) for each stanza in this split group </param>
 <param name="BaB">BiomassAccumulation over Biomass biomass acumulation rate for this split group</param>
 <param name="Bat">Output variable BaB * Bio(iStanza)</param>
 <remarks>calculates 
 vBM(isp), SplitWage(isp, MaxYears),WWa(isp, MaxYears), AhatStanza(isp),RhatStanza(isp),RzeroS(isp),SplitNo(isp, Age)
</remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.EstimateVulnerabilities(System.Int32,System.Single@,System.Single@,System.Single[])">
 <summary>
 
 </summary>
 <param name="iGroup"></param>
 <param name="PotGrowth">Potential growth values to use.</param>
 <param name="FWMax">FWMax values to use</param>
 <param name="estimated">Two-dimensional array with estmated vulnerabilities.</param>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.CalcEatenOfBy">
 <summary>
 Initialization routine for: Eatenby, Eatenof, Consumption, inlinks, ilinks and jlinks
 </summary>
 <remarks>Eatenby, Eatenof and Consumption are initialized as a function of StartBiomass QB and DC</remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SetDefaultParameters">
 <summary>
 Hardwire some default values for the EcoSim Model
 </summary>
 <remarks>
 In the original code this was called "EcoSimFileOpen()"
 this has been restructured to just set Defaults for the EcoSim model
 defaults that belong to eEcoSimDatastructures are set in cEcoSimDatastructures.SetDefaultParameters()
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SetStartBiomass">
 <summary>
 Init Biomass to Ecopath values during initialization
 </summary>
 <remarks>Warning: <see cref="M:EwECore.MSE.cMSEDataStructures.setDefaultRegValues"> </see>cMSEDataStructures.setDefaultRegValues() uses Ecopath.B() instead of Ecosim.StartBiomass() because of initialization order. </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.ApplyAVmodifiers(System.Int32,System.Single@,System.Single@,System.Single@,System.Int32,System.Int32,System.Boolean)">
 <summary>
 Apply the multi function forcing or mediation functions to 'a'(searchrate) and 'v'(vulnerability)
 </summary>
 <param name="A">SearchRate to modify</param>
 <param name="v">Vulnerability to modify</param>
 <param name="i">i Index</param>
 <param name="j">j Index</param>
 <param name="UseTime">True if the modifier is over time (Ecosim), False if not (Ecospace) </param>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SetBaseFFromGear">
 <summary>
 Populates FishRateNo(group,time) with base fishing mortality rates for all time steps
 </summary>
 <remarks>
 Fishing mortality rates include fishing effort, density dependent catchability and discard mortality rates. 
 Called to initialize <see cref="F:EwECore.cEcosimDatastructures.FishRateNo">FishRateNo(group,time)</see> or when effort changes.
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.setDenDepCatchMult(System.Single[])">
 <summary>
 Sets Qmult(ngroups) (density dependent catchability multiplier) to biomass(ngroups) 
 </summary>
 <param name="BB">Biomass use to set Qmult()</param>
 <remarks>Called at each time step to set density dependent catchability to biomass at the current time step</remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SetFtimeFromGear(System.Single[],System.Int32,System.Single[],System.Boolean)">
 <summary>
 Populates FishTime(ngroups) and FishRateNo(group,time) with fishing mortality rates for a timestep from the current Biomass, Effort
 </summary>
 <param name="BB">Biomass(group).</param>
 <param name="t">Timestep.</param>
 <param name="PredEffort">Boolean flag True if effort being predicted, False otherwise.</param>
 <remarks>
 FishTime() is the total fishing mortality used by Ecosim in Deritt
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.SetFtimeFromGear(System.Int32,System.Single[],System.Boolean)">
 <summary>
 Populates FishTime(ngroups) and FishRateNo(group,time) with fishing mortality rates for a timestep from the current Biomass, Effort
 </summary>
 <param name="t">Timestep.</param>
 <param name="PredEffort">Boolean flag True if effort being predicted, False otherwise.</param>
 <remarks>
 FishTime() is the total fishing mortality used by Ecosim in Deritt
 </remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.settval(System.Int32)">
 <summary>
 Populate cEcosimDataStructures.tval(nForcingShapes) with forcing function values/multiplers for this time step
 </summary>
 <param name="iTime">Cumulative monthly index of this timestep</param>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.InitializeCapacity">
 <summary>
 Initialize fishing capacities by fleet for dynamic effort model, and set effort dynamic response parameters for simulation
 </summary>
</member>
<member name="M:EwECore.Ecosim.cEcosimModel.getSummaryResults(System.Int32)">
 <summary>
 Summarize data for the Summary Results grid. This is data that is summarized into two time windows defined by the user.
 </summary>
 <param name="iTime"></param>
 <remarks></remarks>
</member>
<member name="T:EwECore.Ecosim.cEcosimResultWriter">
 ---------------------------------------------------------------------------
 <summary>
 Helper class to write Ecosim results to a .csv file.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecosim.cEcosimResultWriter.WriteResults(System.String,EwECore.Ecosim.cEcosimResultWriter.eResultTypes[],EwEUtils.Core.TriState,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Save all available Ecosim results to a .csv file.
 </summary>
 <param name="strPath">The path to write to. If not specified, output is
 written to <see cref="P:EwECore.cCore.OutputPath">the core output path</see>.</param>
 <param name="results">The results to write, or nothing to write all results.</param>
 <param name="tsMonthly">Flag stating how values are aggragated. Possible
 values are:
 <list type="bullet">
 <item><term><see cref="F:EwEUtils.Core.TriState.True"/></term><description>Values are only written as monthly values.</description></item>
 <item><term><see cref="F:EwEUtils.Core.TriState.False"/></term><description>Values are only written as annual values.</description></item>
 <item><term><see cref="F:EwEUtils.Core.TriState.UseDefault"/></term><description>Values are written as both annual and monthly values.</description></item>
 </list>
 </param>
 <param name="bQuiet">Flag stating if messages must be suppressed.</param>
 <returns>True if saved successfully.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecosim.cEcosimResultWriter.WriteResultsDirect(System.String,EwECore.Ecosim.cEcosimResultWriter.eResultTypes[],EwEUtils.Core.TriState,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Save all available Ecosim results to a .csv file without checking if
 Ecosim has ran. Dangerous!
 </summary>
 <param name="strPath">The path to write to. If not specified, output is
 written to <see cref="P:EwECore.cCore.OutputPath">the core output path</see>.</param>
 <param name="results">The results to write, or nothing to write all results.</param>
 <param name="tsMonthly">Flag stating how values are aggragated. Possible
 values are:
 <list type="bullet">
 <item><term><see cref="F:EwEUtils.Core.TriState.True"/></term><description>Values are only written as monthly values.</description></item>
 <item><term><see cref="F:EwEUtils.Core.TriState.False"/></term><description>Values are only written as annual values.</description></item>
 <item><term><see cref="F:EwEUtils.Core.TriState.UseDefault"/></term><description>Values are written as both annual and monthly values.</description></item>
 </list>
 </param>
 <param name="bQuiet">Flag stating if messages must be suppressed.</param>
 <returns>True if saved successfully.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Ecosim.cEcosimResultWriter.SaveDataToFile(System.String,System.Boolean,System.Single[0:,0:,0:],System.String,System.String)">
 <summary>
 Save data by timestep, fleet, group 
 </summary>
 <param name="strFileName"></param>
 <param name="bAnnual"></param>
 <param name="data"></param>
 <param name="strModelDetails"></param>
 <param name="strDataDetails"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.Ecosim.cEcosimResultWriter.GetModelDetails">
 -----------------------------------------------------------------------
 <summary>
 Get default model details to report in output file.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Ecosim.cEcosimResultWriter.ShowGroupNames">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether the Ecosim result writer should show group names (true) 
 or indexes (false). False by default.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cMediationDataStructures.MediationShapes">
 <summary>Number of functions</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.NMedPoints">
 <summary>number of points per mediation function</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.Medpoints">
 <summary>mediation function points(iMedPt, iMedFn)</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.MedWeights">
 <summary>defines biomass weights for med X (iMedGrp, iShp)</summary>
 <remarks>Only used for non-landings mediations</remarks>
</member>
<member name="F:EwECore.cMediationDataStructures.NMedXused">
 <summary>number of biomasses (mediation weights) in an iMediation</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.IMedUsed">
 <summary>groups used in med function X IMedUsed(nGroups + nGear, MediationShapes)</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.MedXbase">
 <summary>ecopath base value of med function(iMedFn)</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.MedYbase">
 <summary>value of med function at ecopath base(iMedFn)</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.MedIsUsed">
 <summary>true if med function iMediation is used(iMedFn)</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.MedVal">
 <summary>current value of mediation function(iMedFn)</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.IMedBase">
 <summary>IMedBase() index of ecopath base biomass vertical line on mediation plot</summary>
 <remarks>integer X positions for ecopath base X</remarks>
</member>
<member name="F:EwECore.cMediationDataStructures.MediationTitles">
 <summary>titles of mediation shapes</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.MediationDBIDs">
 <summary>Unique ID from the Database for each function(iMedFN)</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.MediationShapeParams">
 <summary>parameters that where used to create a curve from the Database Table and Fields i.e. EcoSimShapes.YZero</summary>
</member>
<member name="F:EwECore.cMediationDataStructures.MedPriceWeights">
 <summary>defines biomass weights for med XMedGFWeights(iMedGrp, iMedFlt, iShp)</summary>
 <remarks>Only used for Landings mediations</remarks>
</member>
<member name="F:EwECore.cMediationDataStructures.IMedFltUsed">
 <summary>?</summary>
</member>
<member name="M:EwECore.cMediationDataStructures.SetMedFunctions(System.Single[],System.Single[0:,0:],System.Int32,System.Single[])">
 <summary>
 Populate the meditation multiplier MedVal() passed in as an argument using the current Biomass and/or Effort
 </summary>
 <param name="Biom">Biomass at the current time step</param>
 <param name="FishingEffort">Fishing Effort by fleet, time</param>
 <param name="iEffortTime">Time index in the effort array to get effort for the time step </param>
 <param name="MedVal">Mediation function multiplier calculated by this call</param>
 <remarks>
 Populates MedVal() argument with the current multiplier. This does NOT populate cMediationDataStructures.MedVal() with the values.
 Used by Ecospace threads so each thread can set MedVal() independently.
   </remarks>
</member>
<member name="M:EwECore.cMediationDataStructures.getMedValue(System.Int32,System.Single)">
 <summary>
 Compute the mediation value for a mediation shape index(iMedShapeIndex) from an input value on the X axis (Xvalue) 
 </summary>
 <param name="iMedShapeIndex">Index of the mediation shape to use</param>
 <param name="Xvalue">Value on the X axis to compute the mediation value for</param>
 <returns>Value(Y) on the mediation shape for the input(X)</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cMediationDataStructures.SetMedFunctions(System.Single[],System.Single[0:,0:],System.Int32)">
 <summary>
 Set Mediation function multiplier in <see cref="F:EwECore.cMediationDataStructures.MedVal"> cMediationDataStructures.MedVal()</see> for the current Biomass and/or Effort
 </summary>
 <param name="Biom">Biomass at the current time step</param>
 <param name="FishingEffort">Fishing Effort by fleet, time</param>
 <param name="iEffortTime">Time index in the effort array to get effort for the time step </param>
 <remarks>
 Called be Ecosim to set the mediation function multiplier in cMediationDataStructures.
 SetMedFunctions(...) has overloaded function definition so it can be called by both Ecosim and on multiple threads from Ecospace.
 </remarks>
</member>
<member name="M:EwECore.cMediationDataStructures.SetPriceMedFunctions(System.Single[0:,0:])">
 <summary>
 Set MedVal() for the applied price elasticity function to the annual catch at the current time step
 </summary>
 <param name="LandingsGroupFleet">Catch by group, fleet</param>
 <remarks>Price mediation function are initialized to Ecopath base values which are annual. 
 This means that the catch must also be the Ecopath annual catch.
  </remarks>
</member>
<member name="M:EwECore.cMediationDataStructures.getPESMult(System.Int32,System.Int32)">
 <summary>
 Return the Price Elasticity of Supply multiplier for a Group Fleet
 </summary>
 <param name="iGroup"></param>
 <param name="iFleet"></param>
 <returns>Returns only the PES multiplier</returns>
 <remarks>Value = cEcopathDataStructures.Market(Fleet,Group) * getPESMult(Group,Fleet)</remarks>
</member>
<member name="P:EwECore.cEcospaceFleetInput.EffectivePower">
 <summary>
 Get/set the effort concentration factor for this fleet.
 </summary>
 <returns></returns>
</member>
<member name="P:EwECore.cEcospaceFleetInput.HabitatFishery(System.Int32)">
 <summary>
 Get/set whether this fleet is allowed to fish in a given habitat
 </summary>
 <param name="iHabitat"></param>
</member>
<member name="P:EwECore.cEcospaceFleetInput.MPAFishery(System.Int32)">
 <summary>
 Get/set whether a fleet is allowed to fish in an mpa
 </summary>
 <value>
   <c>true</c> if [mpa fishery]; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:EwECore.cEcospaceGroupInput.CapacityCalculationType">
 -----------------------------------------------------------------------
 <summary>
 Set the <see cref="T:EwEUtils.Core.eEcospaceCapacityCalType">inputs</see> that Ecospace uses to calculate capacity.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceGroupInput.MVel">
 <summary>Base dispersal</summary>
</member>
<member name="P:EwECore.cEcospaceGroupInput.RelMoveBad">
 <summary>Relative dispersal in bad habitat</summary>
</member>
<member name="P:EwECore.cEcospaceGroupInput.RelVulBad">
 <summary>Relative vulnerability in bad habitat</summary>
</member>
<member name="P:EwECore.cEcospaceGroupInput.PreferredHabitat(System.Int32)">
 <summary>
 Get/set the fraction that a group can use a habitat.
 </summary>
 <param name="iHabitat">One-based haitat index.</param>
</member>
<member name="P:EwECore.cEcospaceGroupInput.KMoveFitness">
 <summary>Relative vulnerability in bad habitat</summary>
</member>
<member name="P:EwECore.cEcospaceGroupInput.FTarget">
 <summary>
 Fishing Mortality Target for effort distribution penalty
 </summary>
</member>
<member name="T:EwECore.cEcospaceGroupOutput">
 <summary>
 Results, over all the time steps, at the end of an ecospace model run
 </summary>
</member>
<member name="T:EwECore.cEcospaceImportExportASCIIData">
 -----------------------------------------------------------------------
 <summary>
 Helper class for importing and exporting data from ASCII grid files
 directly to and from Ecospace, without GIS intervention.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cEcospaceImportExportASCIIData.m_buffer">
 <summary>
 Cell sequence number to value
 </summary>
</member>
<member name="M:EwECore.cEcospaceImportExportASCIIData.#ctor(EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Construct a new instance of this class.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceImportExportASCIIData.Value(System.Int32,System.Int32,System.String)">
 -------------------------------------------------------------------
 <summary>
 Get/set a value in this class.
 </summary>
 <param name="iRow">One-based row index to access a value for.</param>
 <param name="iCol">One-based column index to access a value for.</param>
 <param name="strField">This parameter is ignored by this class</param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceImportExportASCIIData.Value(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Get/set a value in this class.
 </summary>
 <param name="iCell">The one-based cell sequential index to access
 a value for.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportASCIIData.ToRaster(System.String)">
 -------------------------------------------------------------------
 <summary>
 Returns data in the form of a <see cref="T:EwEUtils.SpatialData.ISpatialRaster"/>>
 </summary>
 <returns>A raster.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportASCIIData.Seq(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Get a cell sequential number from a (row, col) pair.
 </summary>
 <param name="iRow">One-based row index to get a cell for.</param>
 <param name="iCol">One-based column index to get a cell for.</param>
 <returns>A one-based sequence number for a cell.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportASCIIData.NumCells">
 -------------------------------------------------------------------
 <summary>
 Returns the number of cells in this data.
 </summary>
 <returns>The number of cells in this data.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportASCIIData.ReadHeader(System.IO.StreamReader)">
 -------------------------------------------------------------------
 <summary>
 Read the ASCII header from a text reader.
 </summary>
 <param name="reader">The open stream reader to read from.</param>
 <returns>True if successful.</returns>
 <remarks>
 This method aims to read a complete raster header as described in
 http://resources.esri.com/help/9.3/arcgisengine/com_cpp/GP_ToolRef/Spatial_Analyst_Tools/esri_ascii_raster_format.htm.
 If any of the header fields is missing the method will fail.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportASCIIData.ReadBody(System.IO.StreamReader)">
 -------------------------------------------------------------------
 <summary>
 Read the ASCII body from a text reader.
 </summary>
 <param name="reader">The open stream reader to read from.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportASCIIData.WriteASCIIHeader(System.IO.StreamWriter)">
 -----------------------------------------------------------------------
 <summary>
 Write ESRI ASCII header block.
 </summary>
 <param name="writer">The <see cref="T:System.IO.StreamWriter"/> to write to.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportASCIIData.WriteASCIIBody(System.IO.StreamWriter)">
 -----------------------------------------------------------------------
 <summary>
 Write ESRI ASCII body block.
 </summary>
 <param name="writer">The <see cref="T:System.IO.StreamWriter"/> to write to.</param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceImportExportRaster">
 ---------------------------------------------------------------------------
 <summary>
 Foundation raster class for <see cref="T:EwEUtils.Core.IEcospaceImportExport">importing and
 exporting</see> external data without a true spatial engine.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.Cell(System.Int32,System.Int32,System.Double)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.Cell(System.Int32,System.Int32,System.Double)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.CellSize">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.CellSize"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.Max">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.Max"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.Mean">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.Mean"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.Min">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.Min"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.NoData">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.NoData"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.NumCols">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.NumCols"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.NumRows">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.NumRows"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.NumValueCells">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.NumValueCells"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.Save(System.String)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.Save(System.String)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.StandardDeviation">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.StandardDeviation"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.TopLeft">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.TopLeft"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.Dispose">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:System.IDisposable.Dispose"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.IsValid">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialRaster.IsValid"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportRaster.CalculateStats">
 -------------------------------------------------------------------
 <summary>
 Calculate the statistics of the data wrapped by this class.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceImportExportXYData">
 -----------------------------------------------------------------------
 <summary>
 Helper class for importing and exporting XY data from text files.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cEcospaceImportExportXYData.m_buffer">
 <summary>Buffer that holds the data to read or write.</summary>
 <remarks>To save on memory we allow the use of value callbacks per field as an alternative to the buffer.</remarks>
</member>
<member name="F:EwECore.cEcospaceImportExportXYData.m_astrFields">
 <summary>All defined data fields.</summary>
</member>
<member name="M:EwECore.cEcospaceImportExportXYData.#ctor(EwECore.cCore,System.String[])">
 -------------------------------------------------------------------
 <summary>
 Construct a new instance of this class.
 </summary>
 <param name="core">The EwE Core to itneract with.</param>
 <param name="astrFields">An optional array of field names.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportXYData.DuplicateFields">
 -----------------------------------------------------------------------
 <summary>
 Returns all duplicate <see cref="P:EwECore.cEcospaceImportExportXYData.Fields">field names defined in the import/export data</see>.
 </summary>
 <returns>An array with duplicate <see cref="P:EwECore.cEcospaceImportExportXYData.Fields">field names</see>.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportXYData.ReadXYFields(System.String,System.Char)">
 -----------------------------------------------------------------------
 <summary>
 Write data to a XY text file. The format of the file is
 'col,row[,<see cref="P:EwECore.cEcospaceImportExportXYData.Fields"/>]*', with a configurable the separator character.
 Field names encountered in the file can be found in <see cref="P:EwECore.cEcospaceImportExportXYData.Fields"/>.
 </summary>
 <param name="strFile">The name of the file to write.</param>
 <param name="separator">The separator character to use. By default, CSV
 values are separated by commas.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportXYData.ReadXYFile(System.String,System.String,System.String,System.Char)">
 -----------------------------------------------------------------------
 <summary>
 Write data to a XY text file. The format of the file is
 'col,row[,<see cref="P:EwECore.cEcospaceImportExportXYData.Fields"/>]*', with a configurable the separator character.
 Field names encountered in the file can be found in <see cref="P:EwECore.cEcospaceImportExportXYData.Fields"/>.
 </summary>
 <param name="strFile">The name of the file to write.</param>
 <param name="separator">The separator character to use. By default, CSV
 values are separated by commas.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportXYData.WriteXYFile(System.String,System.String,System.String,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Write data to a XY text file. The format of the file is
 '<paramref name="strColField"/>,<paramref name="strRowField"/>[,<see cref="P:EwECore.cEcospaceImportExportXYData.Fields"/>]*'
 </summary>
 <param name="strFile">The file to write to.</param>
 <param name="strColField">CSV header for 'col' field</param>
 <param name="strRowField">CSV header for 'row' field</param>
 <param name="bWaterCellsOnly">If true, only water cell data is written to the file.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceImportExportXYData.Fields">
 -------------------------------------------------------------------
 <summary>
 Get/set the fields that data is associated with.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceImportExportXYData.Value(System.Int32,System.Int32,System.String)">
 -------------------------------------------------------------------
 <summary>
 Get/set a value in this class.
 </summary>
 <param name="iRow">One-based row index to access a value for.</param>
 <param name="iCol">One-based column index to access a value for.</param>
 <param name="strField">Optional field to access a value for.</param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceImportExportXYData.Value(System.Int32,System.String)">
 -------------------------------------------------------------------
 <summary>
 Get/set a value in this class.
 </summary>
 <param name="iCell">The one-based cell sequential index to access
 a value for.</param>
 <param name="strField">Optional field to access a value for.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportXYData.Seq(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Get a cell sequential number from a (row, col) pair.
 </summary>
 <param name="iRow">One-based row index to get a cell for.</param>
 <param name="iCol">One-based column index to get a cell for.</param>
 <returns>A one-based sequence number for a cell.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportXYData.NumCells">
 -------------------------------------------------------------------
 <summary>
 Returns the number of cells in this data.
 </summary>
 <returns>The number of cells in this data.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportXYData.IsRowColImplicit">
 -------------------------------------------------------------------
 <summary>
 Returns true if no row and column fields have been defined.
 </summary>
 <returns>True if no row and column fields have been defined.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceImportExportXYData.ToRaster(System.String)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.IEcospaceImportExport.ToRaster(System.String)"/>.
 -------------------------------------------------------------------
</member>
<member name="F:EwECore.cEcospaceModelParameters.m_EcospaceResultsWriters">
 <summary>Available Ecospace result writers.</summary>
</member>
<member name="P:EwECore.cEcospaceModelParameters.NumberOfTimeStepsPerYear">
 -----------------------------------------------------------------------
 <summary>
 Get/set the number of time steps per year for this model. Internally,
 this value will be recalculated to the ratio of the time step size (years).
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.nRegions">
 -----------------------------------------------------------------------
 <summary>
 Get/set the number of regions for this scenario.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.nEffortZones">
 -----------------------------------------------------------------------
 <summary>
 Get/set the number of effort zones for this scenario.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.AdjustSpace">
 -----------------------------------------------------------------------
 <summary>
 Ecospace initialization biomass to Habitat adjusted or Ecopath base
 </summary>
 <remarks>True = Habitat adjusted, False = Ecopath base</remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.PredictEffort">
 -----------------------------------------------------------------------
 <summary>
 Get/set the  <see cref="F:EwECore.cEcospaceDataStructures.PredictEffort">PredictEffort</see> for this model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.StartSummaryTime">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcospaceDataStructures.SumStart">start</see>
 of the first summary period (in years) for this model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.EndSummaryTime">
 -----------------------------------------------------------------------
 <summary>
 Start of the last summary period (in years).
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.NumberSummaryTimeSteps">
 -----------------------------------------------------------------------
 <summary>
 Number to time steps to summarize the data over.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.nEffortDistThreads">
 <summary>
 Number of Effort distrubtion threads
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Not used by the Scientific Interface provided here so it can be set via code.</remarks>
</member>
<member name="P:EwECore.cEcospaceModelParameters.UseIBM">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether Ecospace should use its Individual Based Model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.UseNewMultiStanza">
 -----------------------------------------------------------------------
 <summary>
 Ecospace initialization biomass to Habitat adjusted or Ecopath base
 </summary>
 <remarks>True = Habitat adjusted, False = Ecopath base</remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.UseExact">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwEUtils.Core.eVarNameFlags.UseExact">UseExact</see> flag for this model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.UseAnnualOuput">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether data should be written as annual average values.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.AutosaveSelectedGroupsFleetsOnly">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether data should be written only for groups and fleets that 
 are selected.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.UseCoreOutputDirectory">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether Ecospace should save its data to the standard core output
 directory and scenario-dependent subdirectories. If false, data will be saved
 directly to the core output path ignoring the scenario-dependent subdirectory
 structures.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceModelParameters.EcospaceAreaOutputDir">
 <summary>
 User defined output directory for Ecospace Area Average results
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 Not used by the Scientific Interface. 
 This allows an external application, console app or plugin, to specify custom output directories for Ecospace.
 </remarks>
</member>
<member name="P:EwECore.cEcospaceModelParameters.EcospaceMapOutputDir">
 <summary>
 User defined output directory for Ecospace Map results
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 Not used by the Scientific Interface. 
 This allows an external application, console app or plugin, to specify custom output directories for Ecospace.
 </remarks>
</member>
<member name="P:EwECore.cEcospaceModelParameters.nResultWriters">
 -----------------------------------------------------------------------
 <summary>
 Get the number of available <see cref="T:EwEUtils.Core.IEcospaceResultsWriter">Ecospace result writers</see>.
 <seealso cref="M:EwECore.cEcospaceModelParameters.ResultWriter(System.Int32)"/>
 <seealso cref="T:EwEUtils.Core.IEcospaceResultsWriter"/>
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceModelParameters.ResultWriter(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns a <see cref="T:EwEUtils.Core.IEcospaceResultsWriter"/>.
 <seealso cref="P:EwECore.cEcospaceModelParameters.nResultWriters"/>
 <seealso cref="T:EwEUtils.Core.IEcospaceResultsWriter"/>
 </summary>
 <param name="iIndex">One-based index of the result writer to obtain.</param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceMPA">
 <summary>
 The definition of a Marine Protected Area in Ecospace.
 </summary>
 <seealso cref="T:EwECore.cCoreInputOutputBase" />
 <seealso cref="P:EwECore.cEcospaceBasemap.LayerMPA(System.Int32)"/>
</member>
<member name="P:EwECore.cEcospaceMPA.MPAMonth(System.Int32)">
 <summary>
 Get/set if an MPA is OPEN for fishing for a given month.
 </summary>
 <param name="iMonth">The one-based month index to access the 
 MPA open state for.</param>
</member>
<member name="P:EwECore.cEcospaceMPA.NumCells">
 -----------------------------------------------------------------------
 <summary>
 Get the number of cells in a MPA.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceMPA.IsActive(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the MPA is actually imposing fishing limitations on any fleet.
 </summary>
 <param name="iMonth">The month to check the MPA status for, or -1 if the assesment is to be made for an entire year.</param>
 <returns>True if the MPA is actually imposing fishing limitations on any fleet.</returns>
 <seealso cref="P:EwECore.cEcospaceFleetInput.MPAFishery(System.Int32)"/>
 <seealso cref="P:EwECore.cEcospaceMPA.IsOpen(System.Int32)"/>
 <seealso cref="P:EwECore.cEcospaceMPA.IsClosed(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceMPA.IsOpen(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether this MPA is open to fishing at a given month.
 </summary>
 <param name="iMonth">The month to check.</param>
 <returns>True if the MPA is not enforced, and fishing is allowed.</returns>
 <seealso cref="P:EwECore.cEcospaceFleetInput.MPAFishery(System.Int32)"/>
 <seealso cref="P:EwECore.cEcospaceMPA.IsActive(System.Int32)"/>
 <seealso cref="P:EwECore.cEcospaceMPA.IsClosed(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceMPA.IsClosed(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether this MPA is enforced, and imposes fishing limitations at a given month.
 </summary>
 <param name="iMonth">The month to check.</param>
 <returns>True if the MPA is enforced, and some or all fishing is now allowed.</returns>
 <seealso cref="P:EwECore.cEcospaceFleetInput.MPAFishery(System.Int32)"/>
 <seealso cref="P:EwECore.cEcospaceMPA.IsOpen(System.Int32)"/>
 <seealso cref="P:EwECore.cEcospaceMPA.IsActive(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceStats">
 <summary>
 Statistics for the last Ecospace run.
 </summary>
 <remarks>One object for all the groups and stats</remarks>
</member>
<member name="P:EwECore.cEcospaceStats.SS">
 <summary>
 SS sumed across all groups and variables
 </summary>
 <returns>sumof(log(observed/predicted))</returns>
</member>
<member name="P:EwECore.cEcospaceStats.SSGroup(System.Int32)">
 <summary>
 SS by group
 </summary>
 <param name="iGrp"></param>
 <returns>sumof(log(observed(igroup)/predicted(igroup))</returns>
</member>
<member name="T:EwECore.cEcospaceTimestep">
 <summary>
 Results of the current Ecospace time step
 </summary>
</member>
<member name="T:EwECore.cEcospaceTimestep.cTimestepLayer">
 <summary>
 Data wrapper for a (row, col) formatted Ecospace result.
 </summary>
</member>
<member name="T:EwECore.cEcospaceTimestep.cTimestepLayerGroup">
 <summary>
 Data wrapper for a (row, col, group) formatted Ecospace result.
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.cTimestepLayerGroup.Cell(System.Int32,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the value of a cell.
 </summary>
 <param name="iRow">Row index of the cell to access.</param>
 <param name="iCol">Column index of the cell to access.</param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceTimestep.cTimestepLayerFleet">
 <summary>
 Data wrapper for a (fleet, row, col) formatted Ecospace result.
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.cTimestepLayerFleet.Cell(System.Int32,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the value of a cell.
 </summary>
 <param name="iRow">Row index of the cell to access.</param>
 <param name="iCol">Column index of the cell to access.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceTimestep.iTimeStep">
 <summary>
 Cumulative timestep counter for the current results. 
 </summary>
 <remarks>
 This is the number of timesteps computed. It is not necessarily the number of months completed. 
 See <see cref="P:EwECore.cEcospaceTimestep.TimeStepinYears">TimeStepinYears</see> for the length of the run.
 </remarks>
</member>
<member name="P:EwECore.cEcospaceTimestep.TimeStepinYears">
 <summary>
 Lenght of the run in Years
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.InSpinUp">
 <summary>
 Returns whether Ecospace is running in spin-up mode.
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.BiomassMap">
 <summary>
 Biomass map dimensioned by Row, Col, Group
 </summary>
 <value></value>
 <returns></returns>
 <remarks>BiomassMap(row,col,group) and FishingEffortMap(fleet,row,col) are both map variables but they are not indexed the same</remarks>
</member>
<member name="P:EwECore.cEcospaceTimestep.CatchMap">
 <summary>
 Catch map dimensioned by Row, Col, Group
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.CatchFleetMap">
 <summary>
 Catch map dimensioned by Row, Col, Fleet
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.FishingEffortMap">
 <summary>
 Fishing Effort dimensioned by Fleet, Row, Col
 </summary>
 <value></value>
 <returns></returns>
 <remarks>BiomassMap(row,col,group) and FishingEffortMap(fleet,row,col) are both map variables but they are not indexed the same</remarks>
</member>
<member name="P:EwECore.cEcospaceTimestep.ContaminantMap">
 <summary>
 Contaminant concentrations dimensioned by Row, Col and Group
 </summary>
 <value></value>
 <returns>Matrix of contaminant concentrations at this timestep</returns>
</member>
<member name="P:EwECore.cEcospaceTimestep.DiscardMortalityMap">
 <summary>
 Discard mortality dimensioned by Row, Col and Group
 </summary>
 <value></value>
 <returns>Matrix of discard mortality at this timestep</returns>
</member>
<member name="P:EwECore.cEcospaceTimestep.KemptonsQMap">
 <summary>
 KemptonsQ map dimensioned by Row, Col
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.ShannonDiversityMap">
 <summary>
 Shannon diversity map dimensioned by Row, Col
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.Biomass(System.Single)">
 <summary>
 Average Biomass by group
 </summary>
 <param name="iGroup">Group index</param>
</member>
<member name="P:EwECore.cEcospaceTimestep.ConcMax(System.Single)">
 <summary>
 Max concentration of contaminant at the current time step by group
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.RelativeBiomass(System.Single)">
 <summary>
 Average Biomass relative to the base by group (Bt/B0)
 </summary>
 <param name="iGroup">Group index</param>
</member>
<member name="P:EwECore.cEcospaceTimestep.inRows">
 <summary>
 Number of rows in the map
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.inCols">
 <summary>
 Number of columns in the map
 </summary>
</member>
<member name="P:EwECore.cEcospaceTimestep.BiomassByRegion(System.Int32,System.Int32)">
 <summary>
 Average Biomass by group, region
 </summary>
 <param name="iGroup">Group index</param>
</member>
<member name="P:EwECore.cEcospaceTimestep.nPreyPredLinks">
 <summary>
 Number of Prey/Pred linkages
 </summary>
 <remarks>Number of links is set in cEcoSimModel.CalcEatenOfBy()</remarks>
</member>
<member name="P:EwECore.cEcospaceTimestep.iPreyIndex(System.Int32)">
 <summary>
 Gets the group index for the Prey of this Prey/Pred link
 </summary>
 <param name="iPreyPredIndex">Index of the Prey/Pred link (1 to nPreyPredLinks)</param>
 <remarks> </remarks>
</member>
<member name="P:EwECore.cEcospaceTimestep.iPredIndex(System.Int32)">
 <summary>
 Gets the group index for the Predator of this Prey/Pred link
 </summary>
 <param name="iPreyPredIndex">Index of the Prey/Pred link (1 to nPreyPredLinks)</param>
 <remarks> </remarks>
</member>
<member name="P:EwECore.cEcospaceTimestep.MortPredRate">
 <summary>
 Mortality rate map due to predation by Row, Col, Prey/Pred linkage <see cref="P:EwECore.cEcospaceTimestep.nPreyPredLinks">nPreyPredLinks</see>
 </summary>
 <value></value>
 <returns></returns>
 <remarks>MortPredRate = [prey biomass eaten] / [prey biomass]</remarks>
</member>
<member name="P:EwECore.cEcospaceTimestep.GroupDetritus">
 <summary>
 Detritus by group
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Total biomass a group contributes to detritus</remarks>
</member>
<member name="M:EwECore.cEcospaceTimestep.Layer(EwEUtils.Core.eVarNameFlags,System.Int32)">
 <inheritdocs cref="M:EwECore.Core.IEcospaceLayerManager.Layer(EwEUtils.Core.eVarNameFlags,System.Int32)"/>
</member>
<member name="M:EwECore.cEcospaceTimestep.Layers(EwEUtils.Core.eVarNameFlags)">
 <inheritdocs cref="M:EwECore.Core.IEcospaceLayerManager.Layers(EwEUtils.Core.eVarNameFlags)"/>
</member>
<member name="M:EwECore.cEcospaceTimestep.LayerData(EwEUtils.Core.eVarNameFlags,System.Int32)">
 <inheritdocs cref="M:EwECore.Core.IEcospaceLayerManager.LayerData(EwEUtils.Core.eVarNameFlags,System.Int32)"/>
</member>
<member name="T:EwECore.cEnviroInputMap">
 <summary>
 Joins an input map(row,col) with a list(by group) of Environmental Response functions (mediation functions).
 </summary>
 <remarks>
 Set the Map to the input map then tell it which response functions to use for which groups setShapeForGroup(igroup) = iResponseFunction
 </remarks>
</member>
<member name="M:EwECore.cEnviroInputMap.Init(EwECore.cMediationDataStructures,EwECore.cEcospaceDataStructures)">
 <inheritdocs cref="M:EwECore.IEnviroInputData.Init(EwECore.cMediationDataStructures,EwECore.cEcosimDatastructures)"/>
</member>
<member name="M:EwECore.cEnviroInputMap.Update">
 <inheritdocs cref="M:EwECore.IEnviroInputData.Update"/>
</member>
<member name="M:EwECore.cEnviroInputMap.setManager(EwECore.IEnvironmentalResponseManager)">
 <inheritdocs cref="M:EwECore.IEnviroInputData.SetManager(EwECore.IEnvironmentalResponseManager)"/>
</member>
<member name="M:EwECore.cEnviroInputMap.Histogram">
 <inheritdocs cref="M:EwECore.IEnviroInputData.Histogram"/>
</member>
<member name="P:EwECore.cEnviroInputMap.Max">
 <inheritdocs cref="P:EwECore.IEnviroInputData.Max"/>
</member>
<member name="P:EwECore.cEnviroInputMap.Mean">
 ---------------------------------------
 <inheritdocs cref="P:EwECore.IEnviroInputData.Mean"/>
</member>
<member name="P:EwECore.cEnviroInputMap.Min">
 <inheritdocs cref="P:EwECore.IEnviroInputData.Min"/>
</member>
<member name="P:EwECore.cEnviroInputMap.Layer">
 <summary>
 The basemap layer that provides the data that this map operates onto.
 </summary>
</member>
<member name="M:EwECore.cEnviroInputMap.ResponseFunction(System.Int32,System.Int32,System.Int32)">
 <summary>
 Return a value for a cell in the input map base on the the response function for a group.
 </summary>
 <param name="igrp">Group index for the response function</param>
 <param name="iMapRow">Row of the input map</param>
 <param name="iMapCol">Col of the input map</param>
 <returns>Y = F(x)</returns>
</member>
<member name="P:EwECore.cEnviroInputMap.ResponseIndexForGroup(System.Int32,System.Boolean)">
 <summary>
 Sets or gets the response(mediation) function index to use from the current cMediationDataStructures load during the Init(...)
 </summary>
 <param name="GrpIndex">One-based group index for the response function.</param>
 <value></value>
 <returns></returns>
 <remarks>The Index of the ResponseFunction must exist in the underlying mediation data.</remarks>
</member>
<member name="T:EwECore.cEcospaceLayer">
 ---------------------------------------------------------------------------
 <summary>
 Base class for providing cell-based interaction with Ecospace data.
 </summary>
 <remarks>
 <para>This class can be used in two ways:</para>
 <para><list type="bullet">
 <item><description>In conjunction with a manager, who will link this layer
 to the actual data</description></item>
 <item><description>Directly linked to a data array holding the data. In that
 case the manager is obsolete.</description></item>
 </list></para>
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cEcospaceLayer.m_manager">
 <summary>Manager delivering the data, if any.</summary>
</member>
<member name="F:EwECore.cEcospaceLayer.m_vnData">
 <summary>If set, this flag will direct the manager how to get to the actual map data.</summary>
</member>
<member name="F:EwECore.cEcospaceLayer.m_metadata">
 <summary>Metadata to restrict values that can enter a layer.</summary>
</member>
<member name="F:EwECore.cEcospaceLayer.m_data">
 <summary>If set, a hard-linked reference to an array.</summary>
</member>
<member name="F:EwECore.cEcospaceLayer.m_typeValue">
 <summary>Type of the data.</summary>
</member>
<member name="F:EwECore.cEcospaceLayer.m_bInvalidateStats">
 <summary>States whether cached statistics should be recalculated.</summary>
 <remarks>True at startup to make sure that stats are properly calculated
 when first queried.</remarks>
</member>
<member name="M:EwECore.cEcospaceLayer.#ctor(EwECore.cCore,System.Int32,EwECore.Core.IEcospaceLayerManager,System.String,EwEUtils.Core.eVarNameFlags,System.Int32,System.Type)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for definining a layer that dynamically obtains its data.
 </summary>
 <param name="core">The core to notify of changes.</param>
 <param name="iDBID">Database ID to assign to the layer.</param>
 <param name="manager">The manager providing data for this layer.</param>
 <param name="vnData">The variable name identifying what data to obtain
 from the manager.</param>
 <param name="iIndex">Secundary index for obtaining the data.</param>
 <param name="typeValue"><see cref="T:System.Type">Type</see> of layer values.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayer.#ctor(EwECore.cCore,System.Object,System.String,System.Type,EwECore.cVariableMetaData,EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for defining a layer that is connected directly to its data.
 </summary>
 <param name="core">The core to notify of changes.</param>
 <param name="data">The data to link to this layer.</param>
 <param name="typeValue"><see cref="T:System.Type">Type</see> of layer values.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.Manager">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwECore.Core.IEcospaceLayerManager">manager</see> responsible for this layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.VarName">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwEUtils.Core.eVarNameFlags"/> for the variable of this layers' data
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.ValueType">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:System.Type">type</see> of layer values.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.Cell(System.Int32,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the value of a cell.
 </summary>
 <param name="iRow"></param>
 <param name="iCol"></param>
 <param name="iIndexSec"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.MetadataCell">
 -----------------------------------------------------------------------
 <summary>
 Get the metadata associated with the values for a cell.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.MaxValue">
 -----------------------------------------------------------------------
 <summary>
 Get the maximum value in a layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.MinValue">
 -----------------------------------------------------------------------
 <summary>
 Get the minimum value in a layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.NumValueCells">
 -----------------------------------------------------------------------
 <summary>
 Get the number of value cells in the layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayer.Invalidate">
 -----------------------------------------------------------------------
 <summary>
 Invalidates the content of a layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.SecundaryIndexCounter">
 -----------------------------------------------------------------------
 <summary>
 Secundary index type for layers that contain, for instance, monthly data.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.SecundaryIndex">
 -----------------------------------------------------------------------
 <summary>
 Secundary index for layers that contain, for instance, monthly data.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.IsExternalData">
 -----------------------------------------------------------------------
 <summary>
 Get if layer is receiving data from an external source.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayer.Default">
 -----------------------------------------------------------------------
 <summary>
 Get the defaulkt value for the layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayer.Reset(System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Reset the layer content to its <see cref="P:EwECore.cEcospaceLayer.Default"/> value
 </summary>
</member>
<member name="M:EwECore.cEcospaceLayer.GetVariable(EwEUtils.Core.eVarNameFlags,System.Int32,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Overridden to make sure there is always a name returned for a layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerBoolean">
 ---------------------------------------------------------------------------
 <summary>
 Base layer providing access to Ecospace data as cells of Boolean values.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerBoolean.#ctor(EwECore.cCore,EwECore.Core.IEcospaceLayerManager,System.String,EwEUtils.Core.eVarNameFlags,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for a NxN layer of Boolean values that derives its data and 
 identity from a manager.
 </summary>
 <param name="core"></param>
 <param name="manager"></param>
 <param name="varName"></param>
 <param name="iIndex"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerBoolean.#ctor(EwECore.cCore,System.Boolean[0:,0:],System.String,EwECore.cVariableMetaData,EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for a NxN layer that is hard-linked to an array of data.
 </summary>
 <param name="core"></param>
 <param name="strName">Display name for the layer.</param>
 <param name="data">Data to attach to the layer, if any.</param>
 <param name="meta">Optional metadata for contraining data interactions.</param>
 <param name="vn">Optional varname for the layer, if <paramref name="data"/>
 was left empty.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayerBoolean.Cell(System.Int32,System.Int32,System.Int32)">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.Cell(System.Int32,System.Int32,System.Int32)"/>
</member>
<member name="P:EwECore.cEcospaceLayerBoolean.MaxValue">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.MaxValue"/>
</member>
<member name="P:EwECore.cEcospaceLayerBoolean.MinValue">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.MinValue"/>
</member>
<member name="P:EwECore.cEcospaceLayerBoolean.NumValueCells">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.NumValueCells"/>
</member>
<member name="T:EwECore.cEcospaceLayerInteger">
 <summary>
 Base layer providing access to Ecospace data as cells of integer values.
 </summary>
</member>
<member name="F:EwECore.cEcospaceLayerInteger.m_iMaxValue">
 <summary>Layer max value.</summary>
</member>
<member name="F:EwECore.cEcospaceLayerInteger.m_iMinValue">
 <summary>Layer min value.</summary>
</member>
<member name="F:EwECore.cEcospaceLayerInteger.m_iNumValueCells">
 <summary>Layer num of cells with a value.</summary>
</member>
<member name="M:EwECore.cEcospaceLayerInteger.#ctor(EwECore.cCore,EwECore.Core.IEcospaceLayerManager,System.String,EwEUtils.Core.eVarNameFlags,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for a NxN layer of integer values that derives its data and 
 identity from a manager, but that is a unique data entity in the EwE core.
 </summary>
 <param name="core"></param>
 <param name="manager"></param>
 <param name="varName"></param>
 <param name="iIndex"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerInteger.#ctor(EwECore.cCore,System.Int32[0:,0:],System.String,EwECore.cVariableMetaData,EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for a NxN layer that is hard-linked to an array of data.
 </summary>
 <param name="theCore"></param>
 <param name="data"></param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayerInteger.Cell(System.Int32,System.Int32,System.Int32)">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.Cell(System.Int32,System.Int32,System.Int32)"/>
</member>
<member name="P:EwECore.cEcospaceLayerInteger.MaxValue">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.MaxValue"/>
</member>
<member name="P:EwECore.cEcospaceLayerInteger.MinValue">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.MinValue"/>
</member>
<member name="P:EwECore.cEcospaceLayerInteger.NumValueCells">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.NumValueCells"/>
</member>
<member name="M:EwECore.cEcospaceLayerInteger.RecalcStats">
 -----------------------------------------------------------------------
 <summary>
 Recalculate layer statistics
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerSingle">
 <summary>
 Base layer providing access to Ecospace data as cells of single values.
 </summary>
</member>
<member name="F:EwECore.cEcospaceLayerSingle.m_sMaxValue">
 <summary>Layer max value.</summary>
</member>
<member name="F:EwECore.cEcospaceLayerSingle.m_sMinValue">
 <summary>Layer min value.</summary>
</member>
<member name="F:EwECore.cEcospaceLayerSingle.m_sMeanValue">
 <summary>Layer mean value.</summary>
</member>
<member name="F:EwECore.cEcospaceLayerSingle.m_iNumValueCells">
 <summary>Layer num of cells with a value.</summary>
</member>
<member name="M:EwECore.cEcospaceLayerSingle.#ctor(EwECore.cCore,EwECore.Core.IEcospaceLayerManager,System.String,EwEUtils.Core.eVarNameFlags,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for an NxN layer of Single values, that derives its data and 
 identity from a manager.
 </summary>
 <param name="core"></param>
 <param name="manager"></param>
 <param name="varName"></param>
 <param name="iIndex"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerSingle.#ctor(EwECore.cCore,System.Single[0:,0:],System.String,EwECore.cVariableMetaData,EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for a NxN layer that is hard-linked to an array of data.
 </summary>
 <param name="core"></param>
 <param name="data"></param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayerSingle.Cell(System.Int32,System.Int32,System.Int32)">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.Cell(System.Int32,System.Int32,System.Int32)"/>
</member>
<member name="P:EwECore.cEcospaceLayerSingle.MaxValue">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.MaxValue"/>
</member>
<member name="P:EwECore.cEcospaceLayerSingle.MinValue">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.MinValue"/>
</member>
<member name="P:EwECore.cEcospaceLayerSingle.NumValueCells">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.NumValueCells"/>
</member>
<member name="T:EwECore.cEcospaceLayerVelocity">
 ---------------------------------------------------------------------------
 <summary>
 Base layer providing access to Ecospace data as cells, each representing a
 vector with a X and Y component.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cEcospaceLayerVelocity.m_sMam_xvel">
 <summary>Layer max velocity value.</summary>
</member>
<member name="F:EwECore.cEcospaceLayerVelocity.m_sMinValue">
 <summary>Layer min velocity value.</summary>
</member>
<member name="F:EwECore.cEcospaceLayerVelocity.m_iNumValueCells">
 <summary>Layer num of cells with a value.</summary>
</member>
<member name="M:EwECore.cEcospaceLayerVelocity.#ctor(EwECore.cCore,EwECore.Core.IEcospaceLayerManager,System.String,EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for an NxN layer of vectors that derives its data and identity 
 from a manager.
 </summary>
 <param name="theCore"></param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayerVelocity.Cell(System.Int32,System.Int32,System.Int32)">
 <summary>
 Get/set a cell value in the form of Single(2), where index 0 represents
 the X velocity, and index 1 represents the Y velocity of the value.
 </summary>
 <param name="iRow"></param>
 <param name="iCol"></param>
 <param name="iIndexSec">ignored</param>
</member>
<member name="P:EwECore.cEcospaceLayerVelocity.MaxValue">
 <summary>
 Get the max magnitude of all cells in the layer.
 </summary>
</member>
<member name="P:EwECore.cEcospaceLayerVelocity.MinValue">
 <summary>
 Get the min magnitude of all cells in the layer.
 </summary>
</member>
<member name="P:EwECore.cEcospaceLayerVelocity.NumValueCells">
 <inheritdocs cref="P:EwECore.cEcospaceLayer.NumValueCells"/>
</member>
<member name="T:EwECore.cEcospaceBasemap">
 ===========================================================================
 <summary>
 The heart of the Ecospace map interfaces. The basemap manages all foundation
 Ecospace map layers.
 </summary>
 ===========================================================================
</member>
<member name="F:EwECore.cEcospaceBasemap.m_layers">
 <summary>The layers maintained in a basemap.</summary>
</member>
<member name="P:EwECore.cEcospaceBasemap.InRow">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcospaceDataStructures.InRow">nRows</see>
 value for this scenario
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.InCol">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcospaceDataStructures.InCol">nCols</see>
 value for this scenario
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.CellLength">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcospaceDataStructures.CellLength">CellLength</see>
 value for this scenario in kilometers.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.CellSize">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcospaceDataStructures.CellLength">CellLength</see>
 value for this scenario in map units. The value returned here depends 
 on the setting of the <see cref="P:EwECore.cEcospaceBasemap.AssumeSquareCells"/> flag. If set to false,
 Ecospace returns the cell size in decimal degrees. If set to true, Ecospace 
 returns the cell size in meters.
 </summary>
 <remarks>
 This conversion should be explicitly driven by map projections, of course...
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.Latitude">
 -----------------------------------------------------------------------
 <summary>
 Get/set the TopLeft latitude value for the map.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.Longitude">
 -----------------------------------------------------------------------
 <summary>
 Get/set the TopLeft longitude value for the map.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.PosTopLeft">
 -----------------------------------------------------------------------
 <summary>
 Get/set the top-left (NW) extent of the map, expressed in degrees (lon, lat)
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.PosBottomRight">
 -----------------------------------------------------------------------
 <summary>
 Get/set the bottom-right (SE) extent of the map, expressed in degrees (lon, lat)
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.AssumeSquareCells">
 -----------------------------------------------------------------------
 <summary>
 <para>Get/set whether to assume square cells without latitude tapering correction. 
 Square cells can be assumed on relatively small areas in UTM projections.</para>
 <para>As an additional bonus Ecospace assumes meters as map units when this flag is 
 set; if this flag is cleared map units are expected to be decimal degrees.</para>
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.ProjectionString">
 -----------------------------------------------------------------------
 <summary>
 <para>Get/set the Proj4 string for the Ecospace map.</para>
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.IsModelledCell(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether a cell is modelled for Ecosystem dynamics.
 </summary>
 <param name="iRow">One-based row index.</param>
 <param name="iCol">One-based column index.</param>
 <returns>
 A cell is modelled when it represent water in the included cell range.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.IsValidCellPosition(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether an intended cell index falls within the map bounds.
 </summary>
 <param name="iRow">One-based row index to validate.</param>
 <param name="iCol">One-based column index to validate.</param>
 <returns>True if the intended cell index falls within the map bounds,
 False otherwise. No shades of grey here, let alone fifty of 'em. Ugh.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerImportance(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns a LayerImportance
 </summary>
 <param name="index">Index from 1 to nLayerImportance</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerDriver(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns an external driver layer
 </summary>
 <param name="index">Index from 1 to nLayerDriver</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerDepth">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace Depth layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerPort(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace port layer for a given fleet.
 </summary>
 <param name="iFleet">Zero-based fleet index to get the layer for. Fleet
 index 0 will return the ports for All fleets.
 </param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerSailingCost(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace sailing cost layer for a given fleet.
 </summary>
 <param name="iFleet">One-based Fleet index to get the layer for.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerHabitat(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace Habitat layer.
 </summary>
 <param name="iHabitat">One-based habitat index</param>
 <remarks>
 This layer provides access to the one and only array that holds all
 Habitats in Ecospace. At the moment (Nov '08), Habitats cannot overlap
 and are stored in one two-dimensional array.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerHabitatCapacityInput(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the habitat foraging capacity input layer (prior)
 </summary>
 <param name="iGroup">One-based group index</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerHabitatCapacity(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the computed habitat foraging capacity layer
 </summary>
 <param name="iGroup">One-based group index</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerMPA(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace MPA layer.
 </summary>
 <param name="iMPA">One-based MPA index</param>
 <remarks>
 This layer provides access to the one and only array that holds all
 MPAs in Ecospace.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerRegion">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace Region layer.
 </summary>
 <remarks>
 This layer provides access to the one and only array that holds all
 Regions in Ecospace. At the moment (Nov '08), Regions cannot overlap
 and are stored in one two-dimensional array.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerRelPP">
 -----------------------------------------------------------------------
 <summary>
 Get the Relative Primary Production layer in Ecospace.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerAdvection">
 -----------------------------------------------------------------------
 <summary>
 Get the Advection layers in Ecospace.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerWind">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace wind layers.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerUpwelling">
 -----------------------------------------------------------------------
 <summary>
 Get the flow layer in Ecospace for the current month.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerMigration(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the migration layer for a given group.
 </summary>
 <param name="iGroup">One-based group index.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerRelCin">
 -----------------------------------------------------------------------
 <summary>
 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerContaminantForcingAbsolute">
 -----------------------------------------------------------------------
 <summary>
 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerMPASeed">
 -----------------------------------------------------------------------
 <summary>
 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerExclusion">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace exclusion layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerCellArea">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace cell area layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerEffortZone">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace effort zone layer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBasemap.LayerIBMAge1Forcing(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the Ecospace Age1 stanza biomass forcing layer. Good luck.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.Layers(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.Core.IEcospaceLayerManager.Layers(EwEUtils.Core.eVarNameFlags)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.Layer(EwEUtils.Core.eVarNameFlags,System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.Core.IEcospaceLayerManager.Layer(EwEUtils.Core.eVarNameFlags,System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.LayerData(EwEUtils.Core.eVarNameFlags,System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.Core.IEcospaceLayerManager.LayerData(EwEUtils.Core.eVarNameFlags,System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.RowToLat(System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Returns the top-left latitude position of the given row.
 </summary>
 <param name="sRow"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.LatToRow(System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Returns the one-based index of the row that contains a given latitude value.
 </summary>
 <param name="sLat"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.ColToLon(System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Returns the top-left longitude position of the given row.
 </summary>
 <param name="sCol"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.LonToCol(System.Single)">
 -----------------------------------------------------------------------
 <summary>
 Returns the one-based index of the column that contains a given longitude 
 value.
 </summary>
 <param name="sLon"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.RowColToCell(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Convert a row, col location to a sequential cell number.
 </summary>
 <param name="iRow"></param>
 <param name="iCol"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBasemap.CellToRowCol(System.Int32,System.Int32@,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Convert a sequential cell number to a row, col location in the basemap.
 </summary>
 <param name="i"></param>
 <param name="iRow"></param>
 <param name="iCol"></param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerAdvection">
 <summary>
 Layer providing access to Ecospace advection data.
 </summary>
</member>
<member name="M:EwECore.cEcospaceLayerAdvection.#ctor(EwECore.cCore,EwECore.cEcospaceBasemap)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for the advection layer.
 </summary>
 <param name="theCore"></param>
 <param name="manager"></param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerAdvectionForcing">
 ---------------------------------------------------------------------------
 <summary>
 Layer providing access to Ecospace advection forcing data.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerAdvectionForcing.DefaultName">
 -----------------------------------------------------------------------
 <summary>
 Overriden to include the advection layer name. Indexes are one-based
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerBiomassForcing">
 ---------------------------------------------------------------------------
 <summary>
 Layer providing access to Ecospace biomass forcing data.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerBiomassForcing.DefaultName">
 -----------------------------------------------------------------------
 <summary>
 Overriden to include the group name into this layer's name
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerBiomassRelativeForcing">
 ---------------------------------------------------------------------------
 <summary>
 Layer providing access to Ecospace biomass relative forcing data.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerCellArea">
 ---------------------------------------------------------------------------
 <summary>
 Layer providing access to Ecospace cell areas.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerContaminantForcingAbsolute">
 ---------------------------------------------------------------------------
 <summary>
 Layer providing access to Ecospace contaminant forcing data.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerContaminantForcingAbsolute.DefaultName">
 -----------------------------------------------------------------------
 <summary>
 Overriden to include the group name into this layer's name
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerContaminantRelativeDistribution">
 <summary>
 Layer providing access to Ecospace relative contaminants data.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerDepth">
 <summary>
 Layer providing access to Ecospace depth data.
 </summary>
</member>
<member name="M:EwECore.cEcospaceLayerDepth.IsWaterCell(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 States if a given cell is a water cell.
 </summary>
 <param name="iRow">The row of the cell to check.</param>
 <param name="iCol">The column of the cell to check.</param>
 <returns>True if the given cell is a water cell.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerDepth.IsLandCell(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 States if a given cell is a land cell.
 </summary>
 <param name="iRow">The row of the cell to check.</param>
 <param name="iCol">The column of the cell to check.</param>
 <returns>True if the given cell is a land cell.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerDepth.IsCoastalCell(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 States if a given cell is a land cell that lies beside water.
 </summary>
 <param name="iRow">The row of the cell to check.</param>
 <param name="iCol">The column of the cell to check.</param>
 <returns>True if the given cell is a coastal cell.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerDepth.NumActiveCells">
 -----------------------------------------------------------------------
 <summary>
 Returns the number of cells with ecosystem dynamics in the map.
 </summary>
 <returns>The number of cells with ecosystem dynamics in the map.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceLayerDepth.DefaultName">
 <summary>
 This paves the way to allow a custom depth layer name
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerDriver">
 <summary>
 Layer providing access to Ecospace external driving data.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerEffortZone">
 <summary>
 Layer providing access to Ecospace effort zone data.
 </summary>
</member>
<member name="P:EwECore.cEcospaceLayerEffortZone.MaxValue">
 <summary>
 Overridden to return the max region value.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerExclusion">
 ---------------------------------------------------------------------------
 <summary>
 Layer providing access to Ecospace excluded cells.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayerExclusion.IsExcludedCell(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 States if a given cell is excluded from Ecospace dynamics.
 </summary>
 <param name="iRow">The row of the cell to check.</param>
 <param name="iCol">The column of the cell to check.</param>
 <returns>True if the given cell is an excluded cell.</returns>
 <seealso cref="P:EwECore.cEcospaceLayerExclusion.IsIncludedCell(System.Int32,System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceLayerExclusion.IsIncludedCell(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 States if a given cell is included for Ecospace dynamics.
 </summary>
 <param name="iRow">The row of the cell to check.</param>
 <param name="iCol">The column of the cell to check.</param>
 <returns>True if the given cell is an excluded cell.</returns>
 <seealso cref="P:EwECore.cEcospaceLayerExclusion.IsExcludedCell(System.Int32,System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerHabitat">
 <summary>
 Layer providing access to Ecospace habitat data.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerHabitatCapacity">
 <summary>
 Layer providing access to Ecospace habitat capacity data.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerIBMAge1Forcing">
 <summary>
 HACK WARNING: This is a place holder ONLY used for the IBM Age 1 forcing
 There is no IBM biomass layer in the core 
 We need a placeholder so the IBM forcing will look like other Ecospace Basemap layers, even though it's not.
 If you need this to work as a cEcospaceBasemap 
 you will need to construct an array in the core that holds Multi stanza biomass 
 </summary>
</member>
<member name="M:EwECore.cEcospaceLayerIBMAge1Forcing.DefaultName">
 -----------------------------------------------------------------------
 <summary>
 Overriden to include the group name into this layer's name
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerImportance">
 <summary>
 Layer providing access to Ecospace importance data.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerMigration">
 <summary>
 Layer providing access to Ecospace migration data.
 </summary>
</member>
<member name="M:EwECore.cEcospaceLayerMigration.#ctor(EwECore.cCore@,EwECore.cEcospaceBasemap,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for an NxN layer that derives its data and identity from 
 a manager.
 </summary>
 <param name="theCore"></param>
 <param name="manager"></param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerMPA">
 <summary>
 Layer providing access to Ecospace migration data.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerMPASeed">
 <summary>
 Layer providing access to Ecospace MPA seed data.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerPort">
 <summary>
 Layer providing access to Ecospace port data.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerRegion">
 <summary>
 Layer providing access to Ecospace region data.
 </summary>
</member>
<member name="P:EwECore.cEcospaceLayerRegion.MaxValue">
 <summary>
 Overridden to return the max region value.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerRelPP">
 <summary>
 Layer providing access to Ecospace Primarey Production data.
 </summary>
</member>
<member name="T:EwECore.cEcospaceLayerSail">
 <summary>
 Layer providing access to Ecospace sailing cost data.
 </summary>
</member>
<member name="P:EwECore.cEcospaceLayerSail.Cell(System.Int32,System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the value of a sailing cost cell.
 </summary>
 <param name="iRow">Row index of the cell to access.</param>
 <param name="iCol">Column index of the cell to access.</param>
 <remarks>
 Note that cells will be accessed for the currently selected fleet index.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceLayerUpwelling">
 <summary>
 Layer providing access to Ecospace upwelling data.
 </summary>
</member>
<member name="F:EwECore.cEcospaceLayerUpwelling.m_iMonth">
 <summary>Month [1, 12] to operate on.</summary>
</member>
<member name="T:EwECore.cEcospaceLayerWind">
 <summary>
 Layer providing access to Ecospace vector data.
 </summary>
</member>
<member name="M:EwECore.cEcospaceLayerWind.#ctor(EwECore.cCore,EwECore.cEcospaceBasemap)">
 -----------------------------------------------------------------------
 <summary>
 Constructor for the wind layer.
 </summary>
 <param name="theCore"></param>
 <param name="manager"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.EcospaceTimeSeries.cEcospaceTimeSeriesManager.Add(EwECore.EcospaceTimeSeries.cEcospaceTimeSeriesRec)">
 <summary>
 Added a new cEcospaceTimeSeriesRec record. 
 </summary>
 <param name="TimeSeriesRec"></param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.EcospaceTimeSeries.cEcospaceTimeSeriesManager.Load(System.String,System.String,EwEUtils.Core.eVarNameFlags)">
 <summary>
 Read the Ecospace time series XYZ formatted file 
 </summary>
 <param name="InputFilename"></param>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.EcospaceTimeSeries.cEcospaceTimeSeriesManager.CalculateStats(System.Int32,System.Single[0:,0:,0:])">
 <summary>
 Calculate stats for this time step 
 </summary>
 <param name="iTimeStep">Current model time step</param>
 <param name="biomass">Predicted biomass</param>
 <returns>True if successful.</returns>
</member>
<member name="P:EwECore.EcospaceTimeSeries.cEcospaceTimeSeriesManager.ContainsData(EwEUtils.Core.eVarNameFlags)">
 <summary>
 Is there Ecospace time series data loaded
 </summary>
 <returns>True if there is loaded data, False otherwise. Does not test the map bounds or dates.</returns>
</member>
<member name="M:EwECore.EcospaceTimeSeries.cEcospaceTimeSeriesManager.TimeStepToDate(System.Int32)">
 <summary>
 Get the calendar date for the current model time step
 </summary>
 <param name="itimestep"></param>
 <returns></returns>
 <remarks>This method is identical to <see cref="M:EwECore.cCore.EcospaceTimestepToAbsoluteTime(System.Int32)"/></remarks>
</member>
<member name="M:EwECore.EcospaceTimeSeries.cEcospaceTimeSeriesManager.checkDates(System.DateTime,System.DateTime)">
 <summary>
 Are the start date and the end date of the input time series data within the model run
 </summary>
 <param name="StartDate"></param>
 <param name="EndDate"></param>
 <returns>True if any part of the dates are in bounds, False otherwise. </returns>
</member>
<member name="M:EwECore.EcospaceTimeSeries.cEcospaceTimeSeriesManager.checkExtent(System.Int32,System.Int32)">
 <summary>
 Check the Extent of the input time series data against the current Ecospace map extent
 </summary>
 <param name="MaxRow"></param>
 <param name="MaxCol"></param>
 <returns>Return True if the row and col are inbounds, False otherwise.</returns>
</member>
<member name="T:EwECore.cEcospaceValidation">
 <summary>
 Statistics to aid the validation and calibration of Ecospace.
 </summary>
</member>
<member name="F:EwECore.cEcospaceValidation.m_meanBwPrey">
 <summary>
 Calculated region x pred x prey overlap by timestep (timestep -> region x pred x prey)
 </summary>
</member>
<member name="P:EwECore.cEcospaceValidation.Core">
 <summary>Get the attached core.</summary>
</member>
<member name="P:EwECore.cEcospaceValidation.EcopathData">
 <summary>Get the attached Ecopath data structures.</summary>
</member>
<member name="P:EwECore.cEcospaceValidation.EcospaceData">
 <summary>Get the attached Ecospace data structures.</summary>
</member>
<member name="M:EwECore.cEcospaceValidation.Clear">
 -----------------------------------------------------------------------
 <summary>
 Clear the stats in preparation for new computations.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceValidation.CalculateMeanBwPrey(System.Single[0:,0:,0:],System.Int32,System.Int32[0:,0:])">
 -----------------------------------------------------------------------
 <summary>
 Calculate mean weighted prey biomass by region.
 </summary>
 <param name="bcell">Predicted biomass (row x col x grp)</param>
 <param name="nRegions">Optional number of regions to consider.</param>
 <param name="regions">Optional region map.</param>
 <returns>
 Mean weighted prey biomass (prey x pred x region), or Nothing if an 
 error occurred.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceValidation.CalculateStats(System.Int32,System.Single[0:,0:,0:],System.Int32,System.Int32[0:,0:])">
 -----------------------------------------------------------------------
 <summary>
 Calculate stats for a given time step.
 </summary>
 <param name="bcell">The biomass (row x col x group) to calculate stats from.</param>
 <param name="iTimeStep">The time step that <paramref name="bcell"/> corresponds to.</param>
 <returns>Always true. This is a very happy function.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceValidation.MeanBwPrey(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Obtain the weighted mean prey b (pred x prey x region) for a given time step.
 </summary>
 <param name="iTimestep"></param>
 <returns>The weighted mean prey b (pred x prey x region) at <paramref name="iTimestep"/>.
 If there are no results for the time step, this will return Nothing.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Core.IEcospaceLayerManager.Layers(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Get managed layers.
 </summary>
 <param name="varName">The <see cref="T:EwEUtils.Core.eVarNameFlags">variable</see> to get layers for.
 If <see cref="F:EwEUtils.Core.eVarNameFlags.NotSet"/> is provided this manager will return
 all maintained layers.</param>
 <returns>An array of all managed layers.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Core.IEcospaceLayerManager.Layer(EwEUtils.Core.eVarNameFlags,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get a single layer.
 </summary>
 <param name="varName">The <see cref="T:EwEUtils.Core.eVarNameFlags">variable</see> to get layers for.</param>
 <param name="iIndex">Optional one-based index of the layer to retrieve.</param>
 <returns>A single layer.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Core.IEcospaceLayerManager.LayerData(EwEUtils.Core.eVarNameFlags,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Method that managed layers can call to request their data.
 </summary>
 <param name="varName">The <see cref="T:EwEUtils.Core.eVarNameFlags">variable</see> to get layer data for.</param>
 <param name="iIndex">Index of the layer to obtain data for.</param>
 <returns>Data in a format that the layer should understand.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceASCBaseResultsWriter">
 ---------------------------------------------------------------------------
 <summary>
 Base Class for ASC Specific Writers that implement <see cref="T:EwEUtils.Core.IEcospaceResultsWriter">IEcospaceResultsWriter</see> 
 and <see cref="T:EwECore.cEcospaceBaseResultsWriter">cEcospaceBaseResultsWriter</see> 
 to write Ecospace output to ESRI ASCII files. 
 </summary>
 <remarks>Each ASCII file will contain an Ecospace value for a given group and time step</remarks>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.StartWrite">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.StartWrite"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.WriteResults(System.Object)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.WriteResults(System.Object)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.IsItemSelected(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the map with a given index should be written to disk. 
 By default, the <see cref="P:EwECore.cEcospaceBaseResultsWriter.SelectedGroups"/> array is consulted, but this 
 can be overridden to check other arrays such as <see cref="P:EwECore.cEcospaceBaseResultsWriter.SelectedFleets"/>
 </summary>
 <param name="iIndex"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.FirstMap">
 -----------------------------------------------------------------------
 <summary>
 Returns the index of the first map to write. By default, 1 is returned.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.LastMap">
 -----------------------------------------------------------------------
 <summary>
 Returns the index of the last map to write. By default, the number
 of living groups is returned.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.GetFileName(EwEUtils.Core.eVarNameFlags,System.Int32,System.String,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns the file name to write a map for. By default, the 
 <see cref="M:EwECore.cEcospaceBaseResultsWriter.GetGroupFileName(EwEUtils.Core.eVarNameFlags,System.Int32,System.String,System.Int32)"/> 
 is returned.
 </summary>
 <param name="varname"></param>
 <param name="iIndex"></param>
 <param name="strExt"></param>
 <param name="iModelTimeStep"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.EndWrite">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.EndWrite"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.FileExtension">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.FileExtension"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.WriteRunInfoFile">
 -----------------------------------------------------------------------
 <summary>
 Write the run information file to accompany the run results.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.SaveASCFile(System.IO.StreamWriter,EwECore.cEcospaceTimestep,System.Int32,EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Write an entire ASCII file for a group, time step and variable.
 </summary>
 <param name="strm"></param>
 <param name="SpaceTSData"></param>
 <param name="igrp"></param>
 <param name="varName"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.WriteASCIIHeader(System.IO.StreamWriter)">
 -----------------------------------------------------------------------
 <summary>
 Write ESRI ASCII header block.
 </summary>
 <param name="writer">The <see cref="T:System.IO.StreamWriter"/> to write to.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceASCBaseResultsWriter.WriteASCIIBody(System.IO.StreamWriter,EwECore.cEcospaceTimestep,System.Int32,EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Write ESRI ASCII body block.
 </summary>
 <param name="writer">The <see cref="T:System.IO.StreamWriter"/> to write to.</param>
 <param name="iIndex">The layer index to write the data for.</param>
 <param name="SpaceTSData">The Ecospace data structures to use for spatial referencing.</param>
 <param name="varname">The variable to write.</param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceASCMapBiomassWriter">
 ---------------------------------------------------------------------------
 <summary>
 Implementation of <see cref="T:EwEUtils.Core.IEcospaceResultsWriter"/> to write Ecospace biomass
 distributions maps to ESRI ASCII files. 
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceASCMapCapacityWriter">
 ---------------------------------------------------------------------------
 <summary>
 Implementation of <see cref="T:EwEUtils.Core.IEcospaceResultsWriter"/> to write Ecospace 
 computed habitat capacity maps to ESRI ASCII files. 
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceASCMapCatchWriter">
 ---------------------------------------------------------------------------
 <summary>
 Implementation of <see cref="T:EwEUtils.Core.IEcospaceResultsWriter"/> to write Ecospace catch
 distributions maps to ESRI ASCII files. 
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceASCMapDiscardsWriter">
 ---------------------------------------------------------------------------
 <summary>
 Implementation of <see cref="T:EwEUtils.Core.IEcospaceResultsWriter">IEcospaceResultsWriter</see> 
 and <see cref="T:EwECore.cEcospaceBaseResultsWriter">cEcospaceBaseResultsWriter</see> 
 to write Ecospace output to ESRI ASCII files. 
 </summary>
 <remarks>Each ASCII file will contain an Ecospace value for a given group and time step</remarks>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceASCMapEffortWriter">
 ---------------------------------------------------------------------------
 <summary>
 Implementation of <see cref="T:EwEUtils.Core.IEcospaceResultsWriter"/> to write Ecospace effort
 distributions maps to ESRI ASCII files. 
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceBaseResultsWriter">
 ---------------------------------------------------------------------------
 <summary>
 Base implementation of <see cref="T:EwEUtils.Core.IEcospaceResultsWriter">IEcospaceResultsWriter</see>
 </summary>
 <remarks>Provides directory creation and file naming functionality for derived classes</remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cEcospaceBaseResultsWriter.m_core">
 <summary>Zhe core.</summary>
</member>
<member name="F:EwECore.cEcospaceBaseResultsWriter.m_OutputPath">
 <summary>The complete path to the directory containing result files.</summary>
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.Init(System.Object)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.IResultsWriter.Init(System.Object)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.StartWrite">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.IResultsWriter.StartWrite"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.WriteResults(System.Object)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.IEcospaceResultsWriter.WriteResults(System.Object)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.EndWrite">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.IResultsWriter.EndWrite"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBaseResultsWriter.DisplayName">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IResultsWriter.DisplayName"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBaseResultsWriter.Enabled">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IResultsWriter.Enabled"/>
 -----------------------------------------------------------------------  
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.CreateOutputDir">
 -----------------------------------------------------------------------
 <summary>
 Create the time stamped ouput directory.
 </summary>
 <remarks>
 Directory will be created on the default output path in the format "Ecopace {datatype} {y-m-d h-m-s}
 i.e. "Ecospace ASC 11-07-11 16-40-50".</remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBaseResultsWriter.OutputDirectory">
 -----------------------------------------------------------------------
 <summary>
 Get the full path name of the current output directory.
 </summary>
 <remarks>Initialized by <see cref="M:EwECore.cEcospaceBaseResultsWriter.CreateOutputDir"/>.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.GetGroupFileName(EwEUtils.Core.eVarNameFlags,System.Int32,System.String,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Convert the variable, group index, extention and model time step into a 
 valid group-based file name.
 </summary>
 <param name="varname">Variable, i.e. Biomass.</param>
 <param name="iGrp">Index of the group.</param>
 <param name="strExt">Extention of the file.</param>
 <param name="iModelTimeStep">Time step for the current file. If this is 
 not supplied then no time stamp will appear in the filename.</param>
 <returns>A file name, or an empty string if the specified data is somehow invalid.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.SetAllGroupsSelected">
 <summary>
 Select all groups for writing output
 </summary>
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.SetCatchSelected">
 <summary>
 Select all fished groups for writing output
 </summary>
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.SetAllFleetsSelected">
 <summary>
 Select all fleets for writing output
 </summary>
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.GetFleetFileName(EwEUtils.Core.eVarNameFlags,System.Int32,System.String,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Convert the variable, fleet index, extention and model time step into a 
 valid fleet-based file name.
 </summary>
 <param name="varname">Variable, i.e. Biomass.</param>
 <param name="iFlt">Index of the fleet.</param>
 <param name="strExt">Extention of the file WITHOUT a period.</param>
 <param name="iModelTimeStep">Time step for the current file. If this is 
 not supplied then no time stamp will appear in the filename.</param>
 <returns>A file name.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBaseResultsWriter.EcopathData">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwECore.cEcopathDataStructures">Ecopath data structure</see>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceBaseResultsWriter.EcospaceData">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwECore.cEcospaceDataStructures">Ecospace data structures</see>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceBaseResultsWriter.ScaleValue(System.Double,EwECore.cEcospaceTimestep,System.Int32,EwEUtils.Core.eVarNameFlags)">
 <summary>
 Recalculate / rescale a value before it is written to the 
 output file.
 </summary>
 <param name="value"></param>
 <param name="SpaceTSData"></param>
 <param name="iIndex"></param>
 <param name="varname"></param>
 <returns></returns>
</member>
<member name="T:EwECore.cEcospaceRegionAvgResultsWriter">
 ---------------------------------------------------------------------------
 <summary>
 Implementation of <see cref="T:EwEUtils.Core.IEcospaceResultsWriter">IEcospaceResultsWriter</see> 
 and <see cref="T:EwECore.cEcospaceBaseResultsWriter">cEcospaceBaseResultsWriter</see> 
 to write Ecospace area averaged results to csv files. This class provides 
 the framework for writing the file. The actual data is supplied by an implementation 
 of <see cref="T:EwECore.cEcospaceResultsWriterDataSourceBase">cEcospaceResultsWriterDataSourceBase</see> 
 that supplies the data in a generic format.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceRegionAvgResultsWriter.eDataSourceTypes">
 <summary>
 Types of result objects
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcospaceRegionAvgResultsWriter.StartWrite">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.StartWrite"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceRegionAvgResultsWriter.WriteResults(System.Object)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.WriteResults(System.Object)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceRegionAvgResultsWriter.EndWrite">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.EndWrite"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceRegionAvgResultsWriter.DisplayName">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cEcospaceBaseResultsWriter.DisplayName"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceRegionAvgResultsWriter.CreateOutputDir">
 <summary>
 Make sure output directory is defined and available.
 </summary>
</member>
<member name="M:EwECore.cEcospaceRegionAvgResultsWriter.DataSourceFactory(EwECore.cEcospaceRegionAvgResultsWriter.eDataSourceTypes,System.Int32)">
 <summary>
 Creates a new cResultsDataSourceBase object
 </summary>
 <param name="ResultType"></param>
 <param name="RegionIndex"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.cEcospaceResultWriterFactory">
 ---------------------------------------------------------------------------
 <summary>
 Factory class for creating an <see cref="T:EwEUtils.Core.IEcospaceResultsWriter"/>
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceResultWriterFactory.GetWriters(EwEPlugin.cPluginManager)">
 -----------------------------------------------------------------------
 <summary>
 Get all the Ecospace result writers provided by the EwE core and plug-ins
 </summary>
 <param name="pm">The plug-in manager instance to consult, if any.</param>
 <returns>An array of all avaliable result writers.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceXYZTResultsWriter">
 ---------------------------------------------------------------------------
 <summary>
 Implementation of <see cref="T:EwEUtils.Core.IEcospaceResultsWriter">IEcospaceResultsWriter</see> 
 and <see cref="T:EwECore.cEcospaceBaseResultsWriter">cEcospaceBaseResultsWriter</see> 
 to save Ecospace results to a series of CSV files.
 </summary>
 <remarks>There will be one CSV file for each group containing data for all the time steps.</remarks>
 ---------------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceXYZTResultsWriter.DisplayName">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cEcospaceBaseResultsWriter.DisplayName"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceXYZTResultsWriter.StartWrite">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.StartWrite"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceXYZTResultsWriter.WriteResults(System.Object)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.WriteResults(System.Object)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceXYZTResultsWriter.EndWrite">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.EndWrite"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceXYZTResultsWriter.FileExtension">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cEcospaceBaseResultsWriter.FileExtension"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceXYZTResultsWriter.WriteHeader(System.IO.StreamWriter@,System.Int32,EwEUtils.Core.eVarNameFlags,System.String,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Write run info header.
 </summary>
 <param name="strm">The writer to write to.</param>
 <param name="igrp">The group to write the header for.</param>
 <param name="varname">The variable name to write the header for.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceXYZTResultsWriter.SaveCSV(System.IO.StreamWriter,EwECore.cEcospaceTimestep,System.Int32,EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Save the data to a CSV file.
 </summary>
 <param name="strm"></param>
 <param name="timestep">Time step results providing the values to write.</param>
 <param name="iIndex"></param>
 <param name="varname"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceXYZTResultsWriter.saveXYZ(System.IO.StreamWriter,EwECore.cEcospaceTimestep,System.Int32,EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Saves the data to a XYZ formatted file.
 </summary>
 <param name="strm"></param>
 <param name="SpaceTSData"></param>
 <param name="iIndex"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceXYZTResultsWriter.WriteGroupFileHeaders(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Write headers for the all groups for the given variable.
 </summary>
 <param name="varname"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceXYZTResultsWriter.WriteFleetFileHeaders(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Write headers for the all groups for the given variable.
 </summary>
 <param name="varname"></param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEcospaceResultsWriterDataSourceBase">
 <summary>
 Base class for data source objects used by the <see cref="T:EwECore.cEcospaceRegionAvgResultsWriter">cEcospaceAvgModelAreaResultsWriter</see>
 to write averaged Ecospace results to a csv file. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:EwECore.cEcospaceResultsWriterDataSourceBase.nResults">
 <summary>
 Number of results in the data source. This can be ngroups, nfleets, ngroups * nfleets depending on the data.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cEcospaceResultsWriterDataSourceBase.FilenameIdentifier">
 <summary>
 File identifier use to build the file name
 </summary>
</member>
<member name="P:EwECore.cEcospaceResultsWriterDataSourceBase.DataDescriptor">
 <summary>
 Description of the data used in the header of the file
 </summary>
</member>
<member name="P:EwECore.cEcospaceResultsWriterDataSourceBase.AreaDescriptor">
 <summary>
 Description of the area that is covered by the data. This can be the total area or a region
 </summary>
</member>
<member name="P:EwECore.cEcospaceResultsWriterDataSourceBase.nWaterCells">
 <summary>
 Number of water cells in the area
 </summary>
 <value></value>
</member>
<member name="M:EwECore.cEcospaceResultsWriterDataSourceBase.Init(System.Int32)">
 <summary>
 Init the data source
 </summary>
</member>
<member name="M:EwECore.cEcospaceResultsWriterDataSourceBase.GetResult(System.Int32,System.Int32)">
 <summary>
 Return the result for this index and time step
 </summary>
 <param name="OneBasedIndex">One based index of the result to return</param>
 <param name="TimeIndex">One based time step of the result</param>
</member>
<member name="M:EwECore.cEcospaceResultsWriterDataSourceBase.FieldName(System.Int32)">
 <summary>
 Name of the result field. This can be a group name, fleet name, or a combo of both
 </summary>
</member>
<member name="M:EwECore.cEcospaceResultsWriterDataSourceBase.FileNameAbbreviation">
 <summary>
 Four character abbreviation of Variable and Area
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cEcospaceResultsWriterDataSourceBase.AreaIndex">
 <summary>
 Index of the Region for this datasource
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.cBiomassResultsDataSource">
 <summary>
 Implementation of <see cref="T:EwECore.cEcospaceResultsWriterDataSourceBase">cResultsDataSourceBase</see> for biomass averaged over the total modeled area.
 </summary>
</member>
<member name="T:EwECore.cCatchResultsDataSource">
 <summary>
 Implementation of <see cref="T:EwECore.cEcospaceResultsWriterDataSourceBase">cResultsDataSourceBase</see> for catch averaged over the total modeled area.
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.cCatchResultsDataSource.cCatch">
 <summary>
 Local helper class for remembering bits of a landing record.
 </summary>
</member>
<member name="T:EwECore.cMOTotalResultsDataSource">
 <summary>
 Implementation of <see cref="T:EwECore.cEcospaceResultsWriterDataSourceBase">cResultsDataSourceBase</see> for biomass averaged over the total modeled area.
 </summary>
</member>
<member name="T:EwECore.cRegionBiomassResultsDataSource">
 <summary>
 Implementation of <see cref="T:EwECore.cEcospaceResultsWriterDataSourceBase">cResultsDataSourceBase</see> for averaged biomass by region.
 </summary>
</member>
<member name="T:EwECore.cRegionBiomassResultsDataSource.cRegion">
 <summary>
 Local helper class for remembering bits of a landing record.
 </summary>
</member>
<member name="T:EwECore.cRegionCatchResultsDataSource">
 <summary>
 Implementation of <see cref="T:EwECore.cEcospaceResultsWriterDataSourceBase">cResultsDataSourceBase</see> for averaged catch by region.
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.cRegionCatchResultsDataSource.cRegion">
 <summary>
 Local helper class for remembering region and group/fleet info
 </summary>
</member>
<member name="T:EwECore.cRegionConsuptionResultsDataSource">
 <summary>
 Implementation of <see cref="T:EwECore.cEcospaceResultsWriterDataSourceBase">cResultsDataSourceBase</see> for averaged biomass by region.
 </summary>
</member>
<member name="T:EwECore.cRegionConsuptionResultsDataSource.cRegion">
 <summary>
 Local helper class for remembering bits of a landing record.
 </summary>
</member>
<member name="T:EwECore.EcoSpaceTimeStepDelegate">
 <summary>
 Definition of Time Step Delegate used for notification of an Ecospace time step
 </summary>
</member>
<member name="T:EwECore.cEcoSpace.cThreadedCallArgs">
 <summary>
 Arguments for PredictEffortDistributionThreaded()
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcoSpace.m_pluginManager">
 <summary>To call the plugins</summary>
</member>
<member name="F:EwECore.cEcoSpace.Btime">
 <summary>Sum of Biomass for all the cells in the current time step </summary>
</member>
<member name="F:EwECore.cEcoSpace.ConTotal">
 <summary>Sum of cCell (contaminant)for all the cells in the current time step </summary>
</member>
<member name="F:EwECore.cEcoSpace.FlowoutRate">
 <summary>
 Loss as a rate loss/biomass
 </summary>
</member>
<member name="F:EwECore.cEcoSpace.Tstanza">
 <summary>
 Tstanza() Proportion of year for a stanza age class ([number of months in age class] / 12)
 used to scale annual rates to monthly
 </summary>
</member>
<member name="F:EwECore.cEcoSpace.loss">
 <remarks>
 EwE5 loss() is global and the same variable is used for both Ecosim and Ecospace
 EwE6 loss for Ecosim in declared in cEcosimDataStructres so that it can be used to initialize Wchange() in Ecospace
 loss for Ecospace is private and computed in DerivtRed()
 So if you need the loss from Derivt() use cEcoSimDataStructres.loss() not cEcoSpace.loss()!!!!!!
 </remarks>
</member>
<member name="F:EwECore.cEcoSpace.IecoCode">
 <summary>
 Converts an iGroup into a cumulative stanza index Nvarsplit
 </summary>
 <remarks>Populated in initSpatialEqulibrium().  
 Use to access stanza varaibles that are stored after the groups in biologial indexes of spatial matrixes.
 </remarks>
</member>
<member name="F:EwECore.cEcoSpace.nEcospaceTimeSteps">
 <summary>
 Total number of time step
 </summary>
 <remarks>set in redimForRun()</remarks>
</member>
<member name="F:EwECore.cEcoSpace.its">
 <summary>
 This is the index to the imonth for data arrayed by month i.e. zscale()
 </summary>
 <remarks>If the user has set the Ecospace time step to some value other than monthly this index will point to the first month of the time step.
 For example timestep = 0.5 first loop its = 1 second loop its = 7</remarks>
</member>
<member name="F:EwECore.cEcoSpace.itt">
 <summary>
 Cumulative itime step array index at the current user selected time step.
 </summary>
</member>
<member name="F:EwECore.cEcoSpace.nSpinUp">
 <summary>Number of timesteps in the total Spin-Up period</summary>   
</member>
<member name="F:EwECore.cEcoSpace.nSpinUpYear">
 <summary>Number of timesteps in one year used by Spin-Up.</summary>   
</member>
<member name="F:EwECore.cEcoSpace.iSpinUp">
 <summary>Cumulative Spin-Up counter</summary>   
</member>
<member name="F:EwECore.cEcoSpace.iSpinUpYear">
 <summary>Yearly Spin-Up counter</summary>   
</member>
<member name="F:EwECore.cEcoSpace.bInitSpinUpBase">
 <summary>Does the Spin-Up base biomass need initialization</summary>
</member>
<member name="F:EwECore.cEcoSpace.Ecode">
 <summary>
 Converts a cumulative stanza index(Nvarsplit) into an iGroup index
 </summary>
 <remarks>Computed in initSpatialEquilibrium(). 
 This is the opposite of IecoCode().
 </remarks>
</member>
<member name="F:EwECore.cEcoSpace.RelRepStanza">
 <summary>
 1/StartBiomass of oldest stanza for this split
 </summary>
 <remarks>RelRepStanza(Nsplit)</remarks>
</member>
<member name="F:EwECore.cEcoSpace.nvar2">
 <summary>
 Index of the first element after the end of the groups
 </summary>
 <remarks>This is used for the split group indexes that are stored after the end groups for arrays that are dimensioned by nTotVars</remarks>
</member>
<member name="P:EwECore.cEcoSpace.Messages">
 -----------------------------------------------------------------------
 <summary>
 Exposes the MessagePublisher instance so that the core can add message handlers
 </summary>
 <remarks>
  All messages from EcoSpace to the core are passed via this MessagePublisher. 
  The core adds a message handler during Ecospace initialization <see cref="M:EwECore.cCore.InitEcospace"> InitEcospace()</see> 
 </remarks>
 ----------------------------------------------------------------------- 
</member>
<member name="P:EwECore.cEcoSpace.EcoPathData">
 <summary>
 Ecopath data used for initial state
 </summary>
</member>
<member name="P:EwECore.cEcoSpace.EcoSimData">
 <summary>
 Ecosim data used for initial state
 </summary>
</member>
<member name="M:EwECore.cEcoSpace.InitToDefaults">
 <summary>
 Initialize base varaibles with the default values
 </summary>
 <returns></returns>
 <remarks>Was MPAMoveLoadFormTasks() in EwE5. Most of this was moved to cEcoSpaceDataStructures.SetDefaults() </remarks>
</member>
<member name="M:EwECore.cEcoSpace.Run">
 <summary>
 Run Ecospace synchronously. cEcoSpace.Run() will not return until the Ecospace run has completed.
 </summary>
 <returns>True if Ecospace ran successfully. False otherwise.</returns>
 <remarks>
 cEcoSpace.Run() runs Ecospace on the same thread as the calling routine. 
 It is used when you need run Ecospace in some kind of a looping structure 
 and gather the results at the end of each run. 
 <see cref="M:EwECore.cMPARandomSearch.runSearch">MPA Optimization </see> 
 </remarks>
</member>
<member name="M:EwECore.cEcoSpace.RunThreaded">
 <summary>
 Run EcoSpace on a seperate thread from the calling routine. This will return before the EcoSpace run has completed.
 </summary>
 <returns>True if the EcoSpace run was successfully started, this does not mean the run has successfully completed. False otherwise.</returns>
 <remarks>
 Starts EcoSpace running on a seperate thread and returns immediately. 
 Once the EcoSpace run has completed the <see cref="P:EwECore.cEcoSpace.RunCompletedDelegate">RunCompletedDelegate</see> 
 will be called with the success or failure of the run.   
 Used by the interface so running EcoSpace does not block the interface.
</remarks>
</member>
<member name="M:EwECore.cEcoSpace.RunSpace">
 <summary>
 Provides a wrapper around run so the Run() function signature matches the ThreadStart delegate signature
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.FindSpatialEquilibrium">
 <summary>
 
 </summary>
 <remarks>
 This routine attempts to seek spatial equilibrium in ecosim biomasses, given mpa pattern
 and start density map based on no movement
</remarks>
</member>
<member name="M:EwECore.cEcoSpace.HACKAutoPause(System.Int32)">
 <summary>
 One Off to pause the model at a fixed timestep to allow the user to grab maps, plots...
 </summary>
 <param name="month"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.setTimeStepCounters(System.Int32@,System.Int32@)">
 <summary>
 Set time step index counters. This includes setting the counters for the Spin-Up period.
 </summary>
 <param name="iCumTimeStep">Cumulative time step counter.</param>
 <param name="iDataTimeStep">Time step counter use to access data arrayed on cumulative month.</param>
 <remarks>This also sets YearNow and MonthNow yearly and monthly indexes.</remarks>
</member>
<member name="M:EwECore.cEcoSpace.AccumulateFitStats(System.Int32,System.Single[0:,0:,0:])">
 <summary>
 Call Ecosim.AccumulateDataInfo() to gather the fit to time series stats once a year at the end of the sixth month
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.ForceBiomassWithEcosimTimeSeries(System.Int32)">
 <summary>
 VC stole this from Ecosim 
 Force Ecospace Biomass with Ecosim time series forced biomass 
 </summary>
</member>
<member name="M:EwECore.cEcoSpace.UpdateDepthMap">
 <summary>
 Update the Depth(,) map used by Ecospace with the Excluded layer
 </summary>
</member>
<member name="M:EwECore.cEcoSpace.SetExcludedDepth(System.Int32)">
 <summary>
 Exclude cells at and past a specified depth.
 </summary>
 <param name="iDepth">The minimum depth to exclude.</param>
</member>
<member name="M:EwECore.cEcoSpace.ClearExcludedCells">
 <summary>
 Reset the map of excluded cells to include the entire map into computations.
 </summary>
</member>
<member name="M:EwECore.cEcoSpace.InvertExcludedCells">
 <summary>
 Inverts the map of excluded cells.
 </summary>
</member>
<member name="M:EwECore.cEcoSpace.AllocateIBMStanzaPerThread">
 <summary>
 JS 31-Mar-2021. Linked stanza recruitment requires that IBM packet growth is performed in
 for the 'leading' recruitment stanzas first. The thread allocation of stanzas is done here
 </summary>
</member>
<member name="M:EwECore.cEcoSpace.redimForRun">
 <summary>
 Redim or Clear all variables that are needed for an Ecospace run
 </summary>
 <remarks>In EwE5 this was handled inside FindSpatialEquilibrium. 
 These are variables that will be populated by the Ecospace initialization initSpatialEquilibrium().
 This should not contain any data that was populated by the database.
 </remarks>
</member>
<member name="M:EwECore.cEcoSpace.derivtRed(System.Single[],System.Single[]@,System.Single[]@,System.Single[],System.Single[]@,System.Single)">
 <summary>
 Local version of derivtRed() used by Ecospace during initialization ONLY 
 </summary>
 <param name="Biomass">Input Biomass of all the groups</param>
 <param name="Flowin">Ouput Flow of biomass into a cell  </param>
 <param name="FlowoutRate">Output Rate of biomass flow out of a cell</param>
 <param name="EatEff">Input consumption efficiency 1 by default</param>
 <param name="VulPred">Input predation vulnerability 1 by default</param>
 <param name="RelProd">Input relative primary production 1 by default</param>
 <remarks>
 WARNING This version of derivtRed() is used only during initialization NOT during main time loop. <see cref="T:EwECore.cSpaceSolver" >cSpaceSolver.derivtRed()</see> for time loop derivtRed().
 </remarks>
</member>
<member name="M:EwECore.cEcoSpace.ScaleRelativePrimaryProductivityToEcopathLevel">
 -----------------------------------------------------------------------
 <summary>
 Returns a scaling factor to ensure that the total primary productivity 
 is the same in Ecospace and Ecopath.
 </summary>
 <returns>
 The average PP value for all cells in the RelPP map.
 Calculated from the base value of RelPP(row,col).
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcoSpace.ScaleSailingCost">
 <summary>
 Scaling Sailing cost 
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.ScaleSailingToUnity">
 <summary>
 This function is used to scale the sailing cost so that _
 it is the same in Ecospace and Ecopath
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.RelMove(System.Int32,System.Int32,System.Int32)">
 <summary>
 Returns the relative movement from bad habitat multiplier based on preferred habitat and percentage of habitat type in the cell.
 <see cref="F:EwECore.cEcospaceDataStructures.PrefHab">Preferred habitat</see> 
 <see cref="F:EwECore.cEcospaceDataStructures.PHabType">Percentage of habitat type in a cell</see>
 </summary>
 <param name="ip">Group index</param>
 <param name="i">Map Row</param>
 <param name="j">Map Col</param>
 <returns>
 One if this cell contains any preferred habitat for this group.
 Otherwise returns Relative movement from bad habitat from the interface.
 </returns>
 <remarks>
 This is only used for the migration movement <see cref="M:EwECore.cEcoSpace.VaryMigMovementParameters(System.Int32)"> Migration movement</see>. 
 Movement/difussion rates across cells are set in <see cref="M:EwECore.cEcoSpace.SetMovementParameters">SetMovementParameters</see> 
 based on habitat capacity <see cref="F:EwECore.cEcospaceDataStructures.HabCap">HabCap</see>.
 </remarks>
</member>
<member name="M:EwECore.cEcoSpace.setIsFished">
 <summary>
 Evaluate the <see cref="F:EwECore.cEcospaceDataStructures.IsFished">fishing access map</see> for the current month.
 </summary>
</member>
<member name="M:EwECore.cEcoSpace.PredictEffortDistributionThreadedLoadShared(System.Object)">
 <summary>
 Threaded and Load Shared Version
 This routine predicts spatial effort and fishing mortality rate
 distribution by gear type; called at each iteration
 step in finding biomass spatial equilibrium
 model below is a gravity attraction model, distributing
 total efforts TotEffort(gear) over all cells where each gear can fish
 in proportion to relative profitability (catch rate x price sum) for that cell for the gear
 </summary>
 <remarks>
 The load sharing works by spinning in a loop requesting the next available fleet to process. 
 Once all the fleets have been processed the thread will exit.
 </remarks>
</member>
<member name="M:EwECore.cEcoSpace.runEffortDistributionNoLoadShare(System.Int32,System.Int32,System.Int32)">
 <summary>
 Run the PredictEffortDistribution on multiple threads
 </summary>
 <param name="iMonth"></param>
 <param name="iCumMonth"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.runEffortDistributionLoadShared(System.Int32,System.Int32,System.Int32)">
 <summary>
 A load sharing version of Threaded Effort Distrubtion threads
 </summary>
 <param name="iMonth"></param>
 <param name="iCumMonth"></param>
 <remarks>
 In this version the effort distribution threads will request the next available fleet for effort distribution. 
 Once all the fleets have been completed all the threads will exit.  
 </remarks>
</member>
<member name="M:EwECore.cEcoSpace.AdjustTotalEffort">
 <summary>
 This is a modified version of PredictEffortDistribution, to be called only once at around simulation
 month 2 or 3; it resets totaleffort(gear) so as to avoid overfishing (relative to ecopath base) on concentrated species
 modifications to PredictEffortDistribution are ahown as '***
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.solvetime(System.Int32,System.Single[0:,0:,0:],System.Single[0:,0:,0:],System.Single[0:,0:,0:],System.Int32,System.Int32,System.Single,System.Int32[],System.Single)">
 <summary>
 solvetime() is not called at this time. It has been left in for reference
 </summary>
 <param name="ip"></param>
 <param name="Aloc"></param>
 <param name="Floc"></param>
 <param name="X"></param>
 <param name="M"></param>
 <param name="NomCols"></param>
 <param name="Tol"></param>
 <param name="jord"></param>
 <param name="Dt"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.getMigMoveRate(System.Single[0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Calculate the directional flow rate (Bcw,c,d,e) dependant on migratory movement. 
 Base dispersal if inside a migratory area, rapid dispersal if outside migratory area.
 </summary>
 <param name="BaseFlow">Directional flow rate for a cell. Bcw, c, d or e arrays</param>
 <param name="iGroup"></param>
 <param name="iMonth"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.updateBiomassResults(System.Int32)">
 <summary>
 Keep the Biomass results for this time step after all the calculation have been done. Trophic (deritRed), Spatial distribution (solve grid) and Multi-stanza biomasses updated.
 </summary>
 <param name="iTimeStep">Current cumulative time step.</param>
 <remarks>Biomass is the average across all the water cells</remarks>
</member>
<member name="M:EwECore.cEcoSpace.InitSpaceSolverThreads">
 <summary>
 Creates a spacesolver object for each thread, and initialises them with references to ecospace variables
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.InitIBMSolverThreads">
 <summary>
 Creates a spacesolver object for each thread, and initialises them with references to ecospace variables
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cEcoSpace.UpdateSpaceSolverThreads(System.Int32)">
 <summary>
 This iterates over the list of space solvers, and initializes them with variables calculated by Ecospace, at each time step
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.SpaceSplitUpdate">
 <summary>
  updates numbers, weight, and biomass for multiple stanza species using information 
  on average performance (eatenby, loss) over ecospace grid cells used by the species
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.InitIBM">
 <summary>
 Wraps the initialization of Ecospace IBM 
 </summary>
 <remarks>Initialize IMB packet numbers, weights, and positions</remarks>
</member>
<member name="M:EwECore.cEcoSpace.InitPackets">
 <summary>
 Initialize numbers, weights, and positions ipacket,jpacket for IBM representation
 note must be called in findspatialequilibrium after calls to initialize ecospace
 variables
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.SetNearestOKcellforIBM">
 <summary>
 Finds nearest suitable cell for IBM packets entering a stanza in a cell not suitable for that stanza
 </summary>
 <remarks>
 
 </remarks>
</member>
<member name="M:EwECore.cEcoSpace.setHabCapFromHabitat">
 <summary>
 Set the capacity of each cell in the map based on habitat inputs Habitat Preference and Proportion of Habitat type in cell
 </summary>
 <remarks>Habitat capacity of a map cell = sum product of habitat preference and habitat area in cell</remarks>
</member>
<member name="M:EwECore.cEcoSpace.SetHabCap">
 <summary>
 Set capacity maps from all input sources 
 Habitats, habitat preference, habitat proportion in cell, Input Capacity Maps and enviromental response functions.
 </summary>
 <remarks>
 1.)The Capacity input map and Habitat preferences are summed into the capacity map.
 2.)The Enviromental input maps are multiplied onto the existing capacity. This allows the Enviromental maps to reduce the capacity.
 3.)The capacity map is normalized.
 4.)Capacity gradients are set to move biomass from low to high capacity cells
 </remarks>
</member>
<member name="M:EwECore.cEcoSpace.runAjustLowHabCapsThreaded">
 <summary>
 Create and run the AdjustLowHapCapsThreaded() threads
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.AdjustLowHabCapsThreaded(System.Object)">
 <summary>
 Multithreaded version
 Adjust habcap’s so as to cause oriented movement toward nearest good cells. It should be much, much faster than 
 old habgrad, uses dynamic programming to find minimum distances from bad cells to good ones and then exponential 
 decrease in habcap with those distances; I have used the same algorithm to find things like minimum distances to 
 fishing ports, nice because it even works for moving creatures around island barriers and such.
 </summary>
</member>
<member name="M:EwECore.cEcoSpace.setHabCapFromCapInputMap">
 <summary>
 Set Habitat Capacity map from the user input HabCap map
 </summary>
</member>
<member name="M:EwECore.cEcoSpace.GetEffPowerLessThan(System.Single)">
 <summary>
 Return the fleet indices with effort power lower than a stipulated limit.
 </summary>
 <param name="limit"></param>
 <returns></returns>
</member>
<member name="M:EwECore.cEcoSpace.UpdateMaps(EwEUtils.Core.eDataTypes)">
 <summary>
 Update the capacity map based on the datatype
 </summary>
 <param name="MapDataType"></param>
 <returns>True if the capacity map was changed. False otherwise.</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcoSpace.normalizePropHabType">
 <summary>
 Normalize the proportion of habitat type in a cell that exceed 100% PHabType(ir,ic,ihab).
 </summary>
 <remarks>Sum of all habitat types in a cell must be 100% or less.</remarks>
</member>
<member name="M:EwECore.cEcoSpace.setHabCapFromMaps">
 <summary>
 Set Capacity based on enviromental response functions
 </summary>
 <returns>True if enviromental response functions were used to set habitat capacity. False otherwise.</returns>
 <remarks>
 Enviromental response functions are multiplied onto the existing capacity. 
 This allows the response function to reduce the capacity.
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.DEFAULT_COORDINATESYSTEM">
 <summary>ESRI projection string of the default WGS_84 projection of Ecospace.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.GroupDBID">
 <summary>Array of ecospace group database IDs.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EcopathGroupDBID">
 <summary>Array of mappings to ecopath group database IDs.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.RegionDBID">
 <summary>Array of ecospace region database IDs.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.HabitatDBID">
 <summary>Array of ecospace habitat database IDs.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MPADBID">
 <summary>Array of ecospace MPA database IDs.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.FleetDBID">
 <summary>Array of ecospace Fleet database IDs.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EcopathFleetDBID">
 <summary>Array of mappings to ecopath fleet database IDs.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.PredictEffort">
 <summary>
 Predict fishing effort via the Gravity attraction model
 </summary>
 <remarks>If = True Predict fishing effort based on Fishing Cost Map, Catch Value and Area Fished. If PredictEffort = False then use the Ecopath Effort.</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.AssumeSquareCells">
 <summary>
 Get/set whether Ecospace will use square cells, e.g. will bypass cell width corrections.
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.LinkCellWidthAndSize">
 <summary>
 Bad-ass flag, stating whether cell length can be computed from cell size and vice-versa.
 This should really be properly determined from proper projections
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ProjectionString">
 <summary>
 WKT projection string for the Ecospace coordinate system
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.TimeNow">
 <summary>Current model time step in years. Incremented by <see cref="F:EwECore.cEcospaceDataStructures.TimeStep">TimeStep</see> at the end of the timestep.</summary>
 <remarks>This is the time in years, not the array index.</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.TimeStep">
 <summary>
 Length of the time step in years 
 </summary>
 <remarks>1 month = 0.083333</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.YearNow">
 <summary>Current year that is being executed.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MonthNow">
 <summary>Current month that is being executed.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nFleets">
 <summary>Number of Fishing Fleets </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.NoHabitats">
 <summary>Number of Habitat types defined by the user</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.HabitatText">
 <summary>Descriptive text of habitat type (name) </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.PrefHab">
 <summary>The proportion to which a group prefers a habitat.</summary>
 <remarks>Indexed Group,Habitat</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.PHabType">
 <summary>The proportion of habitat type in a map cell.</summary>
 <remarks>Sparse array (Habitat)(Row,Col)</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.PAreaFished">
 <summary>The proportion of map cell that is fished by a fleet.</summary>
 <remarks>
 Computed in cEcoSpace.SetEffortParameters()
 Spares Indexed (Gear)(Row,Col)
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.GearHab">
 <summary>Does this Fishing fleet use this habitat type </summary>
 <remarks>Indexed Fleet,Habitat</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.HabArea">
 <summary>
 Total number of habitat cells by habitat type
 </summary>
 <remarks>Caluclated in CalcHabitatArea()</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.HabAreaProportion">
 <summary>
 Proportion of total area used by a habitat type
 </summary>
 <remarks>HabAreaProportion(iHab) = HabArea(iHab) / TotalHabitatArea </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.FitnessResp">
 <summary>
 Inverse of emigration response to fitness
 </summary>
 <remarks>In EwE5 there is no variable for this it is read from the interface when it is needed</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.InRow">
 <summary>Number of rows in the current base map</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.InCol">
 <summary>Number of rows in the current base map</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.CellLength">
 <summary>Length in KM of a cell, used for dispersal etc.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Lat1">
 <summary>Latitude of upper left coordinate of the current basemap.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Lon1">
 <summary>Longitude of upper left coordinate of the current basemap.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Nvarsplit">
 <summary> Total number of stanza groups </summary>
 <remarks>Sum of nStanza(isplit) for each stanza. Set in RedimMapVars()</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nvartot">
 <summary>total number of all groups </summary>
 <remarks>Nvarsplit + nGroups. Set in RedimMapVars() Used for dimensioning</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nWaterCells">
 <summary>Total number of cells that have water </summary>
 <remarks>computed in ScaleRelativePrimaryProductivityToEcopathLevel()</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Mrate">
 <summary>Movement rate?!</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Mvel">
 <summary>Base dispersal rate as entered by the user</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.InMigAreaMovement">
 <summary> Weighting for directed movement within a migratory area (groups)</summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Bcell">
 <summary>Biomass by cell (row, col, group)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Ccell">
 <summary>Contaminant by cell (row, col, group)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MOLoss">
 <summary>
 Total biomass loss due to Mortality Other
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Depth">
 <summary>Actual depth map as used by Ecospace, computed from <see cref="F:EwECore.cEcospaceDataStructures.DepthInput"/> and <see cref="F:EwECore.cEcospaceDataStructures.Excluded"/>.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.CatchMap">
 <summary>Catch by Row, Col, Group.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.CatchFleetMap">
 <summary>Catch by Row, Col, Fleet.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.DiscardsMap">
 <summary>Discards (all? mortality?) by Row, Col, Group.</summary>
 <remarks>This is not exposed by the interface at this time. It was included for the Biodiversity plugin and can only be accessed via code.</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.DepthInput">
 <summary>User-entered depth map</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Excluded">
 <summary>Is a cell included in modeling by Row, Col.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.CellArea">
 <summary>Modeled area, in area units^2 by Row, Col.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.TL">
 <summary>Trophic Level by Row, Col, Group.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.TLc">
 <summary>Trophic Level of the catch by Row, Col.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.KemptonsQ">
 <summary>Kemptons Q by Row, Col.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ShannonDiversity">
 <summary>ShannonDiversity by Row, Col.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MonthlyXwind">
 <summary>Wind X velocity (month)(i x j)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MonthlyYwind">
 <summary>Wind Y velocity (month)(i x j)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MPA">
 <summary>
 MPA layout, dimensioned as mpa x (row, col)
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.RelPP0">
 <summary>
 Base value for relative PP (relative PP at t=0). Set after PP has been read from the database.
 </summary>
 <remarks>RelPP can be changed by external data this is use to restore RelPP to its original value</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Sail">
 <summary>
 Sailing cost (fleet x row x col)
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.BBase">
 <summary>
 Ecospace base biomass gathered at the end of the first timestep after any spinup period.
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nImportanceLayers">
 <summary>Number of Importance layers</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ImportanceLayerMap">
 <summary>Importance layer data (layer)(row, col)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nEnvironmentalDriverLayers">
 <summary>Number of environmental layers</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EnvironmentalLayerDBID">
 <summary>Environmental layer database IDS</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EnvironmentalLayerName">
 <summary>Environmental layer names</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EnvironmentalLayerDescription">
 <summary>Environmental layer descriptions</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EnvironmentalLayerUnits">
 <summary>Environmental layer units</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EnvironmentalLayerMap">
 <summary>Environmental layer data (layer)(row, col)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EnvironmentalLayerCapacityDisabled">
 <summary>Environmental layer capacity disabled flag (layer)</summary>
</member>
<member name="P:EwECore.cEcospaceDataStructures.AllowHabCapGradientCorrections">
 <summary>
 If true, Ecospace is allowed to recalculate the habitat 
 capacity gradient if input capacity contains values less than <see cref="P:EwECore.cEcospaceDataStructures.MinHabCap"/> 
 If false, Ecospace is only allowed to adjust 
 </summary>
</member>
<member name="P:EwECore.cEcospaceDataStructures.MinHabCap">
 <summary>
 A customizable lowest limit for acceptable habitat 
 capacity values. 
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.NumStep">
 <summary>
 Number of time steps for averaging summary window data
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.SumStart">
 <summary>Start time of the first and second summary data period. In Years </summary>
 <remarks> Data is summarized over two time periods set by SumStart(0) and SumStart(1). The number of time steps to summarize over is set in NumStep.
 Defaults are set in redimTimeVariables().
 Used in cEcospace.summarySetTimeStep() to set the index to store the summary data in. The first or second summary period.
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ResultsCatchRegionGearGroup">
 <summary>ResultsCatchRegionGearGroup( nRegions, nFleets, nGroups, nTimesteps)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ResultsCatchRegionGearGroupYear">
 <summary>ResultsCatchRegionGearGroup( nRegions, nFleets, nGroups, nYears)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ResultsByFleet">
 <summary>ResultsByFleet(nvars,nFleets,NumberOfTimeSteps)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ResultsByFleetGroup">
 <summary>ResultsByFleetGroup(nvars, nFleets, nGroups, nTimesteps)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ResultsRegionGroup">
 <summary>ResultsRegionGroup(nRegions, nGroups, nTimesteps)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ResultsRegionGroupYear">
 <summary>ResultsRegionGroup(nRegions, nGroups, nYears)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ResultsRegionConsumptionPredPrey">
 <summary>ResultsConsumptionPredPrey(nRegions, nGroups, nGroups, nTimesteps)</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ResultsByGroup">
 <summary> Summarized time step data </summary>
 <remarks>populated in sumarizeTimeStepData()</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Landings">
 <summary> Sum of landings across all cells by Group/Fleet for the current timestep </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.IsMigratory">
 <summary>IsMigratory flag, per group.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.PrefRow">
 <summary>Migration preferred row (group, month).</summary>
 <remarks>In the original version of Ecospace this value was entered as point.
 In the migration update of Ecospace this value will be calculated from a monthly migration map</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Prefcol">
 <summary>Migration preferred column (group, month).</summary>
 <remarks>In the original version of Ecospace this value was entered as point.
 In the migration update of Ecospace this value will be calculated from a monthly migration map</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MigConcRow">
 <summary>North-south migration concentration, per group.</summary>
 <remarks>In the oringial version of Ecospace this value was entered as a fixed value per group.
 In the migration update of Ecospace this value will be calculated from a monthly migration map</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MigConcCol">
 <summary>East-west migration concentration, per group.</summary>
 <remarks>In the oringial version of Ecospace this value was entered as a fixed value per group.
 In the migration update of Ecospace this value will be calculated from a monthly migration map</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.SailScale">
 <summary>
 Average value in the <see cref="F:EwECore.cEcospaceDataStructures.Sail">Sail(fleet,row,col)</see> map for all water cells.
 </summary>
 <remarks>
 Used only to distribute total effort across the cells. Does not effect the total effort.
 If <see cref="F:EwECore.cEcospaceDataStructures.bUseEffortDistThreshold">bUseEffortDistThreshold</see> = True this will only include cells below the fishing effort threshold</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.SEmult">
 <summary>
 Sailing Effort Multiplier by Fleet
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Ftot">
 <summary>
 Total fishing mortality by group,row,col
 </summary>
 <remarks>calculated in PredictEffortDistribution() Sum of EffortSpace() * catchability (EcoSim.relQ)</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EffortSpace">
 <summary>
 Fishing Mortality (catchrate) by a fleet for each cell fleet,row,col
 </summary>
 <remarks>Computed from Ecosim.FishRateGear(fleet,time) and "gravity attraction" in PredictEffortDistribution()  </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MPAno">
 <summary>Number of MPAs</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MPAmonth">
 <summary>MPA monthly open/closed state (Month x MPA), true when open for fishing.</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MPAfishery">
 <summary>MPA enforcement (fleet x MPA), true if an MPA is open to fishing for a given fleet</summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.IsFished">
 <summary>Fleet/Gear cell access (fleet, row, col).</summary>
 <remarks>JS added 12 Sept 12 to determine fleet cell fishing access for the mao once 
 for every time step. This is done to facilitate overlapping MPAs.</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.W">
 <summary>
 SOR weight 
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.Tol">
 <summary>
 Iteration tolerance for solvegrid.
 </summary>
 <remarks>
 High values will be less accurate, but with less computing time. Reasonable values: 0.1-0.000001.
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.maxIter">
 <summary>
 Maximum number of iterations that solvegrid will use to find the implicit solution for the next timestep
 </summary>
 <remarks>
 Lower numbers will be faster but less accurate. needs to be set in reasonable accord to Tol. Reasonable values: 10-100
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nGridSolverThreads">
 <summary>
 Number of threads to use for the grid solvers
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nIBMMovementSolverThreads">
 <summary>
 Number of threads to use for the IBM Movement
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nSpaceSolverThreads">
 <summary>
 Number of threads to run the groups biomass calculations on 
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nEffortDistThreads">
 <summary>
 Number of effort distribution threads
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.SS">
 <summary>
 Sum of Squares fit to reference data
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.barrierAvoidanceWeight">
 <summary>
 <para>This determines how much weight is put into the pathfinding movement algorithm for migratory species.
 If fish are getting caught in complex habitat, increasing this value will help the fish get "un-stuck".</para>
 <para>Possible values [0-1]</para>
 <para>Increasing this will increase the concentration of the fish, so the regular NS/EW concentrations should
 be lowered to keep the concentration the same.</para>
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MPred">
 <summary>Predation rate by Row, Col, Prey/Pred link</summary>
 <remarks>Added for Model coupling</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.GroupDetritus">
 <summary>Detritus by Row, Col, group</summary>
 <remarks>Added for Model coupling</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.HabCap">
 <summary>
 Habitat Capacity by Row,Col,Group
 </summary>
 <remarks>Habitat capacity is the normalized Capacity of all inputs (maps and response functions)  <see cref="M:EwECore.cEcoSpace.SetHabCap">Ecospace.SetHabCap</see> </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.HabCapInput">
 <summary>
 User defined input habitat capacity.
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MOProp">
 <summary>
 Other mortality multiplier by Row,Col,Group
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.TotHabCap">
 <summary> Sum of Capacity across the map cells by group </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MaxHabCap">
<summary>max capacity by group</summary>
 <remarks>Used to check that the user has set capacities for all groups </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.UseCoreOutputDir">
 <summary>
 Use the Ecospace Output directory defined by the core. If True this path will include Model-name/Ecopath_6. Scenario-name/
 If False just the core output directory.
 </summary>
 <remarks>
 This allows you to set the Ecospace output directory from code. 
 You could loop over a bunch of different cases and set the output dir for each case.
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.CapacityResponseFunctions">
 Array index of the Capacity Response shape/function that gets applied to this driver
 Stored by Environmental driver index (map), Group index
 ishape = CapMapFunctions(iEnviroDriver,iGroup)
</member>
<member name="F:EwECore.cEcospaceDataStructures.MortalityResposeFunctions">
 <summary>
 Array index of the MO Response shape/function that gets applied to this driver
 Stored by Environmental driver index (map), Group index
 ishape = MortalityResposeFunctions(iEnviroDriver,iGroup)
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MortalityResponseDrivers">
 <summary>
 Array of IEnviroInputData objects(in this case containing driver layers) that have been applied as MO Mortality Response functions
 Initialized in cEcospaceMortalityResponseManager.Load()
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.CapCalType">
 <summary>
 Capacity calculation type per group
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ItoUse">
 <summary>
 Nearest suitable map row (iPacket) for an IBM Packet by nStanzaGroups(nSplit), MaxStanzas, row, col
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.JtoUse">
 <summary>
 Nearest suitable map col (jPacket) for an IBM Packet by nStanzaGroups(nSplit), MaxStanzas, row, col
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.PPScale">
 <summary>
 Primary Production Scaler average value of relPP(row,col) for all water cells
 </summary>
 <remarks>computed by ScaleRelativePrimaryProductivityToEcopathLevel() set in InitSpatialEquilibrium. 
 In EwE5 this was local to FindSpatialEquilibrium. Here it has been move up in scope so that FindSpatialEquilibrium() can be split up into components.
 Init (InitSpatialEquilibrium), run (FindSpatialEquilibrium) ......
 10-May-2012 Moved to cEcoSpaceDataStructures so PPScale can be set by the External PP Spatial Temporal data 
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.BRatio">
 <summary>
 Ratio of habitat area to total habitat capacity 
 </summary>
 <remarks>
 BRatio(group) = ThabArea / TotHabCap(group) 
 [total habitat area] / [sum of habitat capacity by group] 
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.FleetSailCells">
 <summary>
 List of map cells that have a value in the Sail(,,)array less than EffortDistThreshold
 </summary>
 <remarks>Populate in <see cref="M:EwECore.cEcospaceDataStructures.PopulateFleetCells"></see></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.bUseEffortDistThreshold">
 <summary>
 Boolean flag is fishing effort restricted to cells with a Sail() of less than EffortDistThreshold
 </summary>
 <remarks>True if fishing effort is restricted. False effort is distributed over all water cells.</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EffortDistThreshold">
 <summary>
 Threshold value in the Sail(fleet,row,col) [sailing cost map] for a cells inclusion in effort distribution. 
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.ThabArea">
 <summary>
 Total number of habitat area cells
 Any cell with a depth > 0 of any habitat type
 </summary>
 <remarks>computed in CalcHabitatArea()</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.bCalTrophicLevel">
 <summary>
 Calculate the TrophicLevel map in Ecospace. 
 True Ecospace will populate the <see cref="F:EwECore.cEcospaceDataStructures.TL">TrophicLevel</see> map in cEcospaceDataStructures.TL. 
 </summary>
 <remarks>This incurs significant overhead so it is Off(False) by default. At this time is can only be turned ON(True) via code.</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.nEffZones">
 <summary>
 Number of fishing effort zones (LME's, EEZ...)
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.PropEffortFleetZone">
 <summary>
 Proportion of relative fishing effort for a fleet in an zone(LME,Region....) by nFleets, nEffZones
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EffZones">
 <summary>
 Index of the Effort Zone a cell is in by Row Col
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.TotEffort">
 <summary>
 Sum of Effort modified by proportion of area fished in a cell.
 </summary>
 <remarks>
 Set in <see cref="M:EwECore.cEcoSpace.SetEffortParameters(System.Boolean)"> cEcospace.SetEffortParameter()
 </see></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.UseSpinUp">
 <summary>
 Use a "Spin-Up" period for Ecospace
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MOLayerChanged">
 <summary>
 List of MO layer indexs that have changed.
 This will be updated(set to changed) when a layer is loaded by the spatial temporal framework
 See cCapacityDataAdapter.Adapt
 </summary>
</member>
<member name="P:EwECore.cEcospaceDataStructures.bInSpinUp">
 <summary>Are we in a Spin-Up period?</summary>   
</member>
<member name="P:EwECore.cEcospaceDataStructures.SpinUpYears">
 <summary>
 Number of years to run the Spin-Up for
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.SpinUpBBase">
 <summary>
 Ecospace base biomass before the Spin-Up period. Gathered at the end of the first timestep.
 </summary>
 <remarks>Only populted if UseSpin = True</remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.hasCapInitialized">
 <summary>
 The Capacity model has a "one time" initialization of  <see cref="F:EwECore.cEcospaceDataStructures.MaxHabCap"></see> value used for normalization of inputs.
 This Flag gets set to True once MaxHabCap() has been set 
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EcospaceMapOutputDir">
 <summary>
 User defined output directory for Ecospace output Maps
 </summary>
 <remarks>
 Not used by the Scientic Interface. 
 This is only used if UseCoreOutputDir = False and EcospaceMapOutputDir is not null.   
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.EcospaceAreaOutputDir">
 <summary>
 User defined output directory for Ecospace Area Averaged outputs
 </summary>
 <remarks>
 Not used by the Scientic Interface. 
 This is only used if UseCoreOutputDir = False and EcospaceAreaOutputDir is not null.
 </remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.FirstOutputTimeStep">
 <summary>
 First model time step to being writing Ecospace output files
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.MigMaps">
 <summary>
 Monthly Migration maps stored in a ragged array 
 Dimensioned by (group,month)(row,col)
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cEcospaceDataStructures.IsEcosimBioForcingGroup">
 <summary>
 Is the Ecosim biomass time series forcing enabled for this group
 </summary>
</member>
<member name="F:EwECore.cEcospaceDataStructures.bSaveThreadingLog">
 <summary>
 Save the threading run time log. By default this will be turned off, the log will not be saved. 
 Used by plugins or external process to optimize run threading.
 </summary>
</member>
<member name="P:EwECore.cEcospaceDataStructures.isCapacityChanged">
<summary>
 Have any of the capacity input layers changed
 </summary>
 <remarks>Capacity Inputs, Habitats, Environmental layers, depth....</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.setHabCapGroupIsChanged(System.Boolean)">
 <summary>
 Set the isGroupHabCapChanged() flag to True or False for all the groups
 </summary>
 <param name="Value"></param>
 <remarks></remarks>
</member>
<member name="P:EwECore.cEcospaceDataStructures.isFishingHabitatChanged">
<summary>
 Habitat input layers have changed, which could affect fishing
 </summary>
</member>
<member name="P:EwECore.cEcospaceDataStructures.NGroups">
 <summary>Number of Base Groups (Ecopath) </summary>
 <remarks>This was nvar in EwE5</remarks>
</member>
<member name="P:EwECore.cEcospaceDataStructures.nTimeStepsPerYear">
 <summary>
 Number of Ecospace time steps per year at the current <see cref="F:EwECore.cEcospaceDataStructures.TimeStep">time step</see>
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cEcospaceDataStructures.isAdvectionActive">
 <summary>
 Returns whether any group is Advected
 </summary>
</member>
<member name="P:EwECore.cEcospaceDataStructures.isAdvectionForced">
 <summary>
 Get/set whether advection is forced with external data. If so,
 monthly advection patterns will not be used, and external data is 
 relied on instead.
 </summary>
</member>
<member name="P:EwECore.cEcospaceDataStructures.isEcosimBiomassForcingLoaded">
 <summary>
 Returns whether any group is forced through biomass timeseries in Ecosim.
 </summary>
</member>
<member name="P:EwECore.cEcospaceDataStructures.isEcosimDiscardForcingLoaded">
 <summary>
 Returns whether any group is forced through discards timeseries in Ecosim.
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.SetDefaults">
 <summary>
 Set default values and dimemsion basic arrays
 </summary>
 <returns></returns>
 <remarks>This should be called before reading values from database. I think..... I hope!!!!!!!!!!</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.RedimMPAVariables">
 <summary>
 Redim variables for MPAs
 </summary>
 <remarks>In EwE5 this was handled when Ecosim loaded</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.RedimMigratoryVariables">
 <summary>
 Redim variables for migratory preferences
 </summary>
 <remarks>In EwE5 this was handled when Ecosim loaded</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.RedimHabitatVariables(System.Boolean)">
 <summary>
  Re-dimension the habitat variables
 </summary>
 <param name="PreserveHabitat">True to preserve the existing data in the habitat array. False to clear out this data (load a new model)</param>
 <remarks>
 This is called when ever the number of groups or habitat types changes.
 Called when a new model is loaded (PreserveHabitat = False) or the user has changed the number of habitat types (PreserveHabitat = True).
 If only the number of habitats has changed then it will keep the existing data (PreserveHabitat = True). 
 If the number of groups has changed then all the data must be re-initialized (from the datasource).
</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.DefaultBasemapDimensions">
 <summary>
 Set the Map to its default size
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.ReDimEffortZones">
 <summary>
 Dimensions and sets the number of Effort Zones
 </summary>
 <remarks>Sets PropEffortFleetArea(nFleets,nAreas) to a default of one</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.RedimMigrationMaps(System.Boolean)">
 <summary>
 Make sure there are migration maps for all migrating groups.
 </summary>
 <remarks>
 On the first load new maps should be allocated for all the groups. 
 Once a model has loaded all the existing maps should be preserved and only new maps should get new blank maps.
 This should preserve the users configuration if the turn a migrating group on or off. 
 </remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.PopulateFleetCells">
 <summary>
 Populate <see cref="F:EwECore.cEcospaceDataStructures.FleetSailCells"></see> with a list of map cells in <see cref="F:EwECore.cEcospaceDataStructures.Sail"></see> that are less than <see cref="F:EwECore.cEcospaceDataStructures.EffortDistThreshold"></see>
 </summary>
 <remarks> FleetSailCells is used by <see cref="M:EwECore.cEcoSpace.PredictEffortDistributionThreadedLoadShared(System.Object)"></see> to calculate effort distribution only on cells in the list</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Single[0:,0:,0:,0:]@,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array with 4 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Single[0:,0:,0:]@,System.Int32,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array with 3 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Single[0:,0:][]@,System.Int32,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array with 3 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Boolean[0:,0:][]@,System.Int32,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array with 3 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Boolean[0:,0:,0:]@,System.Int32,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array with 3 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Single[0:,0:]@,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array of singles with 2 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Int32[0:,0:]@,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array with 2 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Int32[0:,0:,0:]@,System.Int32,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array with 3 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Boolean[0:,0:]@,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array of boolean values with 2 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.allocate(System.Int32[0:,0:][]@,System.Int32,System.Int32,System.Int32)">
 <summary>
 Allocate memory for an array with 3 dimensions
 </summary>
 <remarks>Do garbage collection on the discarded memory so memory in never allocated twice.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.redimTimeStepResults(System.Int32)">
 <summary>
 Redim the data that saves the Ecospace results over time
 </summary>
 <remarks>This must be called by Ecospace at the start of a run to clear out any existing data.</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.redimForReferenceData">
 <summary>
 Ecospace spatial reference data not used but left in place for legacy reasons 
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getSumBiomByRegion(System.Int32,System.Int32,System.Single@,System.Single@)">
 <summary>
 Get sum of Biomass by Region Group for the Start and End summary period
 </summary>
 <remarks>Summary time windows are defined by the user</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getSumBiom(System.Int32,System.Single@,System.Single@)">
 <summary>
 Get Biomass for summary periods
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getSumCatchFleetGroup(System.Int32,System.Int32,System.Single@,System.Single@)">
 <summary>
 Get Catch by Fleet Group for summary periods
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getSumValueFleetGroup(System.Int32,System.Int32,System.Single@,System.Single@)">
 <summary>
 Get Value by Fleet Group for summary periods
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getSumCatchFleet(System.Int32,System.Single@,System.Single@)">
 <summary>
 Get Catch by Fleet for summary periods
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getSumCostFleet(System.Single[0:,0:],System.Int32,System.Single@,System.Single@)">
 <summary>
 Get Cost by Fleet for summary periods
 </summary>
 <param name="EcopathCost">Cost from Ecopath actual cost in Ecopath dollars for one unit of Ecopath fishing</param>
 <remarks>Cost is computed from values saved over time because of the was it's calculated</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getSumValueFleet(System.Int32,System.Single@,System.Single@)">
 <summary>
 Get Value by Fleet for summary periods
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getSumEffortES(System.Int32,System.Single@)">
 <summary>
 Get Value by Fleet for summary periods
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getSumCatchRegionGearGroup(System.Int32,System.Int32,System.Int32,System.Single@,System.Single@)">
 <summary>
 Get Catch by REgion, Fleet, Group for summary periods
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.AverageSpatialResults">
 <summary>
 Average the results values over number of water cells
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getStartEndSumIndex(System.Int32@,System.Int32@,System.Int32@)">
 <summary>
 Get the indexes for the user defined time windows that the results data is summarized over
 </summary>
 <param name="startIndex">Index for the first time window</param>
 <param name="endIndex">Index for the end/last time window</param>
 <param name="nIndexes">Number of time steps the user defined to summarize the data over</param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.setBaseRelPP">
 <summary>
 Preserve RelPP map in the <see cref="F:EwECore.cEcospaceDataStructures.RelPP0"/> temporary array.
 </summary>
</member>
<member name="M:EwECore.cEcospaceDataStructures.restoreBaseRelPP">
 <summary>
 Restore RelPP map from the <see cref="F:EwECore.cEcospaceDataStructures.RelPP0"/> temporary array.
 </summary>
 <remarks>
 This will clear the relPP0 temporary array.
 </remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.setDebugCapMaps(EwECore.cMediationDataStructures)">
 <summary>
 Hardwire some Capacity map values
 </summary>
 <remarks>FOR DEBUGGING ONLY</remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.setNWaterCells">
 <summary>
 Count the number of water cells and sets public property nWaterCells
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcospaceDataStructures.getLayerID(EwEUtils.Core.eVarNameFlags,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Return the <see cref="P:EwECore.cCoreInputOutputBase.DBID">unique database ID</see>
 for any Ecospace map layer.
 </summary>
 <param name="varname">The <see cref="T:EwEUtils.Core.eVarNameFlags"/> of the layer to find the database ID for.</param>
 <param name="iIndex">The <see cref="P:EwECore.cCoreInputOutputBase.Index"/> of the layer to find the database ID for.</param>
 <returns>An integer, or <see cref="F:EwECore.cCore.NULL_VALUE"/> if the requested
 layer was not found.</returns>
 <remarks>
 This method is robust to any type of abuse; non-registered <paramref name="varname">variables</paramref>
 and <paramref name="iIndex">indexes</paramref> are dealt with properly.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceDataStructures.getLayerIDs(EwEUtils.Core.eVarNameFlags)">
 -------------------------------------------------------------------
 <summary>
 Obtain a layer DBID for any varname and index.
 </summary>
 <param name="varname"></param>
 <remarks>
 This method is robust to any type of abuse; non-registered <paramref name="varname">variables</paramref>
 are dealt with properly.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="F:EwECore.cEcospaceDataStructures.c_sEquatorLength">
 <summary>Equator length in km.</summary>
 <remarks>http://en.wikipedia.org/wiki/Equator#Exact_length_of_the_Equator</remarks>
</member>
<member name="F:EwECore.cGridSolver.WaitHandle">
 <summary>
 Signal mechanism used by the calling thread for thread Synchronization
 </summary>
 <remarks>
 When the Solve() thread is running (SignalState in a non-signaled state WaitHandle.Reset()) 
 calls to WaitHandle.WaitOne() will block until Solve() has completed (SignalState in a signaled state WaitHandle.Set())
 </remarks>
</member>
<member name="M:EwECore.cGridSolver.Init(System.Single[0:,0:,0:]@,System.Single[0:,0:,0:]@,System.Single[0:,0:,0:]@,System.Int32@,System.Int32@,System.Single@,System.Int32[]@,System.Single@,System.Single[0:,0:,0:]@,System.Single[0:,0:,0:]@,System.Single[0:,0:,0:]@,System.Single[0:,0:,0:]@,System.Single[0:,0:]@,System.Boolean[],System.Int32[]@,System.Int32[]@,System.Single,System.Int32,System.Int32[]@,System.Int32[]@,System.Boolean[]@,System.Int32[0:,0:]@,System.Boolean)">
 <summary>
 Set all references to data used for calculation
 </summary>
 <remarks>This needs a bunch more data</remarks>
 SolveGrid(ip, AMm, F, m_Data.Bcell, m_Data.Inrow, m_Data.InCol, Tol, jord, m_Data.W)
 SolveGridRow(ip, AMm, F, m_Data.Bcell, m_Data.Inrow, m_Data.InCol, Tol, jord, m_Data.W)
</member>
<member name="M:EwECore.cGridSolver.FirstLastGroups(System.Int32,System.Int32)">
 <summary>
 Set the groups to iterate over.
 </summary>
 <param name="iFirstGroup"></param>
 <param name="iLastGroup"></param>
 <remarks>Call for each thread, before the thread is started, to set the groups to solve.</remarks>
</member>
<member name="M:EwECore.cGridSolver.Solve(System.Object)">
 <summary>
 This is the method that the ThreadPool calls. 
 It must have the object argument to match the Delegate signature required by ThreadPool.QueueUserWorkItem()
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cGridSolver.SolveGrid_SharedMemory(System.Int32)">
 <summary>
 Solve the grid diffusion matrix on directly on core memory.
 </summary>
 <param name="ip">Index of group</param>
 <remarks>
 Run if <see cref="F:EwECore.cGridSolver.bUseLocalMemory"></see> = False. 
 This will run faster on small to medium sized models.
 </remarks>
</member>
<member name="M:EwECore.cGridSolver.SolveGrid_LocalMemory(System.Int32)">
 <summary>
 Solve the grid diffusion matrix on local arrays copied from the core data
 </summary>
 <param name="ip">Index of group</param>
 <remarks>
 Run if <see cref="F:EwECore.cGridSolver.bUseLocalMemory"></see> = true. Use for big models run on a NUMA (non uniform memory access) computer. 
 This can run faster on a normal multicore computer if the model is big enough i.e. One Degree World model.
 </remarks>
</member>
<member name="F:EwECore.cIBMSolver.SignalState">
 <summary>
 Signal mechanism used by the calling thread for thread Synchronization
 </summary>
 <remarks>
 When the Solve() thread is running (SignalState in a non-signaled state SignalState.Reset()) 
 calls to SignalState.WaitOne() will block until Solve() has completed (SignalState in a signaled state SignalState.Set())
 </remarks>
</member>
<member name="F:EwECore.cIBMSolver.EcospaceErrorHandler">
 <summary>
 Delegate for posting error messages.
 </summary>
 <remarks>
 All error handling must be done on the same thread. Errors can not be thrown from one thread to another.
 A delegate must be used to cross the thread boundary. EcospaceErrorHandler is a delegate to a sub on the main Ecospace thread.
 </remarks>
</member>
<member name="M:EwECore.cIBMSolver.runMovePackets(System.Object)">
 <summary>
 This is the method that the ThreadPool calls. 
 It must have the object argument to match the Delegate signature required by ThreadPool.QueueUserWorkItem()
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cSpaceSolver.WaitHandle">
 <summary>
 Wait handle 
 </summary>
 <remarks>
 When the Solve() thread is running (SignalState in a non-signaled state SignalState.Reset()) 
 calls to SignalState.WaitOne() will block until Solve() has completed (SignalState in a signaled state SignalState.Set())
 </remarks>
</member>
<member name="F:EwECore.cSpaceSolver.Cper">
 <summary>
 Consumption rate by cell, group. EatenBy/Biomass
 </summary>
</member>
<member name="F:EwECore.cSpaceSolver.ResultsByFleet">
 <summary>
 Sum of Effort, Sailing Effort, Catch and Value across cells by fleet
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cSpaceSolver.ResultsByGroup">
 <summary>
 Sum of Biomass, Relative Biomass and Catch by group across cells by group
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cSpaceSolver.ResultsByFleetGroup">
 <summary>
 Sum of Catch and Value across cells by fleet group
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cSpaceSolver.Landings">
 <summary>
 Sum of Landings across cells by group fleet
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cSpaceSolver.FishRateGear">
 <summary>
 Fishing Effort multiplier by Fleet,time = 0
 </summary>
 <remarks>
 This array has the same signature as cEcosimDataStructures.FishRateGear(fleet,time)
 but never uses the time index.
 This is so EcoSpace can share the same functions as Ecosim but never have to worry about the different time step indexes.
 Ecospace populates the zero time index with the effort multiplier for the current timestep at the start of each timestep.
  </remarks>
</member>
<member name="F:EwECore.cSpaceSolver.Consumpt">
 <summary>Consumption (prey, pred)</summary>
</member>
<member name="F:EwECore.cSpaceSolver.GroupDetritus">
 <summary>Detritus by Group</summary>
 <remarks>Added for Atlantis coupling. Local copy passes to SimDetritusMT() by each thread(this prevents cross thread corruption) then used to update map </remarks>
</member>
<member name="M:EwECore.cSpaceSolver.FirstLastCells(System.Int32,System.Int32)">
 <summary>
 Set the groups to iterate over.
 </summary>
 <param name="iFirstCell"></param>
 <param name="iLastCell"></param>
 <remarks>Call for each thread, before the thread is started, to set the groups to solve.</remarks>
</member>
<member name="M:EwECore.cSpaceSolver.YearTimeStep(System.Int32)">
 <summary>
 Do any processing necessary at the start of a new year
 </summary>
 <param name="iYear"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cSpaceSolver.Solve(System.Object)">
 <summary>
 This is the method that the ThreadPool calls. 
 It must have the object argument to match the Delegate signature required by ThreadPool.QueueUserWorkItem()
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cSpaceSolver.SetRelaSwitch(System.Single[])">
 <summary>
 Sets RelaSwitch() 
 </summary>
 <param name="B">Biomass at this time step for this spatial cell</param>
 <remarks>Sets RelaSwitch() using local B() and  Ecosim.A(), Ecosim.SwitchPower(), Ecosim.BaseTimeSwitch()  </remarks>
</member>
<member name="M:EwECore.cSpaceSolver.SetMedFunctions(System.Single[])">
 <summary>
 Sets MedVal() mediation value used to modify a or v. Local version for thread safety.
 </summary>
 <param name="Biom"></param>
 <remarks>MedVal(nmediationshapes) is used in ApplyAVmodifiers()</remarks>
</member>
<member name="M:EwECore.cSpaceSolver.ApplyAVmodifiers(System.Single@,System.Single@,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)">
 <summary>
 Apply the multi function mediation functions/modifiers to 'a'(searchrate) and 'v'(vulnerability)
 uses MedVal(NMediationShapes) to modify A and/or V
 </summary>
 <param name="A">SearchRate to modify</param>
 <param name="v">Vulnerability to modify</param>
 <param name="i">i Index (Prey)</param>
 <param name="j">j Index (Pred)</param>
 <param name="UseTime">True if the modifier is over time (Ecosim), False if not (Ecospace) </param>
 <remarks>
 THREADING:  MedVal() is set to the mediating value based on biomass for each map cell at each time step via cSpaceSolver.SetMedFunctions().
 It is unique to this thread/cell/time-step. It was moved here to make it thread safe.
</remarks>
</member>
<member name="M:EwECore.cSpaceSolver.accumCatchData(System.Int32,System.Int32,System.Single[],System.Single[],System.Int32,System.Int32)">
 <summary>
 Accumulate the fisheries data (catch) for a single group for this map cell. 
 This is called before DerivtRed(), in the time step, so it is the condition at the start of the time step.
 </summary>
 <param name="Biomass">Biomass for all the groups at this time step</param>
 <param name="iRow">Map row</param>
 <param name="iCol">Map col</param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cSpaceSolver.CalcTrophicLevel(System.Int32,System.Int32,System.Single[0:,0:],System.Single[])">
 <summary>
 Calculate trophic level and populate the trophic level map in the Ecospace data structures <see cref="F:EwECore.cEcospaceDataStructures.TL">TL</see> map array.
 </summary>
 <param name="iRow">Row index </param>
 <param name="iCol">Column index</param>
 <param name="Consumpt">Consumption by consumer,prey  </param>
 <param name="EatenBy">Total biomass consumed by a group </param>
 <remarks>Trophic level is only calculated if <see cref="F:EwECore.cEcospaceDataStructures.bCalTrophicLevel">bCalTrophicLevel</see> = True</remarks>
</member>
<member name="F:EwECore.cENARDataStructures.CatchExport">
 <summary>
 Catch for all fished groups. Exported detritus for detrius groups
 </summary>
</member>
<member name="F:EwECore.cENARDataStructures.Import">
 <summary>
 Production for Primary Producers. Imported diet/consumption of consumer groups
 </summary>
</member>
<member name="T:EwECore.ExternalData.cEconomicDataSource">
 <summary>
 Implemention of IDataConsumerPlugin that fires an event when ever Economic data is available.
 </summary>
 <remarks>This could be extented to be a source for any data the is broadcasted via the IDataBroadcaster plugin interface </remarks>
</member>
<member name="E:EwECore.ExternalData.cEconomicDataSource.onEconomicData">
 -----------------------------------------------------------------------
 <summary>
 Event that get fired when IEconomicData is available
 </summary>
 <param name="EconomicData"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.ExternalData.cEconomicDataSource.getInstance">
 -----------------------------------------------------------------------
 <summary>
 Return the instance of this class created by the PluginManager
 </summary>
 <returns>The only instance of cEconomicDataSource. Otherwise nothing</returns>
 <remarks>An instance of this class is loaded from the Core via the Plugin 
 manager. This allows classes in the core to retrieve an instance of 
 cEconomicDataSource for Economic data.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.ExternalData.cEconomicDataSource.EnableData(EwEUtils.Core.IRunType)">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether any economic data producer, if available, should deliver 
 data for a given <see cref="T:EwEUtils.Core.IRunType">run type</see>.
 </summary>
 <param name="runtype"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.ExternalData.cEconomicDataSource.IsDataAvailable(EwEUtils.Core.IRunType)">
 -----------------------------------------------------------------------
 <summary>
 States whether a plug-in capable of delivering Econimic data is available.
 </summary>
 <param name="runtype">The core run type to check availability for.</param>
 <returns>True if available.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.ExternalData.cNetworkAnalysisDataSource">
 <summary>
 Implemention of IDataConsumerPlugin that fires an event when Network Analysis data is available.
 </summary>
</member>
<member name="E:EwECore.ExternalData.cNetworkAnalysisDataSource.onNetworkAnalysisData">
 -----------------------------------------------------------------------
 <summary>
 Event that get fired when INetworkAnalysisData is available
 </summary>
 <param name="NetworkAnalysisData">The data that is available.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.ExternalData.cNetworkAnalysisDataSource.getInstance">
 -----------------------------------------------------------------------
 <summary>
 Return the instance of this class created by the PluginManager.
 </summary>
 <returns>The only instance of cEconomicDataSource. Otherwise nothing</returns>
 <remarks>An instance of this class is loaded from the Core via the Plugin 
 manager. This allows classes in the core to retrieve an instance of 
 cEconomicDataSource for Economic data.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.ExternalData.cNetworkAnalysisDataSource.EnableData(EwEUtils.Core.IRunType)">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether any network analysis data producer, if available, 
 should deliver data for a given <see cref="T:EwEUtils.Core.IRunType">run type</see>.
 </summary>
 <param name="runtype"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.ExternalData.cNetworkAnalysisDataSource.IsDataAvailable(EwEUtils.Core.IRunType)">
 -----------------------------------------------------------------------
 <summary>
 States whether a plug-in capable of delivering Network Analysis data is available.
 </summary>
 <param name="runtype">The core run type to check availability for.</param>
 <returns>True if available.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.ExternalData.cTaxonDataSource">
 -----------------------------------------------------------------------
 <summary>
 Implemention of IDataConsumerPlugin that fires an event whenever 
 taxonomy data or taxonomy data search results are available.
 </summary>
 <remarks>This could be extented to be a source for any data that is 
 broadcasted via IDataBroadcaster plugin interfaces.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="E:EwECore.ExternalData.cTaxonDataSource.OnTaxonData">
 -----------------------------------------------------------------------
 <summary>
 Event that gets fired when ITaxonData is available.
 </summary>
 <param name="TaxonData"></param>
 -----------------------------------------------------------------------
</member>
<member name="E:EwECore.ExternalData.cTaxonDataSource.OnTaxonSearchResults">
 -----------------------------------------------------------------------
 <summary>
 Event that gets fired when IDataSearchResults are available.
 </summary>
 <param name="data"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.ExternalData.cTaxonDataSource.GetInstance">
 -----------------------------------------------------------------------
 <summary>
 Return the instance of this class created by the PluginManager
 </summary>
 <returns>The only instance of cTaxonDataSource. Otherwise nothing</returns>
 <remarks>An instance of this class is loaded from the Core via the Plugin 
 manager. This allows classes other objects to retrieve an instance of 
 cTaxonDataSource for receiving taxonomy data notifications.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.ExternalData.cTaxonDataSource.EnableData(EwEUtils.Core.IRunType)">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether any taxon data producer, if available, should deliver 
 data for a given <see cref="T:EwEUtils.Core.IRunType">run type</see>.
 </summary>
 <param name="runtype"></param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.ExternalData.cTaxonDataSource.IsDataAvailable(EwEUtils.Core.IRunType)">
 -----------------------------------------------------------------------
 <summary>
 States whether a plug-in capable of delivering taxon data is available.
 </summary>
 <param name="runtype">The core run type to check availability for.</param>
 <returns>True if available.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.ExternalData.cTaxonDataSource.ProducerNames">
 -----------------------------------------------------------------------
 <summary>
 Returns all available producer names.
 </summary>
 <returns>An array of strings representing the producers.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.ExternalData.cTaxonDataSource.ActiveProducerName">
 -----------------------------------------------------------------------
 <summary>
 Get/set the active ITaxonData producer.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.ExternalData.cTaxonDataSource.ReceiveData(System.String,EwEPlugin.Data.IPluginData)">
 -------------------------------------------------------------------
 <summary>
 Data comsumption handling; dispatches both incoming taxonomy data or
 taxonomy search results.
 </summary>
 <param name="strDataName">Name of incoming data (not used).</param>
 <param name="data">Actual incoming data.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.FishingPolicy.cFishingPolicyManager.Connect(EwECore.FishingPolicy.RunStartedDelegate,EwECore.FishingPolicy.RunCompletedDelegate,EwECore.FishingPolicy.ProgressDelegate,EwECore.FishingPolicy.SearchCompletedDelegate)">
 <summary>
 Connect an interface to the Fishing Policy Search
 </summary>
 <param name="RunStartedCallBack">Callback a search run is about to start. If ModelParameters.nRun > 1 this will be call at the start of each run.</param>
 <param name="RunCompletedBack">Callback a search run has completed. If ModelParameters.nRun > 1 this will be call at the end of each run.</param>
 <param name="ProgressCallBack">Callback reports progress of the search</param>
 <param name="SearchCompletedCallBack">Calback all search runs have completed.</param>
 <remarks></remarks>
</member>
<member name="M:EwECore.FishingPolicy.cFishingPolicyManager.Init(EwECore.cCore@)">
 <summary>
 Build interface objects
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.FishingPolicy.cFishingPolicyManager.Load">
 <summary>
 Load data into existing interface objects
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.FishingPolicy.cFishingPolicyManager.Update(EwEUtils.Core.eDataTypes)">
 <summary>
 Update the underlying data with values from the interface
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.FishingPolicy.cFishingPolicyManager.nSearchBlocks">
 <summary>
 Number of unique search blocks across all the fleets
 </summary>
</member>
<member name="P:EwECore.FishingPolicy.cFishingPolicyManager.SearchResults">
 <summary>
 Progress results of the search
 </summary>
 <remarks>This object will be populated at for each call to the ProgressHandler() delegate</remarks>
</member>
<member name="P:EwECore.FishingPolicy.cFishingPolicyManager.iRun">
 <summary>
 Count of the current search run
 </summary>
 <remarks>if isRunning = True then iRun will be the count of the current run out of ModelParameters.nRuns</remarks>
</member>
<member name="M:EwECore.FishingPolicy.cFishingPolicyManager.StopRun(System.Int32)">
 <summary>
 Stop the Fishing Policy Search run
 </summary>
 <remarks>This will not do anything if the search is not running</remarks>
</member>
<member name="T:EwECore.FishingPolicy.SearchCompletedDelegate">
 <summary>
 A Fishing Policy search has completed all it's runs.
 </summary>
 <remarks>If there are multiple runs they have all been completed or an Error has occured and the runs could not be completed.</remarks>
</member>
<member name="T:EwECore.FishingPolicy.RunCompletedDelegate">
 <summary>
 A run of the Fishing Policy search has completed.
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.FishingPolicy.RunStartedDelegate">
 <summary>
 A Fishing Policy Search run has started.
 </summary>
 <remarks>When this is called the results object will be initialized and dimensioned but it will not contain any values.</remarks>
</member>
<member name="T:EwECore.FishingPolicy.ProgressDelegate">
 <summary>
 Progress of the current Fishing Policy run
 </summary>
 <remarks>The Results object will contain the results of the current interation</remarks>
</member>
<member name="F:EwECore.FishingPolicy.cFishingPolicySearch.SearchFailed">
 <summary>
 Force a running search to exit
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.FishingPolicy.cFishingPolicySearch.EffortChangePenalty">
 <summary>
 Compute a penalty multiplier if change in effort from the last year to this year is greater than MaxEffortChange
 </summary>
 <returns></returns>
 <remarks>The penalty is the sum of change ratio from year to year  penalty = penalty * (CurEffort(i) / LastEffort(i))</remarks>
</member>
<member name="T:EwECore.FishingPolicy.cFPSSearchResults">
 <summary>
 This is a wrapper for the Fishing Policy Search time step results
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.cFishingPolicySearchBlock">
 <summary>
 Blocks for Fishing Policy Search
 </summary>
 <remarks>This provides the CodeBlocks(iTimeIndex) interface</remarks>
</member>
<member name="P:EwECore.cFishingPolicySearchBlock.BatchEdit">
 <summary>
 Edit the SearchBlocks in batch mode no messages are sent out when BatchEdit = True when BatchEdit is toggled to False then the core is notified.
 </summary>
 <remarks>This turns off the AllowValidation flag which stops the object from calling core.OnValidate() vastly speeding up the editing</remarks>
</member>
<member name="M:EwECore.cF2TSManager.Load">
 -----------------------------------------------------------------------
 <summary>
 Loads local values in the manager from the underlying data structures.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cF2TSManager.Update(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <summary>
 Stores the values in the manager back to the underlying data structures.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cF2TSManager.setDefaultAICNData">
 <summary>
 Compute the default value for nAICData number of AIC data points
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cF2TSManager.isPredPrey(System.Int32,System.Int32)">
 <summary>
 States whether there is a link between a given predator and prey.
 </summary>
 <param name="iPred"></param>
 <param name="iPrey"></param>
 <returns></returns>
 <remarks>
 This code encapsulates working with ecosim inlinks, ilink and jlink variables.
 </remarks>
</member>
<member name="P:EwECore.cF2TSManager.NAICDataPoints">
 <summary>
 Number of data points for the AIC indicator
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cF2TSManager.VulnerabilityBlocks">
 <summary>
 Get/set the vulnerability block to use for pred,prey
 </summary>
</member>
<member name="P:EwECore.cF2TSManager.nBlockCodes">
 <summary>
 Get/set the number of blocks to search for.
 </summary>
</member>
<member name="M:EwECore.cF2TSManager.CanRun">
 -----------------------------------------------------------------------
 <summary>
 States whether F2TS models can run.
 </summary>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cF2TSManager.IsRunning">
 -----------------------------------------------------------------------
 <summary>
 States whether a F2TS model is running.
 </summary>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cF2TSManager.Wait(System.Int32)">
 <summary>
 Block the calling thread until the model has finished running
 </summary>
 <remarks>This can be used by an interface to call the model then wait for results before continuing processing.</remarks>
</member>
<member name="M:EwECore.cF2TSManager.StopRun(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Stops a running F2TS model
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cF2TSManager.GetRunType">
 -----------------------------------------------------------------------
 <summary>
 Returns the <see cref="T:EwECore.FitToTimeSeries.eRunType">type of run</see> 
 the current F2TS model is performing.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cF2TSManager.RunSensitivitySS2VByPredPrey(System.Boolean,EwEUtils.Core.TriState)">
 -----------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="bRunSilent">Optional parameter to run without sending any messages or requesting any feedback</param>
 <param name="RunThreaded">Optional flag to state if the search runs multi-threaded. If <see cref="F:EwEUtils.Core.TriState.False"/>,
 the search never runs theaded. If <see cref="F:EwEUtils.Core.TriState.True"/>the search always runs threaded. If <see cref="F:EwEUtils.Core.TriState.UseDefault"/>,
 the search only runs threaded if a <see cref="T:System.ComponentModel.ISynchronizeInvoke">sync object</see> has been
 provided when <see cref="M:EwECore.cF2TSManager.Connect(System.ComponentModel.ISynchronizeInvoke,EwECore.FitToTimeSeries.RunStartedDelegate,EwECore.FitToTimeSeries.RunStepDelegate,EwECore.FitToTimeSeries.RunStoppedDelegate,EwECore.FitToTimeSeries.RunModelDelegate)">connecting</see>.</param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cF2TSManager.RunSensitivitySS2VByPredator(System.Boolean,EwEUtils.Core.TriState)">
 -----------------------------------------------------------------------
 <summary>
 Run the sensitivity to vulnerabilities search by predator.
 </summary>
 <param name="bRunSilent">Optional parameter to run without sending any messages or requesting any feedback</param>
 <param name="RunThreaded">Optional flag to state if the search runs multi-threaded. If <see cref="F:EwEUtils.Core.TriState.False"/>,
 the search never runs theaded. If <see cref="F:EwEUtils.Core.TriState.True"/>the search always runs threaded. If <see cref="F:EwEUtils.Core.TriState.UseDefault"/>,
 the search only runs threaded if a <see cref="T:System.ComponentModel.ISynchronizeInvoke">sync object</see> has been
 provided when <see cref="M:EwECore.cF2TSManager.Connect(System.ComponentModel.ISynchronizeInvoke,EwECore.FitToTimeSeries.RunStartedDelegate,EwECore.FitToTimeSeries.RunStepDelegate,EwECore.FitToTimeSeries.RunStoppedDelegate,EwECore.FitToTimeSeries.RunModelDelegate)">connecting</see>.</param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cF2TSManager.RunSearch(System.Boolean,EwEUtils.Core.TriState)">
 <summary>
 
 </summary>
 <param name="bRunSilent">Optional parameter to run without sending any messages or requesting any feedback</param>
 <param name="RunThreaded">Optional flag to state if the search runs multi-threaded. If <see cref="F:EwEUtils.Core.TriState.False"/>,
 the search never runs theaded. If <see cref="F:EwEUtils.Core.TriState.True"/>the search always runs threaded. If <see cref="F:EwEUtils.Core.TriState.UseDefault"/>,
 the search only runs threaded if a <see cref="T:System.ComponentModel.ISynchronizeInvoke">sync object</see> has been
 provided when <see cref="M:EwECore.cF2TSManager.Connect(System.ComponentModel.ISynchronizeInvoke,EwECore.FitToTimeSeries.RunStartedDelegate,EwECore.FitToTimeSeries.RunStepDelegate,EwECore.FitToTimeSeries.RunStoppedDelegate,EwECore.FitToTimeSeries.RunModelDelegate)">connecting</see>.</param>
 <returns></returns>
</member>
<member name="M:EwECore.cF2TSManager.Results">
 -----------------------------------------------------------------------
 <summary>
 Returns the most recent received results.
 </summary>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cF2TSManager.HasRunSens">
 <summary>
 Get whether a sensitivity search has been ran.
 </summary>
</member>
<member name="M:EwECore.cF2TSManager.SaveToCSV(System.String)">
 -------------------------------------------------------------------
 <summary>
 Save blocks to CSV
 </summary>
 <param name="strFilename">The name of the file to save to.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cF2TSManager.RunStartedCallback(EwECore.FitToTimeSeries.eRunType,System.Int32)">
 <summary>
 Delegate handler called by the model when the run has started
 </summary>
 <param name="runType"></param>
 <remarks>This handler is passed to the model during the contruction of the manager via cF2TSModel.Init()</remarks>
</member>
<member name="M:EwECore.cF2TSManager.RunStepCallback">
 <summary>
 Delegate handler called by the model when the run has completed a step
 </summary>
 <remarks>This handler is passed to the model during the contruction of the manager via cF2TSModel.Init()</remarks>
</member>
<member name="M:EwECore.cF2TSManager.RunStoppedCallback(EwECore.FitToTimeSeries.eRunType)">
 <summary>
 Delegate handler called by the model when the run has stopped
 </summary>
 <param name="runType"></param>
 <remarks>This handler is passed to the model during the contruction of the manager via cF2TSModel.Init()</remarks>
</member>
<member name="M:EwECore.cF2TSManager.AddMessageCallback(EwECore.cMessage)">
 <summary>
 Delegate handler for Model to add a message to the managers list of messages
 </summary>
 <param name="msg"></param>
</member>
<member name="M:EwECore.cF2TSManager.SendMessageCallback(EwECore.cMessage)">
 <summary>
 Delegate handler for Model to add a message to the managers list of messages
 </summary>
 <param name="msg"></param>
</member>
<member name="T:EwECore.FitToTimeSeries.RunStepDelegate">
 <summary>
 An iteration of the fitting search has been completed
 </summary>
 <remarks>RunState() will contain the run type. Results() will contain the results of this iteration.  </remarks>
</member>
<member name="T:EwECore.FitToTimeSeries.RunModelDelegate">
 <summary>
 A call the Ecosim has been made
 </summary>
 <remarks>RunState() will contain the run type. Results() will contain the results of the last iteration.  </remarks>
</member>
<member name="T:EwECore.FitToTimeSeries.RunStartedDelegate">
 <summary>
 A search of sensitivity run has started
 </summary>
 <param name="runType">Type of run</param>
 <param name="nSteps">Number of steps in this run if known at the start time otherwise zero</param>
</member>
<member name="T:EwECore.FitToTimeSeries.RunStoppedDelegate">
 <summary>
 A search run has stopped
 </summary>
 <param name="runType">Type of run</param>
</member>
<member name="T:EwECore.FitToTimeSeries.RunMessageDelegate">
 <summary>
 A message being sent out by the search
 </summary>
 <param name="msg"></param>
</member>
<member name="M:EwECore.FitToTimeSeries.cF2TSModel.Init(EwECore.FitToTimeSeries.RunStartedDelegate,EwECore.FitToTimeSeries.RunStepDelegate,EwECore.FitToTimeSeries.RunStoppedDelegate,EwECore.FitToTimeSeries.RunMessageDelegate,EwECore.FitToTimeSeries.RunModelDelegate,EwECore.FitToTimeSeries.RunMessageDelegate)">
 <summary>
 Init model, optionally for multi-threading
 </summary>
 <param name="runstartedHandler"></param>
 <param name="runstepHandler"></param>
 <param name="runstoppedHandler"></param>
</member>
<member name="P:EwECore.FitToTimeSeries.cF2TSModel.Results">
 <summary>
 Results of the run or iteration depending on when it is accessed
 </summary>
</member>
<member name="P:EwECore.FitToTimeSeries.cF2TSModel.HasRunSens">
 <summary>
 Get whether a sensitivity search has been ran.
 </summary>
</member>
<member name="M:EwECore.FitToTimeSeries.cF2TSModel.RunSensitivitySS2VByPredPrey">
 <summary>
 
 </summary>
 <remarks>
pass in params that this method needs instead of obtaining them from the manager. This class may NOT KNOW ITS MANAGER!
 </remarks>
</member>
<member name="M:EwECore.FitToTimeSeries.cF2TSModel.RunSensitivitySS2VByPredator">
 <summary>
 
 </summary>
 <remarks>
 pass in params that this method needs instead of obtaining them from the manager. This class may NOT KNOW ITS MANAGER!
 </remarks>
</member>
<member name="M:EwECore.FitToTimeSeries.cF2TSModel.RunSearch">
 <summary>
 
 </summary>
</member>
<member name="M:EwECore.FitToTimeSeries.cF2TSModel.searchIterationStep">
 <summary>
 Call the step handler
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.FitToTimeSeries.cF2TSModel.updateAICNPars">
 <summary>
 Count the number of parameters being searched for. Used to compute AIC.
 </summary>
</member>
<member name="M:EwECore.FitToTimeSeries.cF2TSModel.setAIC(System.Single,System.Single,System.Single)">
 <summary>
 Populate cF2TSDataStructures.AIC value
 </summary>
</member>
<member name="M:EwECore.FitToTimeSeries.cF2TSModel.initEcosimForSearchIteration">
 <summary>
 Initialize Ecosim before each search iteration
 </summary>
 <remarks>In EwE5 this is called PrepareSimSpace()</remarks>
</member>
<member name="F:EwECore.cF2TSDataStructures.iCatchAnomalySearchShapeNumber">
 <summary>Index of anomaly shape.</summary>
 <remarks>One-based or zero-based? Shape managers are zero-based; stepwise fitting assumes one-based!</remarks>
</member>
<member name="F:EwECore.cF2TSDataStructures.nAICPars">
 <summary>
 Number of AIC parameters
 </summary>
</member>
<member name="F:EwECore.cF2TSDataStructures.nAICData">
 <summary>
 Number of AIC data points
 </summary>
</member>
<member name="F:EwECore.cF2TSDataStructures.AIC">
 <summary>
 Akaike Information Criteria for the last run
 </summary>
</member>
<member name="T:EwECore.cGameServerInterface">
 <summary>
 Core data collector for the OceanViz game server.
 </summary>
</member>
<member name="M:EwECore.cGameServerInterface.Clear">
 <summary>
 Clear all game server data structures.
 </summary>
</member>
<member name="T:EwECore.cPathUtility">
 ===========================================================================
 <summary>
 <para>Utility class for translating a path mask into a full path. The mask can be 
 composed of valid path characters and <see cref="T:EwECore.cPathUtility.ePathPlaceholderTypes">place holders</see>.</para>
 <para>Place holder texts are expected to be wrapped in curly brackets, { },
 and are not case-sensitive.</para>
 </summary>
 <remarks>
 <example>
 <para>A few path examples are:</para>
 <list type="bullet">
 <item>{ModelPath}\backup\{ModelFile}_{ModelVersion}.{ModelExt}</item>
 <item>{MyDocuments}\EwEModels\backup\{modelfile}_{date}_{time}.{modelext}</item>
 </list>
 </example>
 </remarks>
 ===========================================================================
</member>
<member name="T:EwECore.cPathUtility.ePathPlaceholderTypes">
 <summary>
 Enumerated type defining supported path mask placeholders.
 </summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.ModelFile">
 <summary>Place holder to receive a model file name.</summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.ModelPath">
 <summary>Place holder to receive a model file directory.</summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.ModelExt">
 <summary>Place holder to receive a model file extension.</summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.ModelVersion">
 <summary>Place holder to receive a model version number.</summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.Date">
 <summary>Place holder to receive the current date, in short format.</summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.Time">
 <summary>Place holder to receive the current time, in short format.</summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.MyDocuments">
 <summary>Place holder to receive the current documents directory.</summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.MyAppData">
 <summary>Place holder to receive the current application data directory.</summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.Desktop">
 <summary>Place holder to receive the current desktop directory.</summary>
</member>
<member name="F:EwECore.cPathUtility.ePathPlaceholderTypes.TempFiles">
 <summary>Place holder to receive the temp directory.</summary>
</member>
<member name="M:EwECore.cPathUtility.ResolvePath(System.String,EwECore.cCore,System.String@)">
 -----------------------------------------------------------------------
 <summary>
 Resolve a path mask to a true file path.
 </summary>
 <param name="strMask">The path mask to resolve.</param>
 <param name="core">The core that provides model information.</param>
 <param name="strPathOut">The resulting path.</param>
 <returns>True if successful.</returns>
 <remarks>Note that the core needs to have a model loaded.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cPathUtility.ResolvePath(System.String,System.String,System.String,System.String@)">
 -----------------------------------------------------------------------
 <summary>
 Resolve a path mask to a true file path.
 </summary>
 <param name="strMask">The mask to resolve.</param>
 <param name="strPathIn">The source path to obtain mask fields from.</param>
 <param name="strModelVersion">The model file version to substitute.</param>
 <param name="strPathOut">The resulting path.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cPathUtility.ResolvePath(System.String,System.String,System.String,System.String,System.String,System.String@)">
 -----------------------------------------------------------------------
 <summary>
 Resolve a path mask to a true file path.
 </summary>
 <param name="strMask">The mask to resolve.</param>
 <param name="strModelFile">The model file name to substitute.</param>
 <param name="strModelPath">The model file directory to substitute.</param>
 <param name="strModelExt">The model file extension to substitute.</param>
 <param name="strModelVersion">The model file version to substitute.</param>
 <param name="strPathOut">The resulting path.</param>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cPathUtility.ResolvePlaceholder(EwECore.cPathUtility.ePathPlaceholderTypes,System.String,System.String,System.String,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Change a place holder into a value.
 </summary>
 <param name="placeholder">The place holder to substitute.</param>
 <param name="strModelFile">The model file name to use.</param>
 <param name="strModelPath">The model file directory to use.</param>
 <param name="strModelExt">The model file extension to use.</param>
 <param name="strModelVersion">The model file version to use.</param>
 <returns>A susbstituted value.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cLPSolver">
 ---------------------------------------------------------------------------
 <summary>
 LP solver interface to the unmanaged lp_solve engine version 5.5
 </summary>
 <remarks>
 Please refer to the Microsoft Solver Foundation API reference for using the
 methods in this class. Note that this solver wraps unmanaged code; this class
 will only work on Windows.
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cLPSolver.lpsolve55">
 -----------------------------------------------------------------------
 <summary>
 LPSolve unmanaged library wrapper
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLPSolver.#ctor">
 -----------------------------------------------------------------------
 <summary>
 Constructor.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLPSolver.AddVariable(System.Object,System.Int32@)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.ILPSolver.AddVariable(System.Object,System.Int32@)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLPSolver.SetBounds(System.Int32,System.Double,System.Double)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.ILPSolver.SetBounds(System.Int32,System.Double,System.Double)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLPSolver.AddRow(System.Object,System.Int32@)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.ILPSolver.AddRow(System.Object,System.Int32@)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLPSolver.AddGoal(System.Int32,System.Int32,System.Boolean)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.ILPSolver.AddVariable(System.Object,System.Int32@)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLPSolver.SetCoefficient(System.Int32,System.Int32,System.Double)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.ILPSolver.SetCoefficient(System.Int32,System.Int32,System.Double)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLPSolver.Solve(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.ILPSolver.Solve(System.Int32)"/>
 <remarks>
 This method creates the unmanaged solver, populates and runs it, extracts
 results and destroys the unmanaged solver.
 </remarks>
 <returns>
 True if ran successful. Remember to check whether this particular solver 
 <see cref="M:EwECore.cLPSolver.IsSupported">is supported by the operating system</see>.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLPSolver.GetValue(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.ILPSolver.GetValue(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLPSolver.IsSupported">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.ILPSolver.IsSupported"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cThreadWaitBase">
 ---------------------------------------------------------------------------
 <summary>
 Base Class to provide thread blocking for the Threaded Manager Classes
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cThreadWaitBase.m_SignalState">
 ---------------------------------------------------------------------------
 <summary>
 Signal state flag, used by an calling routine to block its thread until the 
 model has completed. Invoked by <see cref="M:EwECore.cThreadWaitBase.SetWait"/>.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cThreadWaitBase.#ctor">
 ---------------------------------------------------------------------------
 <summary>
 Constructor.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cThreadWaitBase.StopRun(System.Int32)">
 ---------------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.IThreadedProcess.StopRun(System.Int32)"/>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cThreadWaitBase.Wait(System.Int32)">
 ---------------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.IThreadedProcess.Wait(System.Int32)"/>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cThreadWaitBase.SetWait">
 ---------------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.IThreadedProcess.SetWait"/>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cThreadWaitBase.ReleaseWait">
 ---------------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.IThreadedProcess.ReleaseWait"/>
 ---------------------------------------------------------------------------
</member>
<member name="P:EwECore.cThreadWaitBase.IsRunning">
 ---------------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.IThreadedProcess.IsRunning"/>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.IThreadedProcess.StopRun(System.Int32)">
 ---------------------------------------------------------------------------
 <summary>
 Terminate a threaded run.
 </summary>
 <param name="WaitTimeInMillSec"></param>
 <returns></returns>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.IThreadedProcess.Wait(System.Int32)">
 ---------------------------------------------------------------------------
 <summary>
 Block the calling thread until the model has finished running
 </summary>
 <param name="WaitTimeinMillSec">
 Length of time in milliseconds to wait for the process to complete,
  -1 to wait indefinitely,
  0 return immediately with True if the process has completed False if it is still running,
  > 0 (any positive integer) then wait for WaitTimeInMillSec return True if process completed False otherwise.
 </param>
 <returns>True if the process was stop within the wait time, False if it timed out.</returns>
 <remarks>This can be used by an interface to call the model then wait for results before continuing processing.</remarks>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.IThreadedProcess.SetWait">
 ---------------------------------------------------------------------------
 <summary>
 Set the signaled state to non-signaled. Any thread that calls this method 
 will be blocked until <see cref="M:EwECore.IThreadedProcess.ReleaseWait"/> is called.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.IThreadedProcess.ReleaseWait">
 ---------------------------------------------------------------------------
 <summary>
 Resume all the threats <see cref="M:EwECore.IThreadedProcess.SetWait">waiting for a release</see>.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="P:EwECore.IThreadedProcess.IsRunning">
 ---------------------------------------------------------------------------
 <summary>
 Get whether the process is running.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.eMCParams.BaBi">
 <summary>Biomass accummulation rate</summary>
</member>
<member name="T:EwECore.MonteCarloTrialProgressDelegate">
 <summary>
 Call each time a monte carlo trial has been completed
 </summary>
</member>
<member name="T:EwECore.MonteCarloEcopathProgressDelegate">
 <summary>
 Call each time a Ecopath model has been run
 </summary>
</member>
<member name="T:EwECore.MonteCarloCompletedDelegate">
 <summary>
 Call at the completion of the monte carlo trials
 </summary>
 <remarks>There can be multiple Ecopath model runs for each monte carlo trial</remarks>
</member>
<member name="T:EwECore.cEcosimMonteCarlo">
 <summary>
 Ecosim Monte Carlo routines
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.EcosimTimeStep">
 <summary>
 Optional <see cref="T:EwECore.Ecosim.EcoSimTimeStepDelegate">delegate</see> that will be called after a 
 trial has been computed.
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.dlgEcopathIterationHandler">
 <summary>
 Optional <see cref="T:EwECore.MonteCarloEcopathProgressDelegate">delegate</see> that will be called 
 each attempt to find a balanced Ecopath model.
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.dlgTrialStepHandler">
 <summary>
 Optional <see cref="T:EwECore.MonteCarloTrialProgressDelegate">delegate</see> that will be called after a 
 trial has been completed.
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.dlgMonteCarloCompletedHandler">
 <summary>
 Optional <see cref="T:EwECore.MonteCarloCompletedDelegate">delegate</see> that will be called after a 
 Monte Carlo run has completed.
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.dlgMonteCarloMessageHandler">
 <summary>
 Optional <see cref="T:EwECore.MonteCarloSendMessageDelegate">delegate</see> that allows Monte Carlo
 to send <see cref="T:EwECore.cMessage">messages</see>.
 </summary>
</member>
<member name="P:EwECore.cEcosimMonteCarlo.SSBestFit">
 <summary>
 Best fitting Sum of Squares computed by Ecosim
 </summary>
</member>
<member name="P:EwECore.cEcosimMonteCarlo.SSCurrent">
 <summary>
 Sum of Squares computed by Ecosim of the current iteration.
 </summary>
</member>
<member name="P:EwECore.cEcosimMonteCarlo.SSorg">
 <summary>
 Sum of Squares prior to the Monte Carlo run.
 </summary>
</member>
<member name="P:EwECore.cEcosimMonteCarlo.ValidateRespiration">
 <summary>
 Flag stating if Monte Carlo should validate and reject negative respiration values.
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.Pmean">
 <summary>Ecopath parameters (<see cref="T:EwECore.eMCParams">Parameter</see> x nGroup)</summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.PMeanLanding">
 <summary>Ecopath landings (Fleet x Group)</summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.PMeanDiscard">
 <summary>Ecopath discards (Fleet x Group)</summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.PMeanDC">
 <summary>Ecopath Diets (Group x Group)</summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.CVpar">
 <summary>
 CV value (parameter x group)
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.CVparLanding">
 <summary>
 CV value for landings (fleet x group)
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.CVparDiscard">
 <summary>
 CV value value for discards (fleet x group)
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.CVParDC">
 CV value value for diets (#methods x group)
</member>
<member name="F:EwECore.cEcosimMonteCarlo.ParLimit">
 <summary>
 Parameter limits for non-arrayed variables (2 x parameter x group)
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.ParLimitLanding">
 <summary>
 Parameter limits for landings (2 x fleet x group)
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.ParLimitDiscard">
 <summary>
 Parameter limits for discards (2 x fleet x group)
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.ParLimitDC">
 <summary>
 Parameter limits for diets (2 x fleet x group)
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.BestFit">
 <summary>Best fitting parameter to the last run Monte Carlo trials (eMCParam, iGrp)</summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.BestFitDiets">
 <summary>Best fitting parameter to the last run Monte Carlo trials for diets (iPred, iPrey)</summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.StartValues">
 <summary>Original Ecopath parameters before trials were run (trialparam x group)</summary>
 <remarks>This array holds the same data as PMean, and is obsolete</remarks>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.StartValuesDiets">
 <summary>Original Ecopath parameters before trials were run (Pred x Prey)</summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.m_isEnabled">
 <summary>
 Flag (x eMSParam) stating if a given variable can be pertubed at all.
 </summary>
</member>
<member name="F:EwECore.cEcosimMonteCarlo.m_isVariableItem">
 <summary>
 Flag (x group, eMCParam) stating if a given group value can be perturbed by Monte Carlo.
 </summary>
 <remarks>
 The logic populating this array is a duplication of cMonteCarloManager.ToMCStatus. At the time of 
 writing (end of May 2018) the Monte Carlo Manager is more thorough. This duplication needs to be 
 resolved. Ideally, the better logic of cMonteCarloManager should be implemented in cEcosimMonteCarlo,
 and make cMonteCarlo read this information to populate the user interface classes.
 </remarks>
</member>
<member name="P:EwECore.cEcosimMonteCarlo.ResultWriter">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.IMonteCarloResultsWriter"/> to use for writing 
 results to drive. 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcosimMonteCarlo.SetIsVariable(System.Int32,EwECore.eMCParams,System.Boolean)">
 <summary>
 Set the isVariable(group,parameter) boolean flag
 </summary>
 <remarks>Can the MonteCarlo vary an Ecopath parameter </remarks>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.LoadFromPedigree(EwEUtils.Core.eVarNameFlags)">
 <summary>
 Load CV values for a given variable from Pedigree.
 </summary>
 <param name="varname"></param>
</member>
<member name="P:EwECore.cEcosimMonteCarlo.IncludeFpenalty">
 <summary>
 Flag, states whether to include Stock Reduction Analysis (SRA) for groups with forced catches
 </summary>
</member>
<member name="P:EwECore.cEcosimMonteCarlo.FMratioForSRA">
 <summary>
 F/M ratio for SRA 
 </summary>
</member>
<member name="P:EwECore.cEcosimMonteCarlo.SaveOutput">
 <summary>
 Get/set whether output should be saved to file automatically.
 </summary>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.getFPenalty(System.Boolean@,System.Boolean[])">
 <summary>
 Calculate penalty for being away from reasonable fishing mortality
 </summary>
 <param name="bForcedCatches"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.PreserveOriginalState">
 <summary>
 Preserve Ecopath original state
 </summary>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.RestoreOriginalState">
 <summary>
 Restore Ecopath to its original state
 </summary>
 <remarks>The Monte Carlo changed the basic input data of Ecopath. This will set it back to the state it was in when the Monte Carlo was run.</remarks>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.selectNewEcopathParameters(System.Int32)">
 <summary>
 Wrapper around <see cref="M:EwECore.cEcosimMonteCarlo.BalanceEcopathWithNewPars(System.Int32@,System.Int32)">BalanceEcopathWithNewPars</see>  
 so the MonteCarloManager can expose this functionality via <see cref="M:EwECore.cMonteCarloManager.SelectNewEcopathParameters(System.Int32)">selectNewEcopathParameters()</see>
 </summary>
 <param name="MaxIters">Maximum number of tries to find a balanced Ecopath Model.</param>
 <returns>True if successful. False otherwise.</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.BalanceEcopathWithNewPars(System.Int32@,System.Int32)">
 <summary>
 
 </summary>
 <param name="iter"></param>
 <param name="maxEcopathIterations"></param>
 <returns>Returns True if a balanced model was resampled</returns>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.NormalizeDiet(System.Single[0:,0:]@)">
 <summary>
 Normalize diets to 1
 </summary>
 <param name="dcRef"></param>
 <returns>True if normalization is correct, false if a diet is lost by becoming zero</returns>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.isStanzaGroupVariable(System.Int32,EwECore.eMCParams)">
 <summary>
 Determines whether the given variable depends on other stanza.
 </summary>
 <param name="igrp">The igrp.</param>
 <param name="varType">Type of the variable.</param>
 <returns>
 True if the variable depends on other life stages.
 </returns>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.ApplyBestFits">
 <summary>
 Apply the results of the Monte Carlo trials (best fitting parameters) to the ecopath data
 </summary>
 <remarks>This does not update the Core's interface objects</remarks>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.CalculateUpperLowerLimits(System.Boolean,EwECore.eMCParams)">
 <summary>
 Calculte the Upper and Lower Parameter limits from CV values
 </summary>
 <param name="IsCrashEvaluated">Not USED!</param>
 <param name="param">The parameter to calculate, or <see cref="F:EwECore.eMCParams.NotSet"/> to calculate all.</param>
 <remarks>Called once during initialization to set default values or when CV values have been edited</remarks>
</member>
<member name="M:EwECore.cEcosimMonteCarlo.ChooseFeasibleDiet(System.Single[0:,0:],System.Single,System.Int32,System.Single[0:,0:]@)">
 <summary>
 Dirichlets resampling
 </summary>
 <param name="Diets"></param>
 <param name="cv"></param>
 <param name="iPred"></param>
 <param name="EcopathDiet"></param>
</member>
<member name="T:EwECore.cMonteCarloManager">
 <summary>
 Manager to run the Ecosim Monte Carlo.
 </summary>
</member>
<member name="F:EwECore.cMonteCarloManager.m_ResultsWriters">
 <summary>Available monte carlo result writers.</summary>
</member>
<member name="P:EwECore.cMonteCarloManager.nResultWriters">
 -----------------------------------------------------------------------
 <summary>
 Get the number of available <see cref="T:EwEUtils.Core.IMonteCarloResultsWriter">Monte
 Carlo result writers</see>.
 <seealso cref="M:EwECore.cMonteCarloManager.ResultWriter(System.Int32)"/>
 <seealso cref="T:EwEUtils.Core.IMonteCarloResultsWriter"/>
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMonteCarloManager.ResultWriter(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns a <see cref="T:EwEUtils.Core.IMonteCarloResultsWriter"/>.
 <seealso cref="P:EwECore.cMonteCarloManager.nResultWriters"/>
 <seealso cref="T:EwEUtils.Core.IMonteCarloResultsWriter"/>
 </summary>
 <param name="iIndex">One-based index of the result writer to obtain.</param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMonteCarloManager.Run">
 <summary>
 Run the Monte Carlo trials with the current parameters
 </summary>
</member>
<member name="M:EwECore.cMonteCarloManager.Load">
 <summary>
 Load the current data into the MonteCarlo parameters
 </summary>
</member>
<member name="M:EwECore.cMonteCarloManager.MCCompletedHandler">
 <summary>
 The Monte Carlo routine has complete its trials. Load the best fitting data into the interace objects and tell the interface that the trials have completed
 </summary>
</member>
<member name="M:EwECore.cMonteCarloManager.sendmessages">
 <summary>
 Send all the messages in the managers list of messages by adding them to the cores message publisher
 </summary>
 <remarks>This has to be marshalled to the interface/core thread via m_syncObject.BeginInvoke()</remarks>
</member>
<member name="M:EwECore.cMonteCarloManager.MCSendMessageHandler(EwECore.cMessage@)">
 <summary>
 Add a message to the managers list of messages. These messages will be sent at the end of the Monte Carlo run.
 </summary>
 <param name="theMessage"></param>
 <remarks>This sub has the same signature as cEcosimMonteCarlo.MonteCarloSendMessageDelegate(). 
 The Monte Carlo model uses it to send messages</remarks>
</member>
<member name="M:EwECore.cMonteCarloManager.ApplyBestFits">
 <summary>
 Apply the Monte Carlo results (best fitting parameters) to the Ecopath inputs (B,PB....)
 </summary>
</member>
<member name="M:EwECore.cMonteCarloManager.SupportedVariables">
 <summary>
 Returns which <see cref="T:EwECore.eMCParams">parameters</see> can be pertubed.
 </summary>
 <returns></returns>
</member>
<member name="M:EwECore.cMonteCarloManager.AddMessage(EwECore.cMessage@)">
 -----------------------------------------------------------------------
 <summary>
 Add a message the the managers list of messages generated by the monte carlo routine
 </summary>
 <param name="theMessage">The <see cref="T:EwECore.cMessage"/> to add.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMonteCarloManager.StopRun(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Stop the current Monte Carlo trials
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.nTrials">
 -----------------------------------------------------------------------
 <summary>
 Get/set the number of trials.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.RetainFits">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether to better fitting estimates (use trials to search)
 </summary>
 <remarks>
 Flag copied from EwE5
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.IncludeFpenalty">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether to include SRA for groups with forced catches.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.FMRatioForSRA">
 -----------------------------------------------------------------------
 <summary>
 Get/set the F/M ratio for SRA.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.UseFishingPattern">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether to retain EwE5 current Ecosim fishing rate patterns.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.SS">
 -----------------------------------------------------------------------
 <summary>
 Get the Sum of Squares fit to the currently loaded reference data for 
 the current trial.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.SSorg">
 -----------------------------------------------------------------------
 <summary>
 Get the Sum of Squares, fit to the currently loaded reference data for 
 the original ecopath parameters.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.SSBestFit">
 -----------------------------------------------------------------------
 <summary>
 Get the best fitting Sum of Squares to the currently loaded reference 
 data for all the trials run to date.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.nEcopathModelsFound">
 -----------------------------------------------------------------------
 <summary>
 Get the number of attempts at finding a balanced Ecopath model for
 the current trial.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.nEcopathIterations">
 -----------------------------------------------------------------------
 <summary>
 Get the number of attempts at finding a balanced Ecopath model for
 the current trial.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.nTrialIterations">
 -----------------------------------------------------------------------
 <summary>
 Get the number of trials performed in the currently running simulation.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.MonteCarloEcopathStepHandler">
 -----------------------------------------------------------------------
 <summary>
 Set the <see cref="T:EwECore.MonteCarloEcopathProgressDelegate">delegate</see> to 
 call at each attempt to find a balanced Ecopath model.
 </summary>
 <remarks>Call to update an interface when Ecopath has been run</remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.MonteCarloStepHandler">
 -----------------------------------------------------------------------
 <summary>
 Set the <see cref="T:EwECore.MonteCarloTrialProgressDelegate"/> to call at the completion of each Monte Carlo trial.
 </summary>
 <remarks>This delegate is supplied by a user interface and will be called 
 by the Monte Carlo routines at the end of each Monte Carlo trial.
 It will tell an interface that a single trial has completed. </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.MonteCarloCompletedHandler">
 -----------------------------------------------------------------------
 <summary>
 Set the method to call in the interface when the Monte Carlo trials have completed.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.SyncObject">
 -----------------------------------------------------------------------
 <summary>
 Set the <see cref="T:System.ComponentModel.ISynchronizeInvoke">Synchronization object</see>, which can be
 a System.Windows.Forms.Control, used for calling all the delegates across threads
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.MaxEcoPathInterations">
 -----------------------------------------------------------------------
 <summary>
 Get the max. number of iterations that Monte Carlo will perform.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.Groups(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get a <see cref="T:EwECore.cMonteCarloGroup"/> for a given index.
 </summary>
 <param name="iGroup">The one-based group index to obtain the group for.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.IsSaveOutput">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether Monte Carlo should automatically save trial outputs.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMonteCarloManager.LoadFromPedigree(EwEUtils.Core.eVarNameFlags)">
 -----------------------------------------------------------------------
 <summary>
 Load CV values from pedigree for a given variable.
 </summary>
 <param name="var">The <see cref="T:EwEUtils.Core.eVarNameFlags">variable</see> to load 
 CV values for.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.EcopathEETolerance">
 -----------------------------------------------------------------------
 <summary>
 Get/set a tolerance for EE estimates if the default mass-balance constraint 
 of [0, 1] proves too strict.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.ValidateRespiration">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether Monte Carlo should validate and reject negative respiration values.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.DietSamplingMethod">
 -----------------------------------------------------------------------
 <summary>
 Get/set which <see cref="T:EwECore.eMCDietSamplingMethod">diet sampling method</see>
 Monte Carlo should use.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMonteCarloManager.InitRandomSequence(System.Int32)">
 <summary>
 Initialize the random sequence generator to a new seed.
 </summary>
 <param name="seed"></param>
 <remarks>This can be used to generate the same sequence of random numbers for each run. This can be useful for debugging. </remarks>
</member>
<member name="M:EwECore.cMonteCarloManager.SelectNewEcopathParameters(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Select a new set of Ecopath parameters using  CV, Mean, Max and Min set in <see cref="T:EwECore.cMonteCarloGroup">cMonteCarloGroup</see>
 </summary>
 <param name="MaxEcopathIteration">Maximum number of tries to find a balanced Ecopath Model.</param>
 <returns>True if a balanced Ecopath model was found within MaxEcopathIteration. False otherwise. </returns>
 <remarks>This functionality was added to simplify external process that want to run there own Monte Carlo style models. </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cMonteCarloManager.Enable(EwECore.eMCParams)">
 <summary>
 Get/set whether Monte Carlo is allowed to vary a given variable.
 </summary>
 <param name="vn">The <see cref="T:EwECore.eMCParams">variable</see> to change.</param>
</member>
<member name="M:EwECore.cMonteCarloManager.ToMCStatus(EwECore.cEcoPathGroupInput,EwEUtils.Core.eVarNameFlags,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Derive status flags for Monte Carlo groups from Ecopath input statuses.
 </summary>
 <param name="grp">The Ecopath group to read status information from.</param>
 <param name="var">The varname of the status to read.</param>
 <returns>A montecarlified status flag.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMonteCarloManager.Update">
 <summary>
 Update the underlying data with edited values from the MonteCarloGroups
 </summary>
 <remarks>Brute force called at the start of each run</remarks>
</member>
<member name="T:EwECore.cMonteCarloResultsWriterMultipleFiles">
 ---------------------------------------------------------------------------
 <summary>
 EwE 6.6 Monte Carlo result writer, using separate files for baseline, 
 iterations, and Ecosim output.
 </summary>
 <remarks>
 This writer has been added after several complaints about the inaccessible
 format of <see cref="T:EwECore.cMonteCarloResultsWriterOneFile"/>. 
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cMonteCarloResultsWriterMultipleFiles.Save(System.Int32)">
 <summary>
 Save data to file.
 </summary>
</member>
<member name="T:EwECore.cMonteCarloResultsWriterOneFile">
 <summary>
 Pre-EwE6.6 result writer, writing all MC output to one single CSV file.
 </summary>
</member>
<member name="M:EwECore.cMonteCarloResultsWriterOneFile.Save(System.Int32)">
 <summary>
 Save both iteration and baseline data to file
 </summary>
</member>
<member name="T:EwECore.cMPAOptManager.eRunStates">
 ---------------------------------------------------------------------------
 <summary>
 ENumerated type, defines MPA search run states.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cMPAOptManager.eRunStates.Idle">
 <summary>Search is not active.</summary>
</member>
<member name="F:EwECore.cMPAOptManager.eRunStates.Initializing">
 <summary>Search is initializing.</summary>
</member>
<member name="F:EwECore.cMPAOptManager.eRunStates.Searching">
 <summary>Search is in progress.</summary>
</member>
<member name="F:EwECore.cMPAOptManager.eRunStates.Completed">
 <summary>Search is completed.</summary>
</member>
<member name="F:EwECore.cMPAOptManager.eRunStates.NewCellSelected">
 <summary>A new cell is selected to add to the current MPA configuration</summary>
</member>
<member name="F:EwECore.cMPAOptManager.eRunStates.NewBestResultFound">
 <summary>A new best result has been found.</summary>
</member>
<member name="T:EwECore.cMPAOptManager.SearchIterationDelegate">
 <summary>
 MPA Search has computed the value of a cell
 </summary>
</member>
<member name="T:EwECore.cMPAOptManager.SearchRunStateDelegate">
 <summary>
 MPA Search run state delegate.
 </summary>
</member>
<member name="T:EwECore.cMPAOptManager.SendMessageDelegate">
 <summary>
 Message sending delegate
 </summary>
 <param name="message"></param>
</member>
<member name="F:EwECore.cMPAOptManager.m_orgMPAConfig">
 <summary>
 Original MPA configuration (row x col x mpa)
 </summary>
</member>
<member name="F:EwECore.cMPAOptManager.m_dataDir">
 <summary>directory for the output data</summary>
</member>
<member name="M:EwECore.cMPAOptManager.setActiveSearch(EwECore.eMPAOptimizationModels,System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 Toggles the active search model to use.
 </summary>
 <param name="newActiveSearch">New search model to use.</param>
 <param name="bForceInit">Flag indicating whether the search should be
 initialized, even when the active search type does not change.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMPAOptManager.RunState">
 -----------------------------------------------------------------------
 <summary>
 Returns the run state of the current active <see cref="T:EwECore.IMPASearchModel">MPA search</see>, if any.
 </summary>
 <returns>The run state of the current active <see cref="T:EwECore.IMPASearchModel">MPA search</see>, if any.</returns>
 <remarks>If no search is defined yet, the state <see cref="F:EwECore.cMPAOptManager.eRunStates.Idle"/> is returned.</remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMPAOptManager.CellSelectedMap(System.Single,System.Int32,System.Int32@)">
 <summary>
 Array of the number of times a cell was selected during the search
 </summary>
 <param name="TopPercentile">Top percentile of search results to include in the map</param>
 <param name="NumberOfResults">Number of results in the top percentile</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cMPAOptManager.getPercentageList(System.Int32)">
 <summary>
 Return a list of result maps where the area closed = PercentAreaClosedFilter
 </summary>
 <param name="PercentAreaClosedFilter">Area of the map that is Closed (has an MPA set)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cMPAOptManager.CurrentRowColResults">
 <summary>
 Output object for the current Ecoseed interation 
 </summary>
</member>
<member name="M:EwECore.IMPASearchModel.ConfigureAutosave(System.Boolean,System.String,System.String)">
 <summary>
 Configure the search for auto-saving.
 </summary>
 <param name="bAutosave">Turn auto-saving on or off.</param>
 <param name="strOutputPath">Path to auto-save to.</param>
 <param name="strHeader">Header information to report when auto-saving.</param>
</member>
<member name="P:EwECore.cObjectiveResult.objFuncTotal">
 <summary>Includes weights</summary>
</member>
<member name="T:EwECore.cMPAOptOutput">
 <summary>
 Results of the current search iteration
 </summary>
 <remarks></remarks>
</member>
<member name="P:EwECore.cMPAOptOutput.BestRow">
 <summary>
 Row of the best cell for the currrent Ecoseed evaluation
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cMPAOptOutput.BestCol">
 <summary>
 Col of the best cell for the currrent Ecoseed evaluation
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cMPAOptOutput.CurRow">
 <summary>
 Row of current cell being evaluated by Ecoseed
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cMPAOptOutput.CurCol">
 <summary>
  Col of current cell being evaluated by Ecoseed
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.EcoSeed.cEcoSeed.SelectNextSeedCell">
 <summary>
 Find the next set of MPA cells to evaluate
 </summary>
 <remarks>In EwE5 this was called EvaluateSeedCell() the original code is at the bottom inactivated by a compiler directive </remarks>
</member>
<member name="F:EwECore.cMPAOptBaseClass.m_OutputFilename">
 <summary>Auto-save file name.</summary>
</member>
<member name="F:EwECore.cMPAOptBaseClass.m_bAutosaveResults">
 <summary>Flag, stating whether autosave is enabled.</summary>
</member>
<member name="F:EwECore.cMPAOptBaseClass.m_strOutputPath">
 <summary>Auto-save folder.</summary>
</member>
<member name="F:EwECore.cMPAOptBaseClass.m_strHeader">
 <summary>Auto-save file header.</summary>
</member>
<member name="F:EwECore.cMPAOptBaseClass.IsMPA">
 <summary>MPA lookup</summary>
</member>
<member name="M:EwECore.cMPAOptBaseClass.ConfigureAutosave(System.Boolean,System.String,System.String)">
 <inheritdocs cref="M:EwECore.IMPASearchModel.ConfigureAutosave(System.Boolean,System.String,System.String)"/>
</member>
<member name="M:EwECore.cMPAOptBaseClass.RunState">
 -----------------------------------------------------------------------
 <summary>
 Returns the current run state of the MPA search.
 </summary>
 <returns>The current run state of the MPA search.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMPAOptBaseClass.YearTimeStep(System.Int32@,System.Single[])">
 <summary>
 Public interfaced called by Ecospace at the start of each Year
 </summary>
 <param name="Biomass"></param>
 <param name="iYear"></param>
 <remarks>This is used by Ecoseed to control the length of the Ecospace run</remarks>
</member>
<member name="M:EwECore.cMPAOptBaseClass.StoreObjectiveFunctionResults(System.IO.StreamWriter)">
 <summary>
 Store the best row and col for this search interation
 </summary>
 <remarks>Right now this is writing the results file and memory</remarks>
</member>
<member name="M:EwECore.cMPAOptBaseClass.WriteOutputFileHeader(System.IO.StreamWriter)">
 <summary>
 Write header information to an output writer.
 </summary>
 <param name="writer">The writer to write to.</param>
</member>
<member name="M:EwECore.cMPAOptBaseClass.WriteOutputData(System.IO.StreamWriter)">
 <summary>
 Write the objective function values to file
 </summary>
 <param name="writer">The writer to write to.</param>
</member>
<member name="M:EwECore.cMPAOptDataStructures.Clear">
 <summary>
 Clear out the current Ecoseed values
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.cMPACell">
 <summary>
 MPA cell selected during a trial
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cMPARandomSearch.m_watercells">
 <summary>Water cell numbers for resampling</summary>
</member>
<member name="F:EwECore.cMPARandomSearch.m_regionCells">
 <summary>Region # -> cell numbers for resampling</summary>
</member>
<member name="F:EwECore.cMPARandomSearch.m_regionSize">
 <summary>Number of cells in a region</summary>
</member>
<member name="F:EwECore.cMPARandomSearch.m_regionSet">
 <summary>Number of cells set in a region</summary>
</member>
<member name="M:EwECore.cMPARandomSearch.ConvertToMPA(System.Int32[0:,0:],System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Convert 'iAreaPercentToClose' cells in the map to MPA 'iMPA'
 </summary>
 <param name="hitcountmap">The best count map to convert.</param>
 <param name="iAreaPercentToClose">Percent of water cells 
 to close in addition to the current MPAs.</param>
 <param name="iMPA">The MPA to assign new cells to.</param>
 <returns>True if successful.</returns>
 <remarks>
 Cells are selected from the best count map, aiMap, by descending
 value until either the requested percentage is met or there are no 
 convertable cells left.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.nForcing">
 <summary>
 Number of PP forcing functions iterations
 </summary>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.bForcingLoaded">
 <summary>
 Is there forcing data in the command file
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.nControlTypes">
 <summary>
 Number of Control type iterations
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.nTFM">
 <summary>
 Number of TFM (hockey stick) iteration
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.nFixedF">
 <summary>
 Number of Fixed Fishing Mortality iterations
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.nTAC">
 <summary>
 Number of Total Allowable Catch iterations
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.nParIters">
 <summary>
 Number of iterations for the selected run type 
 </summary>
 <remarks>If RunType = eMSEBatchRunTypes.TFM then nParIters = nTFMs</remarks>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.ForcingNames">
 <summary>
 Names of the loaded forcing functions
 </summary>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.ForcingIndexes">
 <summary>
 Index to forcing function to use
 </summary>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.ForcingGroup">
 <summary>
 Index to group PP forcing function is applied to
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.ControlType">
 <summary>
 number of Control type
 </summary>
 <remarks>dimensioned NControlTypes, nFleets</remarks>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.tfmBlim">
 <summary>
 MSE Blim
 </summary>
 <remarks>tfmBlim(nTFM,nGroups) </remarks>
</member>
<member name="F:EwECore.MSEBatchManager.cMSEBatchDataStructures.ScenarioDBID">
 <summary>
 Database ID of the currently loaded Batch Scenario
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSEBatchManager.cMSEBatchDataStructures.StoreMSEState(EwECore.MSE.cMSEDataStructures)">
 <summary>
 Store the initial state of the MSE data so it can be restored later
 </summary>
 <param name="MSEdata"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSEBatchManager.cMSEBatchDataStructures.ReStoreMSEState(EwECore.MSE.cMSEDataStructures)">
 <summary>
 Restore the MSE data to its original state
 </summary>
 <param name="MSEdata"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSEBatchManager.cMSEBatchManager.Load">
 <summary>
 Load core data into Input objects
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSEBatchManager.cMSEBatchManager.Update(EwEUtils.Core.eDataTypes,EwEUtils.Core.eVarNameFlags)">
 <summary>
 Update core data with data from input objects
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSEBatchManager.cMSEBatchManager.setDefaults">
 <summary>
 Sets Default values that are needed when the MSE Batch is run from the interface 
 instead of the Batch Command file
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSEBatchManager.cMSEBatchManager.UpdateNParameterIters">
 <summary>
 Update the Input/Ouput objects to the number of Iteration set by the interface
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSEBatchManager.cMSEBatchManager.varyForcing(System.Single[]@)">
 <summary>
 Vary the Primary Production forcing function value of the current time step
 </summary>
 <param name="ForcingMultTime"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSEBatchManager.cMSEBatchManager.setParameters(System.Int32)">
 <summary>
 Set Quota parameters e.g F, TFM... according to the RunType
 </summary>
 <param name="iParIter"></param>
 <remarks>
 If the RunType is Any then set any of the parameters to the values in the command file. 
 For all other RunTypes set the other parameters to zero so they will not be used. </remarks>
</member>
<member name="P:EwECore.MSEBatchManager.cMSEBatchManager.BatchData">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>JS: changed to public to make sure existing plug-ins keep working</remarks>
</member>
<member name="M:EwECore.MSEBatchManager.cMSEBatchManager.LoadPPForcing(System.Int32,System.Int32)">
 <summary>
 Load an existing Primary Production forcing function 
 </summary>
 <param name="iShapeIndex">Index of the Forcing Function shape</param>
 <param name="iPPGroupIndex">Ecosim index of the Primary Production group this forcing function applies to</param>
 <remarks></remarks>
</member>
<member name="T:EwECore.MSE.cMSEFleetInput">
 <summary>
 
 </summary>
 <remarks></remarks>
</member>
<member name="P:EwECore.MSE.cMSEFleetInput.BatchEdit">
 <summary>
 Edit the CVs in batch mode no messages are sent out when BatchEdit = True when BatchEdit is toggled to False then the core is notified.
 </summary>
 <remarks>This turns off the AllowValidation flag which stops the object from calling core.OnValidate() vastly speeding up the editing</remarks>
</member>
<member name="P:EwECore.MSE.cMSEFleetInput.QIncrease">
 <summary>
 MSE increase in catchability by group per year (multiplier)
 </summary>
</member>
<member name="P:EwECore.MSE.cMSEFleetInput.FleetWeight(System.Int32)">
 <summary>
 Importance weight of fleet on a group
 </summary>
 <param name="iGroup">impacted group</param>
</member>
<member name="P:EwECore.MSE.cMSEGroupInput.BatchEdit">
 <summary>
 Edit the SearchBlocks in batch mode no messages are sent out when BatchEdit = True when BatchEdit is toggled to False then the core is notified.
 </summary>
 <remarks>This turns off the AllowValidation flag which stops the object from calling core.OnValidate() vastly speeding up the editing</remarks>
</member>
<member name="T:EwECore.MSE.cMSEManager">
 <summary>
 Manager class for the MSE (Closed loop simulator in EwE5)
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSE.cMSEManager.m_debug">
 <summary>Messing with the setting of m_core somehow cripples Fit2Timeseries. Why? Dunno. 
 Still need a solid check when running multiple cores in parallel</summary>
</member>
<member name="M:EwECore.MSE.cMSEManager.Update(EwEUtils.Core.eDataTypes)">
 <summary>
 Update the underlying core data with edits from the interface
 </summary>
 <remarks>This is called by the core when a variable passes validation via cCore.OnValidated()</remarks>
</member>
<member name="M:EwECore.MSE.cMSEManager.SumQuotaShareToOne">
 <summary>
 Sum quota shares to one.
 </summary>
</member>
<member name="M:EwECore.MSE.cMSEManager.SetDefaultQuotaShare">
 <summary>
 Reset quota shares to defaults.
 </summary>
</member>
<member name="M:EwECore.MSE.cMSEManager.SetDefaultTFM">
 <summary>
 Reset quota shares to defaults.
 </summary>
</member>
<member name="M:EwECore.MSE.cMSEManager.SetDefaultGroupRefLevels">
 <summary>
 Reset group references levels to default fishing mortalities.
 </summary>
</member>
<member name="M:EwECore.MSE.cMSEManager.OnMSECallBack(EwECore.MSE.eMSERunStates)">
 <summary>
 Callback handler called by the MSE model
 </summary>
 <param name="CallBackType"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSEManager.OnMSYCallBack(EwECore.MSE.cMSYProgressArgs)">
 <summary>
 Callback handler called by the MSY search 
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSEManager.LoadOutputs">
 <summary>
 Load results of trial(s) into output object
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.MSE.cMSEResultsStatsWrapper">
 <summary>
 Wrapper class for a cMSESummaryStats object used by the cMSEStats objects
 </summary>
 <remarks></remarks>
</member>
<member name="P:EwECore.MSE.cMSEResultsStatsWrapper.AboveLimit">
 <summary>
 Percentage of data points above the upper limit
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.MSE.cMSEResultsStatsWrapper.BelowLimit">
 <summary>
 Percentage of data points below the lower limit
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.MSE.cMSEStats.Values(System.Int32)">
 <summary>
 Returns a zero based array of values for an iteration
 </summary>
 <param name="IterationIndex"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.MSE.cMSEParameters.MSEResultsStartYear">
 <summary>
 NOT IMPLEMENTED 
 </summary>
</member>
<member name="P:EwECore.MSE.cMSEParameters.MSEResultsEndYear">
 <summary>
  NOT IMPLEMENTED 
 </summary>
</member>
<member name="T:EwECore.MSE.cMSYProgressArgs">
 <summary>
 
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.MSE.eMSERunStates">
 <summary>
 Run states of the MSE 
 </summary>
 <remarks>Passed out via the MSEProgressDelegate</remarks>
</member>
<member name="T:EwECore.MSE.cMSE">
 <summary>
 Management Strategy Evaluation
 </summary>
 <remarks>This was the Closed Loop Simulation in EwE5</remarks>
</member>
<member name="F:EwECore.MSE.cMSE.m_lstData">
 <summary>Dictionary of arrays that are use to store results that are gathered by the MSE.</summary>
 <remarks>Use to store results that are not computed by Ecosim.</remarks>
</member>
<member name="F:EwECore.MSE.cMSE.m_curT">
 <summary>Current time index(cumulative month) computed by Ecosim</summary>
 <remarks>set when Ecosim calls SetTime()</remarks>
</member>
<member name="F:EwECore.MSE.cMSE.m_curYear">
 <summary>Current year index computed by Ecosim</summary>
 <remarks>set when Ecosim calls SetTime()</remarks>
</member>
<member name="M:EwECore.MSE.cMSE.setEffortForRun">
 <summary>
 Set the Effort to a max value if running in default mode TrackUseQuota
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:EwECore.MSE.cMSE.setEffortToBase">
 <summary>
 Set Effort back to its original value after a run
 </summary>
 <remarks>Always set effort base to its original value!</remarks>
</member>
<member name="M:EwECore.MSE.cMSE.AddIteration">
 <summary>
 Add an iteration to the stats data
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSE.PostPluginData">
 <summary>
 Tell any plugin that a search iteration has completed
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSE.SumValues">
 <summary>
 Sum results of Model run into Mean values
 </summary>
 <remarks>Once the trials have been finished the mean will be calculated from the sums in getMeanValues() (e.g. MeanEmploy) </remarks>
</member>
<member name="M:EwECore.MSE.cMSE.AccessBioRisk(System.Single[])">
 <summary>
 Count the number of times the Biomass is outside the lower or upper risk boundry
 </summary>
 <param name="Biomass"></param>
 <remarks>The biomass risk count can only be one per trial</remarks>
</member>
<member name="M:EwECore.MSE.cMSE.VaryEffortCatchability(System.Single[]@,System.Single[]@,System.Int32)">
 <summary>
 Set Fgear() and QYear() for a management strategy evaluation
 </summary>
 <param name="Fgear">Fishing Effort</param>
 <param name="QYear">Catchability growth per year</param>
 <param name="iYear"></param>
 <remarks>Called from Ecosim during a management strategy evaluation</remarks>
</member>
<member name="M:EwECore.MSE.cMSE.RegulateLPEffort(System.Single[],System.Single[],System.Single[],System.Int32)">
 <summary>
 Compute the effort regulations via the Linear Solution 
 </summary>
 <param name="Biomass">Biomass at the current time step for all the groups</param>
 <param name="QMult">Density dependant Q (fishing mort) multiplier</param>
 <param name="QYear">Growth in Catchabilty per year</param>
 <param name="t">Time step counter for this time step</param>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSE.RegulateEffortViaLPSolve(System.Single[],System.Single[],System.Single[],System.Int32)">
 <summary>
 Get the LP Solution from the lpsolve55 API directly, instead of from the cLPSolver wrapper
 </summary>
 <param name="Biomass"></param>
 <param name="QMult"></param>
 <param name="QYear"></param>
 <param name="t"></param>
 <remarks>This is for debugging the setup of LPSolve via the API</remarks>
</member>
<member name="M:EwECore.MSE.cMSE.DoAssessment(System.Single[])">
 <summary>
 Populates Bestimate() and KalmanGain() for regulated fisheries
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSE.UpdateQuotas(System.Single[])">
 <summary>
 Update fishing quotas for regulated fisheries
 </summary>
 <remarks>
 Populates <see cref="F:EwECore.MSE.cMSEDataStructures.QuotaTime">cMSEDataStructures.QuotaTime(ngroups)</see> 
 with the quota for this year based on <see cref="F:EwECore.MSE.cMSEDataStructures.Bestimate">cMSEDataStructures.Bestimate(ngroups)</see> 
 , biomass from the stock assessment model.
 </remarks>
</member>
<member name="M:EwECore.MSE.cMSE.StoreQuotas(System.Single[])">
 <summary>
 Save the quota values to memory
 </summary>
 <param name="QuotaT">Quota array by group</param>
</member>
<member name="M:EwECore.MSE.cMSE.Normal">
 <summary>
 Box-Muller normally distributed random number with a standard deviation of one
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSE.onMSYEcosimTimestep(System.Int64,EwECore.cEcoSimResults)">
 <summary>
 Ecosim Timestep delegate handler for the MSY Search
 </summary>
 <param name="iTime"></param>
 <param name="data"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSE.setTime(System.Int32,System.Int32)">
 <summary>
 Set Biomass and F cv's to use for this year.
 </summary>
 <remarks>CV's can vary on a yearly timestep set by the interface. This sets the CV to use for this year. </remarks>
</member>
<member name="M:EwECore.MSE.cMSE.onEcosimTimestep(System.Int64,EwECore.cEcoSimResults)">
 <summary>
 Ecosim Timestep delegate handler 
 </summary>
 <param name="iTime"></param>
 <param name="data"></param>
</member>
<member name="M:EwECore.MSE.cMSE.onEconomicData(EwEUtils.Core.IEconomicData)">
 <summary>
 Event handler for Plugin Economic data
 </summary>
 <param name="EconomicData"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSE.summarizeEcosimEconomicData">
 <summary>
 Summarize the economic data gathered by Ecosim at the end of a trial
 </summary>
 <remarks>Economic data caculated by ecosim at the end of a run</remarks>
</member>
<member name="M:EwECore.MSE.cMSE.RandomNormal">
 <summary>
 Normally distrubute random number where mean = 0 std = 1
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.MSE.eMSERegulationMode">
 <summary>
 Regulatory mode for MSE
 </summary>
 <remarks>Effort can come from a variaty of sources</remarks>
</member>
<member name="F:EwECore.MSE.eMSERegulationMode.UseRegulations">
 <summary>Regulation are used. Max effort from Ecosim scenario or no max effort imposed.</summary>
</member>
<member name="F:EwECore.MSE.eMSERegulationMode.NoRegulations">
 <summary>Ecosim effort. Effort not regulated</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.Fweight">
 <summary>
 Importance weight of a fleet on a group
 </summary>
 <remarks> fleets, groups</remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.Fwc">
 <summary>
 Weighted relative catchablility for closed loop FWeight * RelQ
 Use to update fishing effort during an Ecosim run 
 </summary>
 <remarks>
 Fwc(ifleet, 0) initialized to Ecopath base value in Fwc(Fleet) = Fweight(iFlt, iGrp) * relQ(iFlt, iGrp)
 Fwc(iFleet, 1) = Updated for each year in MSE.AccessFs
 FishingEffort(iFleet) = FishingEffort(iFleet) * m_data.Fwc(iFleet, 0) / m_data.Fwc(iFleet, 1)
 </remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.CVFT">
 <summary>fleets,years</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.BioR0">
 <summary>
 T/F flag tells the MSE if a trial has exceeded the lower biomasss risk boundry
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.BioR1">
 <summary>
 T/F flag tells the MSE if a trial has exceeded the upper biomasss risk boundry
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.BioRiskCount">
 <summary>
 Number of trials biomass was outside the lower or upper risk boundry
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.RHalfB0Ratio">
 <summary>
 Input Ratio of Bt to B0 needed for 50% of max recruitment 
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.sumEmployVal">
 <summary>sum of employment value over all the completed trials</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.SumTotVal">
 <summary>sum of economic over all the completed trials</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.sumManVal">
 <summary>sum of mandated value over all the completed trials</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.sumEcoVal">
 <summary>sum of ecological value (biomass) over all the completed trials</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.sumWeightedValues">
 <summary>weighted sum of all values over all the completed trials</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.AssessMethod">
 <summary>
 Use for EwE5 Closed Loop Fishing Rate Assessment method
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.Bestimate">
 <summary>
 Biomass estimated for the current year.
 </summary>
 <remarks>Calculated via the Stock Assessment model in <see cref="M:EwECore.MSE.cMSE.DoAssessment(System.Single[])">DoAssessment()</see></remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.BestimateLast">
 <summary>
 Estimated biomass from the last year
 </summary>
 <remarks>Set to Bestimate() for the previous year.</remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.RegulationMode">
 <summary>Regulatory Mode</summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.CatchGroupBounds">
 <summary>Catch by group bounds</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.CatchFleetBounds">
 <summary>Catch by fleet bounds</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.EffortFleetBounds">
 <summary>Effort by fleet bounds</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.MSYStartTimeIndex">
 <summary>
 Time index to start the MSY search at
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.MSYRunSilent">
 <summary>
 run the MSY search without calling the interface
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.MSYEvaluateValue">
 <summary>
 If True the MSE will evalute the run using Value. If false it will use Catch Biomass.
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.StartYear">
 <summary>
 Year to start the assessment on
 </summary>
 <remarks>This is in years the model runs on timesteps</remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.EndYear">
 <summary>
 Year to stop the regulations on
 </summary>
 <remarks>This is cumulative years and the model supplies cumulative time steps(months)</remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.ResultsStartYear">
 <summary>
 NOT IMPLEMENTED YET
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.ResultsEndYear">
 <summary>
 NOT IMPLEMENTED YET
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.Bbase">
 <summary>
 Biomass of group when fishing mortality is at Fopt(igroup)(max mortality) 
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.Blim">
 <summary>
 Biomass of group when fishing mortality is at zero or Fmin(igroup)
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.Fopt">
 <summary>
 Max fishing mortality
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.Fmin">
 <summary>
 Fishing mortality when biomass(igroup) is at Blim(igroup) Minimum fishing mortality
 </summary>
 <remarks>This is only set to none zero from the batch manager for all other runs it is zero</remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.TAC">
 <summary>
 Total allowable catch
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.FixedF">
 <summary>
 Fixed fishing mortality
 </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.MaxEffort">
 <summary>Max Fishing Effort for Regulatory Reduction in fishing effort  (by gear)</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.QuotaType">
 <summary>Type of quota system in effect (by gear) </summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.Quota">
 <summary>Fishing Quota for regulated fisheries  (by gear group)</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.RegDiscard">
 <summary>Biomass discarded because of regulation  (by gear group)</summary>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.Quotashare">
 <summary>Percentage of total catch by at fleet on a group (by fleet, group)</summary>
 <remarks>Sums to one across all fleets for a group</remarks>
</member>
<member name="F:EwECore.MSE.cMSEDataStructures.QuotaTime">
 <summary>
 Quota for the current year by fleet/group updated at the start of a year by <see cref="M:EwECore.MSE.cMSE.UpdateQuotas(System.Single[])">cMSE.UpdateQuotas</see>
 </summary>
 <remarks>Used by <see cref="M:EwECore.MSE.cMSE.DoRegulations(System.Single[],System.Single[],System.Single[],System.Single[],System.Int32,System.Int32,System.Int32)">DoRegulations()</see> to do fisheries regulations based on user selected controls.</remarks>
</member>
<member name="M:EwECore.MSE.cMSEDataStructures.Init(EwECore.cCore)">
 <summary>
 Set default values for the Management Strategy Evaluation model cMSE
 </summary>
</member>
<member name="M:EwECore.MSE.cMSEDataStructures.RedimVars">
 <summary>
 Redimension variables and set default variable values.
 </summary>
</member>
<member name="M:EwECore.MSE.cMSEDataStructures.DefaultBioBounds(System.Int32)">
 <summary>
 Load the Bounds/Traffic light objects with the values from the Quota data Blim and Bbase
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSEDataStructures.InitForTrial">
 <summary>
 Set variable to default values for a trial
 </summary>
 <remarks>Sets Wftot(), Fwc(), VarQyear(), VarQgrow(), VarQest(), KalGainQ() </remarks>
</member>
<member name="M:EwECore.MSE.cMSEDataStructures.setDefaultRegValues">
 <summary>
 Set default values for regulated fisheries
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSEDataStructures.setDefaultTFM">
 <summary>
 Set default target fishing mortalities
 </summary>
 <remarks>10%, 40% and Ecopath F</remarks>
</member>
<member name="M:EwECore.MSE.cMSEDataStructures.setDefaultRecruitment">
 <summary>
 Set default values for the recruitment model
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSE.cMSEDataStructures.setDefaultQuotaShare">
 <summary>
 Set QuotaShare to default values from Ecopath.Landing and Ecopath.Discards
 </summary>
 <remarks>QuotaShare(fleet,group) is proportion of catch on a group by a fleet. Should sum to one for a group across fleets.</remarks>
</member>
<member name="F:EwECore.MSE.cMSESummaryStats.m_n">
 <summary>
 Number of data points stored
 </summary>
</member>
<member name="F:EwECore.MSE.cMSESummaryStats.m_count">
 <summary>
 Number of groupings(groups/fleets)
 </summary>
</member>
<member name="F:EwECore.MSE.cMSESummaryStats.m_lstValues">
 <summary>
 List of data by Group/iteration/time. Each iteration will have its own array of data points
 </summary>
</member>
<member name="M:EwECore.MSE.cMSESummaryStats.AddIteration">
 <summary>
 Add an Iteration/Model Run to the stats
 </summary>
 <remarks>Each iteration will have its own list of data points</remarks>
</member>
<member name="P:EwECore.MSE.cMSESummaryStats.Values(System.Int32,System.Int32)">
 <summary>
 Return the stored values for an iteration as an array
 </summary>
 <param name="Index"></param>
 <param name="Iteration"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSECommandFile.cMSECommandFileReader.isIndexTag(System.String)">
 <summary>
 Is this Tag an Index Tag
 </summary>
 <param name="tag">Tag to check</param>
 <returns>True if this Tag is for an Index parameter</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSECommandFile.cMSECommandFileReader.isTag(System.String,System.String)">
 <summary>
 Is this string a Tag from the control file
 </summary>
 <param name="InputTag">String to check</param>
 <param name="TagConstant"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSECommandFile.cMSECommandFileReader.getTagData(System.String)">
 <summary>
 Returns a list of parameters read from the control file for this Tag 
 </summary>
 <param name="tag"></param>
 <returns>Returns List(Of IMSEParameter) </returns>
 <remarks>
 If no data was found for this TAG then return a list with zero IMSEParameter objects.
 The user is responsible for checking then number of objects in the list
 </remarks>
</member>
<member name="M:EwECore.MSECommandFile.cMSECommandFileReader.ControlToQuotaType(System.Int32)">
 <summary>
 Convert the Control Index from the command file into an EwEUtils.Core.eQuotaTypes
 </summary>
 <param name="iControlIndex"></param>
 <returns>A valid EwEUtils.Core.eQuotaTypes</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSECommandFile.IMSEParameter.Init(System.String)">
 <summary>
 Init to the string read from the control file
 </summary>
 <param name="ParameterString"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.MSECommandFile.IMSEParameter.Update">
 <summary>
 Update underlying MSE variable with values
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.MSECommandFile.cParameterListBase">
 <summary>
 Base class for parameters were there is a single value with multiple enteries
 </summary>
 <remarks>Used for parameters like FixedF where this is one value across multiple groups. 
 Indexes are read and stored in a different object and can be retrieved from the MSEBatchManager.getTagData(string)
 </remarks>
</member>
<member name="T:EwECore.MSECommandFile.cParameterObjectBase">
 <summary>
 Base class for parameter objects that have only one value String or Numeric
 </summary>
 <remarks>Data from command file is stored as a string. For parameters that are numeric see cParameterNumericBase</remarks>
</member>
<member name="T:EwECore.MSECommandFile.cParameterNumericBase">
 <summary>
 Base class for parameter object that contain one parameter value and are numeric
 </summary>
 <remarks>This provides a generic Validate() method so each numeric class does not need to supply its own. </remarks>
</member>
<member name="T:EwECore.cMSECSVOutputWriter">
 <summary>
 Helper class for writing MSE interations to file.
 </summary>
</member>
<member name="T:EwECore.MSY.cFMSYResults">
 -----------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cFMSYResults.#ctor(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="nGroups"></param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cFMSYResults.FMSY(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cFMSYResults.CMSY(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cFMSYResults.CMSYBase(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cFMSYResults.FBase(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cFMSYResults.Value(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cFMSYResults.ValueBase(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cFMSYResults.IsFopt(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cFMSYResults.CatchAtFMSY(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cFMSYResults.ValueAtFMSY(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.MSY.cMSYOptimum">
 -----------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.MSY.cMSYOptimum.m_Fopt">
 <summary>FMSY per group.</summary>
</member>
<member name="F:EwECore.MSY.cMSYOptimum.m_IsFopt">
 <summary>Flag stating whether Fmsy was actually found.</summary>
</member>
<member name="M:EwECore.MSY.cMSYOptimum.#ctor(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="nGroups"></param>
 <remarks></remarks>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cMSYOptimum.FOpt(System.Object)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cMSYOptimum.IsFopt(System.Object)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.MSY.cMSYFResult">
 -----------------------------------------------------------------------
 <summary>
 MSY Results 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.MSY.cMSYFResult.m_B">
 <summary>Biomass at the current F, by group.</summary>
</member>
<member name="F:EwECore.MSY.cMSYFResult.m_Catch">
 <summary>Catch by group at the current F, by group.</summary>
</member>
<member name="F:EwECore.MSY.cMSYFResult.m_FishingMort">
 <summary>Fishing Mortality by group.</summary>
</member>
<member name="M:EwECore.MSY.cMSYFResult.#ctor(System.Int32,System.Single,System.Single)">
 -----------------------------------------------------------------------
 <summary>
 
 </summary>
 <param name="nGroups"></param>
 <param name="F"></param>
 <param name="Value"></param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cMSYFResult.B(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cMSYFResult.Catch(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cMSYFResult.FishingMort(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 ToDo
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cMSYFResult.FCur">
 -------------------------------------------------------------------
 <summary>
 Get the current F.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.MSY.cMSYFResult.TotalValue">
 -------------------------------------------------------------------
 <summary>
 Get the total value.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.MSY.MSYRunStateDelegate">
 <summary>
 Delegate that allows MSY / FMSY run progress to be broadcasted.
 </summary>
 <param name="RunStateType"></param>
</member>
<member name="T:EwECore.MSY.cMSYManager">
 <summary>
 Manager for interacting with the MSY routines.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSYManager.IsAllowedToRun">
 <summary>
 Returns whether the MSY can run.
 </summary>
 <returns>True if allowed to run.</returns>
 <remarks>
 JS: Separated run check from run method because user may get prompted
 for every run, and run may be called several times in succession.
 </remarks>
</member>
<member name="M:EwECore.MSY.cMSYManager.RunFindFMSYThreaded">
 <summary>
 Run the FMSY search, quietly.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSYManager.Parameters">
 <summary>
 Returns the <see cref="T:EwECore.MSY.cMSYParameters"/> to configure the MSY run.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSYManager.MSYResults">
 <summary>
 Returns the <see cref="T:EwECore.MSY.cMSYFResult">results list</see>, sorted by F.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSYManager.BaseLineResults">
 <summary>
 Returns the <see cref="T:EwECore.MSY.cMSYFResult">results</see> of a base line run.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSYManager.FMSY">
 <summary>
 Returns the <see cref="T:EwECore.MSY.cMSYOptimum">FMSY optimum results</see>.
 </summary>
</member>
<member name="P:EwECore.MSY.cMSYManager.IsAutoSaveOutput">
 <summary>
 Get/set whether output should be automatically saved to file.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSYManager.Update(EwEUtils.Core.eDataTypes)">
 <summary>
 Update the underlying core data with edits from the interface
 </summary>
 <remarks>This is called by the core when a variable passes validation via cCore.OnValidated()</remarks>
</member>
<member name="T:EwECore.MSY.cMSYParameters">
 <summary>
 Parameters to configure an MSY search.
 </summary>
</member>
<member name="T:EwECore.MSY.cMSYResultWriterBase">
 <summary>
 Base Class for writing MSY results.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSYResultWriterBase.OpenWriter(System.String)">
 -------------------------------------------------------------------
 <summary>
 Open a CSV file writer.
 </summary>
 <param name="strFile">File name to open the writer for.</param>
 <returns>The writer, or nothing if an error occurred.</returns>
 <remarks>Close the writer with <see cref="M:EwECore.MSY.cMSYResultWriterBase.CloseWriter(System.IO.StreamWriter,System.String)"/>.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterBase.CloseWriter(System.IO.StreamWriter,System.String)">
 -------------------------------------------------------------------
 <summary>
 Close a CSV file writer.
 </summary>
 <param name="sw">The writer to close.</param>
 <param name="strPath ">The path to the file of the writer.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterBase.WriteHeader(System.IO.StreamWriter,EwEUtils.Core.eMSYAssessmentTypes,System.String)">
 -------------------------------------------------------------------
 <summary>
 Write CSV header information.
 </summary>
 <param name="writer">Writer to write to. Yippee.</param>
 <param name="ass">Type of MSY <see cref="T:EwEUtils.Core.eMSYAssessmentTypes"/>.</param>
 <param name="strRun">Name of the run</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterBase.ErrorMessage(System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Message to use to report an error.
 </summary>
 <param name="strPath">Output file name.</param>
 <param name="strReason">Reason of failure, most likely the text obtained from an exception.</param>
 <returns>The message to use to report an error.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterBase.SuccessMessage(System.String)">
 -------------------------------------------------------------------
 <summary>
 Message to use to report a succes.
 </summary>
 <param name="strPath">Output file name.</param>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.MSY.cMSYResultWriterFMSY">
 <summary>
 Class for writing Fmsy search results.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSYResultWriterFMSY.WriteCSV(System.String,EwEUtils.Core.eMSYAssessmentTypes,EwECore.MSY.cFMSYResults)">
 -------------------------------------------------------------------
 <summary>
 Write FMSY search results to a CSV file.
 </summary>
 <param name="strPath"></param>
 <param name="ass"></param>
 <param name="result"></param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterFMSY.ErrorMessage(System.String,System.String)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.MSY.cMSYResultWriterBase.ErrorMessage(System.String,System.String)"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterFMSY.SuccessMessage(System.String)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.MSY.cMSYResultWriterBase.SuccessMessage(System.String)"/>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.MSY.cMSYResultWriterMSY">
 <summary>
 Class for writing MSY run results.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSYResultWriterMSY.WriteGroupResults(System.String,System.Int32,EwEUtils.Core.eMSYAssessmentTypes,System.Single,EwECore.MSY.cMSYFResult[],EwECore.MSY.cMSYOptimum)">
 -------------------------------------------------------------------
 <summary>
 Write MSY results to CSV file when MSY has been ran for a group.
 </summary>
 <param name="strPath">Output file location.</param>
 <param name="iGroup">Group that MSY was ran for.</param>
 <param name="ass"><see cref="T:EwEUtils.Core.eMSYAssessmentTypes">Tee hee hee</see>.</param>
 <param name="FBase">Base F.</param>
 <param name="results">MSY results.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterMSY.WriteGroupValueResults(System.String,System.Int32,EwEUtils.Core.eMSYAssessmentTypes,System.Single,EwECore.MSY.cMSYFResult[],EwECore.MSY.cMSYOptimum)">
 -------------------------------------------------------------------
 <summary>
 Write MSY results to CSV file when MSY has been ran for a group.
 </summary>
 <param name="strPath">Output file location.</param>
 <param name="iGroup">Group that MSY was ran for.</param>
 <param name="ass"><see cref="T:EwEUtils.Core.eMSYAssessmentTypes">Tee hee hee</see>.</param>
 <param name="FBase">Base F.</param>
 <param name="results">MSY results.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterMSY.WriteFleetResults(System.String,System.Int32,EwEUtils.Core.eMSYAssessmentTypes,EwECore.MSY.cMSYFResult[],EwECore.MSY.cMSYOptimum)">
 -------------------------------------------------------------------
 <summary>
 Write MSY results to CSV file when MSY has been ran for a fleet.
 </summary>
 <param name="strPath">Output file location.</param>
 <param name="iFleet">Fleet that MSY was ran for.</param>
 <param name="assessment"><see cref="T:EwEUtils.Core.eMSYAssessmentTypes"/>.</param>
 <param name="results">MSY results.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterMSY.WriteFleetValueResults(System.String,System.Int32,EwEUtils.Core.eMSYAssessmentTypes,EwECore.MSY.cMSYFResult[],EwECore.MSY.cMSYOptimum)">
 -------------------------------------------------------------------
 <summary>
 Write MSY results to CSV file when MSY has been ran for a fleet.
 </summary>
 <param name="strPath">Output file location.</param>
 <param name="iFleet">Fleet that MSY was ran for.</param>
 <param name="assessment"><see cref="T:EwEUtils.Core.eMSYAssessmentTypes"/>.</param>
 <param name="results">MSY results.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterMSY.ErrorMessage(System.String,System.String)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.MSY.cMSYResultWriterBase.ErrorMessage(System.String,System.String)"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSYResultWriterMSY.SuccessMessage(System.String)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.MSY.cMSYResultWriterBase.SuccessMessage(System.String)"/>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.MSY.cMSY">
 -----------------------------------------------------------------------
 <summary>
 MSY search engine.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.MSY.cMSY.bb">
 <summary>
 Local copy of biomass that is used for the long simulation
 </summary>
</member>
<member name="F:EwECore.MSY.cMSY.m_FBase">
 <summary>F at base line for the current group</summary>
</member>
<member name="M:EwECore.MSY.cMSY.#ctor(EwECore.Ecosim.cEcosimModel,EwECore.MSY.cMSYDataStructures,EwECore.cEcopathDataStructures,EwECore.cEcosimDatastructures)">
 -------------------------------------------------------------------
 <summary>
 Create a new instance of the MSY model.
 </summary>
 <param name="Ecosim"><see cref="T:EwECore.Ecosim.cEcosimModel">Ecosim model</see> to use.</param>
 <param name="MsyData"><see cref="T:EwECore.MSY.cMSYDataStructures">MSY data structures</see> to use.</param>
 <param name="EcopathData"><see cref="T:EwECore.cEcopathDataStructures">Ecopath data structures</see> to use.</param>
 <param name="EcosimData"><see cref="T:EwECore.cEcosimDatastructures">Ecosim data structures</see> to use.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSY.Connect(EwECore.MSY.MSYRunStateDelegate,EwECore.cCore.CoreMessageDelegate)">
 -------------------------------------------------------------------
 <summary>
 Connect the MSY model to a <see cref="T:EwECore.MSY.MSYRunStateDelegate">run state delegate</see> 
 through which this model can report its run state, and a <see cref="T:EwECore.cCore.CoreMessageDelegate">message delegate</see>
 through which this model can report internal events.
 </summary>
 <param name="RunStateDelegate">The <see cref="T:EwECore.MSY.MSYRunStateDelegate">run state delegate</see>
 to connect, or Nothing to <seealso cref="M:EwECore.MSY.cMSY.Disconnect"/>.</param>
 <param name="MessageDelegate">The <see cref="T:EwECore.cCore.CoreMessageDelegate">message delegate</see> 
 through which the MSY model can send <see cref="T:EwECore.cMessage">messages</see>.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSY.Disconnect">
 -------------------------------------------------------------------
 <summary>
 Disconnect from <seealso cref="M:EwECore.MSY.cMSY.Connect(EwECore.MSY.MSYRunStateDelegate,EwECore.cCore.CoreMessageDelegate)">previously connected delegates</seealso>.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSY.RunMSY">
 -------------------------------------------------------------------
 <summary>
 Perform an MSY run.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSY.RunFindFMSY">
 -------------------------------------------------------------------
 <summary>
 Perform an Find FMSY run.
 </summary>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.MSY.cMSY.InitFMSY">
 <summary>
 Initialize anything that is specific to a FMSY run
 </summary>
</member>
<member name="M:EwECore.MSY.cMSY.setFStepSizeFixedF">
 <summary>
 Sets the F Step Size base on FSelectionMode, MaxRelF and FStepSize
 </summary>
 <remarks>
 When FSelectionMode = eMSYFSelectionModeType.Groups F in runSingleSpecies() is the actual fishing mortality rate that get set in setFishingRates(F).
 This means m_FBase is the Ecopath Base F, m_Fmax is Ecopath base * MaxRelF.
 When FSelectionMode =  eMSYFSelectionModeType.Fleets then F in runSingleSpecies() is the relative F that is used by setFishingRates(F) to set F relative to the Ecopath base f.
 </remarks>
</member>
<member name="M:EwECore.MSY.cMSY.setFStepSizeToDepletion">
 <summary>
 Sets the F Step Size in auto-run mode.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSY.setBaseLineValues">
 <summary>
 Get the Base line values by running Ecosim with the base F for the selected group
 </summary>
</member>
<member name="M:EwECore.MSY.cMSY.setFishingRates(System.Single)">
 <summary>
 Set Fishing Mortality for the current group
 </summary>
 <param name="FishingMort"></param>
</member>
<member name="M:EwECore.MSY.cMSY.EcosimRK4(System.Int32)">
 <summary>
 Runs the Ecosim rk4 for length of time set in Me.m_msyData.nYearsPerTrial
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="T:EwECore.MSY.cMSY.cFoptTracker">
 <summary>
 Helper class that tracks whether a local optimum has been reached over
 a given set of samples.
 </summary>
</member>
<member name="M:EwECore.MSY.cMSY.ChangeRunState(EwEUtils.Core.eMSYRunStates)">
 <summary>
 Inform the user interface that something is happening
 </summary>
 <param name="runState"></param>
</member>
<member name="F:EwECore.MSY.cMSYDataStructures.ForceGroupB">
 <summary>Groups that have their Biomass forced.</summary>
</member>
<member name="F:EwECore.MSY.cMSYDataStructures.MSYRunType">
 <summary>
 Type of MSY Run FMSY or SingleRunMSY
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cStanzaDatastructures.iPacket">
 <summary>
 i (map row) position index of the packet
 </summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.jPacket">
 <summary>
 i (map col) position index of the packet
 </summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.iNursery">
 <summary>
 Row Index in map of cells used for a nursery. Cells that are populated by the first life stage of a multi-stanza group.
 </summary>
 <remarks>Populated in <see cref="M:EwECore.cEcoSpace.InitPackets"> InitPackets</see></remarks>
</member>
<member name="F:EwECore.cStanzaDatastructures.jNursery">
 <summary>
 Col Index in map of cells used for a nursery. Cells that are populated by the first life stage of a multi-stanza group.
 </summary>
 <remarks>Populated in <see cref="M:EwECore.cEcoSpace.InitPackets"> InitPackets</see></remarks>
</member>
<member name="F:EwECore.cStanzaDatastructures.Nnursery">
 <summary>
 Total number of Nersery cell in the map by Multi-stanza groups
 </summary>
 <remarks>Populated in <see cref="M:EwECore.cEcoSpace.InitPackets"> InitPackets</see></remarks>
</member>
<member name="F:EwECore.cStanzaDatastructures.MaxStanza">
 <summary>Max number of stanazs across all the stanza groups.</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.Nsplit">
 <summary>The number of stanza groups (split groups).</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.nGroups">
 <summary>For redimensioning SpeciesCode.</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.Nstanza">
 <summary>Number of stanzas in each split group (one-based).</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.EcopathCode">
 <summary>Group index (iGroup) for this (Nsplit, nStanza).</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.NageS">
 <summary>Numbers at age (dynamic) for split species (set in initialstate using ecopath base array SplitNo(isp,age)).</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.WageS">
 <summary>Weights at age (dynamic)(set in initialstate) (set in initialstate using ecopath base array SplitWage(isp,age).</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.RzeroS">
 <summary>Base recruitment to age 0 for split species.</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.RecStanza">
 <summary>Stanza that drives this stanza's recuitment.</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.RecStanzaScalar">
 <summary>Stanza relative recruitment scalar.</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.SplitAlpha">
 <summary>growth coefficients by split spp and age (set in initialstate)</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.Age1">
 <summary>Life stage start age</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.Age2">
 <summary>Life stage end age</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.SplitNo">
 <summary>
 Number at age. This is the baseline state set from initial parameters in CalculateStanzaParameters().
 This is static, it does not change during the run. Changes are tracked in NageS
 </summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.SplitWage">
 <summary>
 Weight at age. This is the baseline state set from initial parameters in CalculateStanzaParameters()
 This is static, it does not change during the run. Changes are tracked in WageS
 </summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.SpawnProp">
 <summary>
 Flag, stating which propotion of a life stage is allowed to spawn.</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.FixedFecundity">
 <summary>Boolean flag set in an interface.</summary>
 <remarks>Used by SplitUpdate(b)</remarks>
</member>
<member name="F:EwECore.cStanzaDatastructures.EggProdIsSeasonal">
 <summary>Egg production shape is seasonal.</summary>
</member>
<member name="F:EwECore.cStanzaDatastructures.SpeciesCode">
 <summary></summary>
 <remarks>
 <list type="bullet">
 <item>0: Ecopath group no for this stanza.</item>
 <item>1: Ecopath no for leading B stanza.</item>
 <item>2: Ecopath no for leading QB stanza.</item>
 </list>
 </remarks>
</member>
<member name="M:EwECore.cStanzaDatastructures.redimStanza">
 <summary>
 Redimension the stanza arrays
 </summary>
</member>
<member name="T:EwECore.cStanzaGroup">
 <summary>
 Multi-stanza group
 </summary>
 <remarks>This class acts as a buffer for the data. The core data is updated expilcitly by a user not implicitly by the core.
  The user of this class is responsible for calculating the stanza parameters and saving any changes.
 </remarks>
</member>
<member name="M:EwECore.cStanzaGroup.#ctor(EwECore.cCore@,System.Int32,System.Int32,System.Int32)">
 <summary>
 
 </summary>
 <param name="core"></param>
 <param name="DBID"></param>
 <param name="nStanzas"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cStanzaGroup.CalculateParameters">
 <summary>
 Calculate the Stanza parameters for this stanza group
 </summary>
 <returns></returns>
 <remarks>This does not save changes to the core data it only calculates the stanza parameters for this object. 
 Saving is handled by Apply().</remarks>
</member>
<member name="M:EwECore.cStanzaGroup.Apply">
 <summary>
 Apply Stanza Calculation
 </summary>
 <remarks>If edits have been made then this will implicitly run the stanza calculations.</remarks>
</member>
<member name="M:EwECore.cStanzaGroup.Cancel">
 <summary>
 Cancel edits made by a user by reloading the underlying Core data and re-calculating the stanza parameters.
 </summary>
</member>
<member name="P:EwECore.cStanzaGroup.OkToCalculate(EwECore.cMessage)">
 <summary>
 Is it ok to run stanza calculation, cEcosim.CalculateStanzaParameters(), on this object.  Have the leading stanza parameters been set.
 </summary>
 <param name="msg">Message to decorate with missing variable statuses, if provided</param>
 <returns>True if it is Ok to calculate the stanza parameters on the Stanza Group</returns>
 <remarks>When a new stanza group is first created its leading parameters (oldest group) and z will be NULL_VALUE (-9999). 
 The leading B and CB and Mortality need to be set by the user before calculateParameter can be called. </remarks>
</member>
<member name="M:EwECore.cStanzaGroup.SetVariable(EwEUtils.Core.eVarNameFlags,System.Object,System.Int32,System.Int32)">
 <summary>
 Overloaded to set the isDirty flag
 </summary>
 <param name="VarName"></param>
 <param name="newValue"></param>
 <param name="iSecondaryIndex"></param>
 <returns></returns>
</member>
<member name="P:EwECore.cStanzaGroup.LeadingB">
 -----------------------------------------------------------------------
 <summary>
 Get/set the zero-based index of the life stage that determines B for this stanza.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.LeadingCB">
 -----------------------------------------------------------------------
 <summary>
 Get/set the zero-based index of the life stage that determines CB for this stanza.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.RecruitmentPower">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwEUtils.Core.eVarNameFlags.RecPowerSplit">recruitment power</see>
 for this stanza configuration.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.RecruitmentStanza">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwEUtils.Core.eVarNameFlags.RecruitmentStanza"/>
 for this stanza configuration.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.BiomassAccumulationRate">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwEUtils.Core.eVarNameFlags.BABsplit">relative biomass accumulation rate</see>
 for this stanza configuration.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.WmatWinf">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwEUtils.Core.eVarNameFlags.WmatWinf">weight at maturity over weight at infancy ratio</see>
 for this stanza configuration.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.HatchCode">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwEUtils.Core.eVarNameFlags.HatchCode">hatchery stocking forcing function number</see>
 for this stanza configuration.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.IsFished">
 -----------------------------------------------------------------------
 <summary>
 Get whether a group is being fished. This value is kept up to date by 
 the core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.Age0Numbers">
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.nLifeStages">
 <summary>
 Get the number of life stages in this Multi Stanza grouping. 
 </summary>
</member>
<member name="P:EwECore.cStanzaGroup.iGroups(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="P:EwECore.cCoreInputOutputBase.Index">index</see> of a life stage 
 in this multi-stanza grouping. Groups are stored in a one-based array.
 </summary>
 <param name="iLifeStage">The one-based index of a group within this Stanza group
 to obtain the group index for.</param>
 <returns>Index of a group that belongs to this multi-stanza grouping.</returns>
 <remarks>
 <para>The returned index identifies the Indexes of group that belong
 to this multi-stanza grouping.</para>
 <code>
 Dim stanzaGrp As cStanzaGroup = Nothing
 Dim input As cEcoPathGroupInputs = Nothing
 
 ' Get the first stanza group. StanzaGroups are zero based
 stanzaGrp = core.StanzaGroups(0)
 
 ' Iterate over the groups in this stanza grouping using NStanzas and iGroup(i)
 For iLifeStage As Integer = 1 To stanzaGrp.NStanzas
    input = core.EcoPathGroupInputs(stanzaGrp.iGroup(iLifeStage))
 Next iLifeStage
 </code>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.iLifeStage(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get the life stage index of a <see cref="P:EwECore.cCoreInputOutputBase.Index">group index</see>
 within this stanza configuration.
 </summary>
 <param name="iGroup">The group index to find the one-based life stage index for.</param>
 <returns>A one-based index of a life stage, or <see cref="F:EwECore.cCore.NULL_VALUE"/> 
 if the group was not found.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cStanzaGroup.NStanzas">
 <summary>
 Get/set the number of groups in this Multi Stanza grouping. 
 </summary>
</member>
<member name="T:EwECore.cPSDParameters">
 <summary>
 This class wraps the underlying particle size distribution data structures
 </summary>
</member>
<member name="P:EwECore.cPSDParameters.PSDEnabled">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether the PSD model is enabled in EwE.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPSDParameters.PSDComputed">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether the PSD results have been computed.
 </summary>
 <remarks>
 This *should* have been reported by the core state monitor.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPSDParameters.GroupIncluded(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether a given group is included in the PSD analysis.
 </summary>
 <param name="iGroup">Index of the group.</param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cPSDDatastructures">
 <summary>
 This class wraps the underlying particle size distribution data structures
 </summary>
</member>
<member name="F:EwECore.cPSDDatastructures.Enabled">
 <summary>States whether PSD model is enabled.</summary>
</member>
<member name="F:EwECore.cPSDDatastructures.Include">
 <summary>Flag (x group) stating whether groups are included in PSD analysis.</summary>
</member>
<member name="M:EwECore.cPSDDatastructures.redimGroupVariables">
 <summary>
 redimension array variables 
 called when a new model is loaded
 </summary>
 <returns>True if no error</returns>
</member>
<member name="M:EwECore.cPSDDatastructures.CopyInputToModelArrays">
 <summary>
 Copy the Input arrays into the arrays that are used for modeling and model output.
 </summary>
 <returns>True if all the values were copied successfully.</returns>
 <remarks>This is call at the start of an Ecopath model run to copy the input data into the arrays that are used
 for model computations and output. I.e. copies EEinput(NumGroups) into EE(NumGroups). In EwE5 this is called MakeUnknownUnknown </remarks>
</member>
<member name="P:EwECore.cPSDModel.Messages">
 -----------------------------------------------------------------------
 <summary>
 Exposes the MessagePublisher instance so that the core can add message handlers
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cPedigreeLevel">
 ---------------------------------------------------------------------------
 <summary>
 Inputs for a single pedigree level within a pedigree category.
 </summary>
 <remarks>
 <para>Pedigree categories are identified by <see cref="M:EwECore.cCore.PedigreeVariable(System.Int32)">PedigreeVariable</see>, 
 which will return <see cref="P:EwECore.cCore.nPedigreeVariables">cCore.nPedigreeVariables</see> variables.</para>
 <para>Pedigree levels are stored and accessible via a <see cref="T:EwECore.cPedigreeManager">pedigree manager</see>.</para>
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeLevel.VariableName">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eVarNameFlags">variable</see> that a pedigree
 level pertains to.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeLevel.IndexValue">
 -----------------------------------------------------------------------
 <summary>
 Get/set the index value of a pedigree level expressed as a ratio [0, 1].
 </summary>
 <remarks>
 This value is not to be confused with <see cref="P:EwECore.cCoreInputOutputBase.Index">Index</see>,
 which reflects the position of an <see cref="T:EwECore.ICoreInputOutput">core object</see>
 within the underlying core arrays.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeLevel.ConfidenceInterval">
 -----------------------------------------------------------------------
 <summary>
 Get/set the confidence interval of a pedigree level expressed as a
 rounded percentage [0, 100].
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeLevel.Description">
 -----------------------------------------------------------------------
 <summary>
 Get/set a textual description of a pedigree level.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeLevel.PoolColor">
 -----------------------------------------------------------------------
 <summary>
 Get/set the color to represent a pedigree level.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeLevel.Sequence">
 -----------------------------------------------------------------------
 <summary>
 Get/set the index of this level in its manager.
 </summary>
 <remarks>
 This variable will never make it into the core; it's a mere administrative
 value. Note that this value is one-based.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeLevel.IsEstimated">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether the values for this level are estimated by EwE.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cPedigreeManager">
 ---------------------------------------------------------------------------
 <summary>
 Class that contains and distributes <see cref="T:EwECore.cPedigreeLevel">pedigree levels</see>,
 and maintains group <see cref="P:EwECore.cPedigreeManager.Pedigree(System.Int32)">pedigree assignments</see>.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cPedigreeManager.m_varName">
 <summary>The variable that this manager is responsible for.</summary>
</member>
<member name="F:EwECore.cPedigreeManager.m_levels">
 <summary>The pedigree levels that belong to the variable of this manager.</summary>
</member>
<member name="F:EwECore.cPedigreeManager.m_dictID">
 <summary>Mapping of Core level index to local level ID.</summary>
</member>
<member name="P:EwECore.cPedigreeManager.Pedigree(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the pedigree index for a given variable. 
 </summary>
 <param name="iGroup">One-based index of the group.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeManager.PedigreeStatus(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the pedigree index status for a given variable. 
 </summary>
 <param name="iVariable">One-based index of the variable for which to access the status.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeManager.NumLevels">
 -----------------------------------------------------------------------
 <summary>
 Get the number of pedigree levels in the manager.
 </summary>
 <remarks>
 Level indexing is one-base. It's just so that you know it. Really. ONE
 based; let there be no confusion. At least as little confusion as
 possibly possible. Right. There you go. I hope.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cPedigreeManager.Level(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get a pedigree level from the manager.
 </summary>
 <param name="iLevel">The one-based index of the level to obtain.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cPedigreeManager.UpdatePedigreeLevels">
 -----------------------------------------------------------------------
 <summary>
 Commit pedigree levels to the EwE core.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cPedigreeManager.UpdatePedigree">
 -----------------------------------------------------------------------
 <summary>
 Commit pedigree assignments to the EwE core.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cPedigreeManager.Init">
 -----------------------------------------------------------------------
 <summary>
 Create pedigree levels and load all data.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cPedigreeManager.LoadPedigreeLevels">
 -----------------------------------------------------------------------
 <summary>
 Load pedigree levels.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cPedigreeManager.LoadPedigree">
 -----------------------------------------------------------------------
 <summary>
 Load or update pedigree assignment values.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cPedigreeManager.Set_Pedigree_Flags(EwECore.cEcoPathGroupInput)">
 -----------------------------------------------------------------------
 <summary>
 Set the status flags of pedigree.
 </summary>
 <param name="group">The group to update.</param>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cFeedbackMessage">
 ---------------------------------------------------------------------------
 <summary>
 A feedback message is the only vehicle for the EwE Core to prompt a user
 interface for feedback.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cFeedbackMessage.#ctor">
 -----------------------------------------------------------------------
 <summary>
 Default constructor.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cFeedbackMessage.#ctor(System.String,EwEUtils.Core.eCoreComponentType,EwEUtils.Core.eMessageType,EwEUtils.Core.eMessageImportance,EwEUtils.Core.eMessageReplyStyle,EwEUtils.Core.eDataTypes,EwEUtils.Core.eMessageReply)">
 -----------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 <param name="msgStr">Message text.</param>
 <param name="msgSource"><see cref="T:EwEUtils.Core.eCoreComponentType">Source</see> of the message.</param>
 <param name="msgImportance"><see cref="T:EwEUtils.Core.eMessageImportance">Importance</see> of the message.</param>
 <param name="replyStyle"><see cref="T:EwEUtils.Core.eMessageReplyStyle">Reply style</see> of the message.</param>
 <param name="msgDataType"><see cref="T:EwEUtils.Core.eDataTypes">Data type</see> associated with the message, if any.</param>
 <param name="msgType"></param>
 <param name="defaultReply"></param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cFeedbackMessage.Reply">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IFeedbackMessage.Reply"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cFeedbackMessage.ReplyStyle">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IFeedbackMessage.ReplyStyle"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cFeedbackMessage.HyperlinkOption">
 -----------------------------------------------------------------------
 <summary>
 Get/set the text to display for licensing options.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cFeedbackMessage.CustomReplyLabel(EwEUtils.Core.eMessageReply)">
 -----------------------------------------------------------------------
 <summary>
 Get or set a custom reply label to use when this message is shown in a user interface.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cMessage">
 <summary>
 This class encapsulates a message that is passed from the Core to an Interface via the cMessagePublisher-cMessageHandler system
 </summary>
 <remarks>
 A message object is created by the Core and passed to cMessagePublisher.SendMessage(cMessage) 
 where it is handled by which ever cMessageHandler object can handle this type of message.
 A message object can contain a list of variables that relate to the message 
 i.e. If cMessage.Type = eMessageType.EE  then cMessage.Variables will contain a list of cVariableStatus objects that represent variables that have an EE > 1.
 </remarks>
</member>
<member name="F:EwECore.cMessage.m_variables">
 <summary>List of <see cref="T:EwECore.cVariableStatus">variables</see> attached
 to the message. These variables are presumed affected by the event described 
 in the message, and will be used to update core contents. User interfaces are
 encouraged to use these variables to provide detailed event feedback.</summary>
</member>
<member name="M:EwECore.cMessage.#ctor">
 -----------------------------------------------------------------------
 <summary>
 Create a default <see cref="F:EwEUtils.Core.eMessageImportance.Maintenance">maintenance</see> message.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMessage.#ctor(System.String,EwEUtils.Core.eMessageType,EwEUtils.Core.eCoreComponentType,EwEUtils.Core.eMessageImportance,EwEUtils.Core.eDataTypes,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Create a message.
 </summary>
 <param name="strMessage">The message <see cref="P:EwECore.cMessage.Message">text</see>.</param>
 <param name="msgType">The <see cref="P:EwECore.cMessage.Type"/> of the message.</param>
 <param name="msgSource">The <see cref="P:EwECore.cMessage.Source"/> of the message.</param>
 <param name="msgImportance">The <see cref="P:EwECore.cMessage.Importance"/> of the message.</param>
 <param name="msgDataType">The <see cref="P:EwECore.cMessage.DataType"/> of the message.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cMessage.AddVariable(EwECore.cVariableStatus,System.Boolean)">
 <summary>
 Add a cVariableStatus object to the list of variables that this message applies to.
 </summary>
 <param name="Variable"></param>
 <returns></returns>
 <remarks>This is used when the message object is being created to add variables to the message</remarks>
</member>
<member name="M:EwECore.cMessage.HasVariable(EwECore.cVariableStatus)">
 <summary>
 Returns whether a message has a given variable attached.
 </summary>
 <param name="Variable"></param>
 <returns></returns>
</member>
<member name="M:EwECore.cMessage.HasVariable(EwEUtils.Core.eVarNameFlags)">
 <summary>
 Returns whether a message has a given variable attached.
 </summary>
 <param name="varname"></param>
 <returns></returns>
</member>
<member name="P:EwECore.cMessage.Variables">
 <summary>Get the <see cref="T:EwECore.cVariableStatus">variables</see> associated with 
 this message.</summary>
 <remarks>
 Not every type of message contains variable information. Check the Variables.Count 
 property to find out if there are variables in this message
 </remarks>
</member>
<member name="P:EwECore.cMessage.Message">
 <inheritdocs cref="P:EwEUtils.Core.IMessage.Message"/>
</member>
<member name="P:EwECore.cMessage.Type">
 <inheritdocs cref="P:EwEUtils.Core.IMessage.Type"/>
</member>
<member name="P:EwECore.cMessage.Source">
 <inheritdocs cref="P:EwEUtils.Core.IMessage.Source"/>
</member>
<member name="P:EwECore.cMessage.Importance">
 <inheritdocs cref="P:EwEUtils.Core.IMessage.Importance"/>
</member>
<member name="P:EwECore.cMessage.DataType">
 <inheritdocs cref="P:EwEUtils.Core.IMessage.DataType"/>
</member>
<member name="P:EwECore.cMessage.Suppressable">
 <inheritdocs cref="P:EwEUtils.Core.IMessage.Suppressable"/>
</member>
<member name="P:EwECore.cMessage.Suppressed">
 <inheritdocs cref="P:EwEUtils.Core.IMessage.Suppressable"/>
</member>
<member name="P:EwECore.cMessage.Hyperlink">
 <summary>
 Get/set the hyperlink for this message.
 </summary>
</member>
<member name="M:EwECore.cMessage.Equals(System.Object)">
 <summary>
 Helper method, compares this message to another object.
 </summary>
 <param name="obj">The object to compare to</param>
 <returns>True if equals</returns>
 <remarks>
 Two messages are considered equal if main fields <see cref="P:EwECore.cMessage.DataType">DataType</see>,
 <see cref="P:EwECore.cMessage.Importance">Importance</see>, <see cref="P:EwECore.cMessage.Source">Source</see>,
 <see cref="P:EwECore.cMessage.Type">Type</see> and <see cref="P:EwECore.cMessage.Message">Message</see> have
 equal values, AND neither message contain attached <see cref="P:EwECore.cMessage.Variables">Variables</see>.
 </remarks>
</member>
<member name="T:EwECore.cMessageHandler">
 <summary>
 <para>This class is the message handler portion of the Message-Publisher/Message-Handler pattern use to pass messages from the core(publisher) to an interface(handler).</para>
 <para>This pattern is based on the Subject/Observer or Publisher/Subscriber patterns.
 Basically the cMessageHandler provides a wrapper for a delegate in the interface that handles the message. 
 This allows the interface to implement the actual message handling without having to expose its internal structure.</para>
 <para>It also allows an interface to split the message handling into a series of smaller routines that only know how to handle one type of message.</para>
 </summary>
 <remarks>
 <para>How to use cMessageHandler:</para>
 <para>Define a method in your interface that will do the actual message handling with the same signature as EwECore.cCore.CoreMessageDelegate(cMessage).</para>
 <para>Create a cMessageHandler object and in its constructor pass in 3 arguments</para>
 <para>1.) The AddressOf the delegate that will handle the message</para>
 <para>2.) Source of the message (eCoreComponentType)</para>
 <para>3.) The message to handle (eMessageType)</para>
 <para>This tells the handler what type of message to handle and where to send the message.</para>
 <para>Next</para>
 <para>Add the cMessageHandler object to the cCore.Messages.AddMessageHandler(cMessageHandler) interface. This will register the message handler with the core and any messages of this type will be sent to the delegate defined in the interface.</para>
 <para>For a default message handler set the eMessageType flag to 'eMessageType.Any'. This handler will be sent any messages that do not have a specific handler.</para>
  </remarks>
 <history>
 <revision>jb 15/mar/06 Removed SendMessageUseDefaults()</revision>
</history>
</member>
<member name="F:EwECore.cMessageHandler.m_DelegateNotifier">
 <summary>Delegate to use for handling the message.</summary>
</member>
<member name="F:EwECore.cMessageHandler.m_syncobj">
 <summary>Sync object to use for handling the message.</summary>
</member>
<member name="F:EwECore.cMessageHandler.m_corecomponent">
 <summary>Core component filter. Cannot be <see cref="F:EwEUtils.Core.eCoreComponentType.NotSet">NotSet</see>.</summary>
</member>
<member name="F:EwECore.cMessageHandler.m_msgtype">
 <summary>Message type filter. Can be anything.</summary>
</member>
<member name="M:EwECore.cMessageHandler.#ctor(EwECore.cCore.CoreMessageDelegate,EwEUtils.Core.eCoreComponentType,EwEUtils.Core.eMessageType,System.Threading.SynchronizationContext)">
 <summary>
 Constructs a new cMessageHandler object that will send messages of a given type to the DelegateToCall argument.
 </summary>
 <param name="DelegateToCall">Delegate that will handle the message</param>
 <param name="SourceToHandle">Source of the message i.e EcoPath. This parameter cannot be <see cref="F:EwEUtils.Core.eCoreComponentType.NotSet">NotSet</see>.</param>
 <param name="MessageTypeToHandle">Type of message to handle i.e. DietComp this message will only handle the DietComp not summing to one message</param>
 <remarks>
 <para>For a default handler set the MessageTypeToHandle flag to eMessageType.Any this will send any unhandled message to this delegate.</para>
 <para>To have s single delegate handle multiple messages create a new cMessageHandler with this same 'DelegateToCall' argument and a different MessageTypeToHandle flag.</para>
 </remarks>
</member>
<member name="M:EwECore.cMessageHandler.Dispose">
 <inheritdocs cref="M:System.IDisposable.Dispose"/>
</member>
<member name="P:EwECore.cMessageHandler.Name">
 <summary>
 Get/set the name of a message handler for ease of debugging.
 </summary>
 <remarks>
 Property available in DEBUG mode only.
 </remarks>
</member>
<member name="M:EwECore.cMessageHandler.SendMessage(EwECore.cMessage@)">
 <summary>
 Called by the cMessagePublisher to send a message to a message specific handler. 
 If this cMessageHandler can handle this type of message the message will be sent to the Delegate passed in when this object was constructed.
 </summary>
 <param name="message">Message to send. This handler will used the Type and Source flags of the message to see if it can handle this type of message</param>
 <returns>
 <para>True if this message handler can handle this type of message.</para>
 <para>False if the message was not handled or a problem was encountered.</para>
 </returns>
 <remarks>
 For the message to be handled it must have the same Type and Source as this handler.
 </remarks>
</member>
<member name="M:EwECore.cMessageHandler.Equals(System.Object)">
 <summary>
 Test for equality of Delegates.
 </summary>
 <param name="Handler">cMessageHandler object to test</param>
 <returns>True if this Message Handlers delagate is equal to the one bing passed in. False otherwise</returns>
 <remarks>This tests the underlying delegates for equality NOT the cMessageHandlers them selves.</remarks>
</member>
<member name="M:EwECore.cMessageHandler.getDelegate">
 <summary>
 Return the underlying Delagate.
 </summary>
 <returns>CoreMessageDelegate delagate object.</returns>
 <remarks>This is used by  Equals() to test for equality of two cMessageHandler objects.</remarks>
</member>
<member name="T:EwECore.cMessagePublisher">
 <summary>
 This class provides a single interface for dealing with different types of messages.
 It uses a Publisher/Subscriber or Observer pattern
 </summary>
 <remarks>
 How to use:
 For a given message create a new cMessageHandler object and add it to the message handlers via the cMessagePublisher.AddMessageHandler(...) method
 Then when you want to send a message create a new cMessage object with the information you want sent and call the cMessagePublisher.SendMessage(cMessage) method 
 This will send the message to any message handler that has been set-up to listen for this type of message. 
 If no handler was defined for this type of message then the default handler will be used. 
 If no default handler has been created then cMessagePublisher.SendMessage will return False.
 </remarks>
</member>
<member name="M:EwECore.cMessagePublisher.AddMessageHandler(EwECore.cMessageHandler)">
 <summary>
 Add a Message Handler to list of message handlers
 </summary>
 <param name="MessageHandler">The Message handler to add</param>
 <returns>True is successfull. False otherwise</returns>
 <remarks>
 At this time there is no checking to see if there already is a message handler for this message
 So if you define two message handler for the same message they will both get called
 </remarks>
</member>
<member name="M:EwECore.cMessagePublisher.AddMessage(EwECore.cMessage)">
 <summary>
 Add a <see cref="T:EwECore.cMessage">message</see> to the message publisher.
 </summary>
 <param name="msg"><see cref="T:EwECore.cMessage">Message</see> to be sent.</param>
 <returns>True is the message was added to the Queue or sent to the handler</returns>
 <outdated_remarks>
 If bHoldMessages = True then the message will be added to the queue and on the next call to SendAllMessages()
 IF bHoldMessages = False then the message will be sent immediately and will not be added to the queue
 </outdated_remarks>
 <remarks>
 <see cref="M:EwECore.cMessage.Equals(System.Object)">Duplicate messages</see> are not added.
 </remarks>
</member>
<member name="M:EwECore.cMessagePublisher.sendAllMessages">
 <summary>
 Send all the messages in the queue.
 </summary>
 <returns>True if no problems were encountered. False if an error was thrown.</returns>
</member>
<member name="M:EwECore.cMessagePublisher.SendMessage(EwECore.cMessage,System.Boolean)">
 <summary>
 Send the message to the all handlers that can handle this type of message or to the default handler for this eCoreComponentType.
 </summary>
 <param name="Message">The <see cref="T:EwECore.cMessage">message</see> to send right away.</param>
 <param name="bPassLock">Flag stating that the message should pass through an active 
 <see cref="M:EwECore.cMessagePublisher.SetMessageLock">message lock</see>. This is not allowed by default.</param>
 <returns>True if the message was sent. False if the message was not sent.</returns>
 <remarks>
 <para>This will first try to send the message to the handler specific to this message type. 
 If that fails, it will try to find the default message handler for this MessageSource.
 If that also fails, this method will return False.</para>
 <para>No messages are sent if a <see cref="M:EwECore.cMessagePublisher.SetMessageLock">message lock</see> is in place.
 Locked messages will be sent the moment this lock is <see cref="M:EwECore.cMessagePublisher.RemoveMessageLock">cleared</see>.</para>
 <para>Note that <see cref="T:EwECore.cFeedbackMessage">Feedback messages</see> are allowed to pass the lock at any time.</para>
 </remarks>
</member>
<member name="M:EwECore.cMessagePublisher.RemoveMessageHandler(EwECore.cMessageHandler)">
 <summary>
 Remove ALL instances of a Message Handler
 </summary>
 <param name="MessageHandler">cMessageHandler object to remove</param>
 <returns>True if successful. False otherwise</returns>
 <remarks>This tests the Delegate contained in MessageHandlerToRemove not the cMessageHandler itself. 
 So it will remove All of the message handlers that use this delegate.
 This calls cMessageHandler.Equals().
 </remarks>
</member>
<member name="P:EwECore.cMessagePublisher.PluginManager">
 <summary>
 Get/set the <see cref="T:EwEPlugin.cPluginManager"/> to use.
 </summary>
</member>
<member name="M:EwECore.cMessagePublisher.SetMessageLock">
 <summary>
 Increase the Messages lock count. While this lock count is active, no messages will
 be sent.
 </summary>
</member>
<member name="M:EwECore.cMessagePublisher.RemoveMessageLock">
 <summary>
 Decrease the Messages lock count. While this lock count is active, no messages will
 be sent. When the lock reaches zero, any obstructed SendMessage call will be completed.
 </summary>
</member>
<member name="M:EwECore.cMessagePublisher.MergeDuplicateMessageVariables(EwECore.cMessage)">
 <summary>
 Test whether the message queue already contains a duplicate of a test message.
 </summary>
 <param name="msg">The message to test for.</param>
 <returns>
 True if the queue contains a duplicate of the test message, False otherwise.
 </returns>
</member>
<member name="M:EwECore.cProgressMessage.#ctor(EwECore.eProgressState,System.Single,System.Single,System.String,EwEUtils.Core.eMessageType,EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <summary>
 Create a new progress message.
 </summary>
 <param name="state"><see cref="T:EwECore.eProgressState">State</see> of a process.</param>
 <param name="sMaxValue">Maximum progress scale.</param>
 <param name="sProgress">Current progress value [0, <paramref name="sMaxValue"/>], 
 which will be scaled to <paramref name="sMaxValue"/>.</param>
 <param name="strMessage">Message text.</param>
 <param name="msgType">Optional <see cref="T:EwEUtils.Core.eMessageType">type</see> of the message.</param>
 <param name="msgDataType">Optional <see cref="T:EwEUtils.Core.eDataTypes">data type</see> associated with the message.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cProgressMessage.Progress">
 -----------------------------------------------------------------------
 <summary>
 Get the progress [0, 1] of the operation that this message
 reports on.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cProgressMessage.ProgressState">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwECore.eProgressState">state</see> of the operation that this
 message reports on.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cVariableStatus">
 <summary>
 Status or Message that applies to a variable (VarType) for a Group (iGroup)
 This is used by the message passing system to pass the status of a variable without passing the variable itself
 </summary>
 <remarks>
 Used by Wrapper class for data validation messages see cEcoPathGroupInputs.CurrentStatus(). 
 Used by the Core messaging system to pass out state or error information of a variable. See cMessage class.
 </remarks>
 <history>
 <revision>jb 14/march/06: Added ICoreInputOutput reference. This references the parent Core data object that holds that variable. </revision>
 <revision>jb 15/march/06: Added iArrayIndex this is the array index for this variable. It will equal cCore.NULL_VALUE if it is not used. </revision>
 <revision>jb 17/march/06: Update iArrayIndex in Copy constructor. Added iArrayIndex to constructor </revision>
</history>
</member>
<member name="M:EwECore.cVariableStatus.#ctor(EwECore.cVariableStatus)">
 <summary>
 Copy constructor
 </summary>
 <param name="SourceStatusObject">cVariableStatus instance to copy</param>
</member>
<member name="M:EwECore.cVariableStatus.#ctor(EwEUtils.Core.eStatusFlags,System.String,EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eDataTypes,EwEUtils.Core.eCoreComponentType,System.Int32,System.Int32)">
 <summary>
 Create and Initialize a new instance
 </summary>
 <param name="StatusFlag">Status to set.</param>
 <param name="MessageStr">Message to accompany this variable status.</param>
 <param name="VarName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable</see> that this status applies to.</param>
 <param name="TypeOfData"><see cref="T:EwEUtils.Core.eDataTypes">Datatype</see> of the variable.</param>
 <param name="MessageSource"><see cref="T:EwEUtils.Core.eCoreComponentType">EwE component</see> that sent this variable belongs to.</param>
 <param name="iIndex">Index of the <paramref name="MessageSource">EwE component </paramref> that this variable belongs to.</param>
 <param name="iArrayIndex">Secundary index within <paramref name="VarName"/>, or <see cref="F:EwECore.cCore.NULL_VALUE">CORE NULL</see> if not applicable.</param>
</member>
<member name="M:EwECore.cVariableStatus.#ctor(EwECore.ICoreInterface,EwEUtils.Core.eStatusFlags,System.String,EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eDataTypes,EwEUtils.Core.eCoreComponentType,System.Int32,System.Int32)">
 <summary>
 Create and Initialize a new instance.
 </summary>
 <param name="ParentCoreDataObject"></param>
 <param name="StatusFlag">Status to set.</param>
 <param name="MessageStr">Message to accompany this variable status.</param>
 <param name="VarName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable</see> that this status applies to.</param>
 <param name="TypeOfData"><see cref="T:EwEUtils.Core.eDataTypes">Datatype</see> of the variable.</param>
 <param name="MessageSource"><see cref="T:EwEUtils.Core.eCoreComponentType">EwE component</see> that sent this variable belongs to.</param>
 <param name="iIndex">Index of the <paramref name="MessageSource">EwE component </paramref> that this variable belongs to.</param>
 <param name="iArrayIndex">Secundary index within <paramref name="VarName"/>, or <see cref="F:EwECore.cCore.NULL_VALUE">CORE NULL</see> if not applicable.</param>
</member>
<member name="M:EwECore.cVariableStatus.#ctor(EwECore.ICoreInterface,EwEUtils.Core.eStatusFlags,System.String,EwEUtils.Core.eVarNameFlags,System.Int32)">
 <summary>
 Create and Initialize a new instance.
 </summary>
 <param name="ParentCoreDataObject"></param>
 <param name="StatusFlag">Status to set.</param>
 <param name="MessageStr">Message to accompany this variable status.</param>
 <param name="VarName"><see cref="T:EwEUtils.Core.eVarNameFlags">Variable</see> that this status applies to.</param>
 <param name="iArrayIndex">Secundary index within <paramref name="VarName"/>, or <see cref="F:EwECore.cCore.NULL_VALUE">CORE NULL</see> if not applicable.</param>
</member>
<member name="M:EwECore.cVariableStatus.Copy(EwECore.ValueWrapper.cValue)">
 <summary>
 Copy the public contents of a cValue object into this object
 </summary>
 <param name="ValueObject">cValue object to copy</param>
 <remarks></remarks>
</member>
<member name="P:EwECore.cVariableStatus.VarName">
 <summary>Name of the Variable this Status or Message applies to </summary>
</member>
<member name="P:EwECore.cVariableStatus.DataType">
 <summary>
 The Data structure/class this variable belongs to 
 </summary>
 <remarks>I.e Inputs for EcoPath are eDataTypes.EcoPathInputs</remarks>
</member>
<member name="P:EwECore.cVariableStatus.Status">
 <summary>Status of this variable </summary>
</member>
<member name="P:EwECore.cVariableStatus.Importance">
 <summary>
 Infer a <see cref="T:EwEUtils.Core.eMessageImportance"/> value from the message <see cref="P:EwECore.cVariableStatus.Status"/>.
 </summary>
</member>
<member name="P:EwECore.cVariableStatus.Message">
 <summary>Descriptive message</summary>
</member>
<member name="P:EwECore.cVariableStatus.Source">
 <summary>Source of the message. I.e. EcoPath, EcoSim...</summary>
</member>
<member name="P:EwECore.cVariableStatus.Index">
 <summary>Index of the item in its containing list (was iGroup)</summary>
</member>
<member name="P:EwECore.cVariableStatus.iArrayIndex">
 <summary>
 Index to the array element for this variable i.e. DietComp(iArrayIndex)
 </summary>
</member>
<member name="P:EwECore.cVariableStatus.CoreDataObject">
 <summary>
 Reference to the <see cref="T:EwECore.ICoreInterface">ICoreInterface</see> data object that holds this variable
 </summary>
</member>
<member name="P:EwECore.cVariableStatus.CoreDataObjectSecundary">
 <summary>
 Reference to the secundary <see cref="T:EwECore.ICoreInterface">ICoreInterface</see> data object that represents
 the index on an indexed variable.
 </summary>
</member>
<member name="T:EwECore.Samples.cEcopathSample">
 -------------------------------------------------------------------
 <summary>
 Parameter sample snapshot of an Ecopath model, recorded from 
 Monte Carlo model perturbations.
 </summary>
 <seealso cref="T:EwECore.Samples.cEcopathSampleManager"/>.
 <seealso cref="T:EwECore.Samples.cEcopathSampleDatastructures"/>.
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Samples.cEcopathSample.Hash">
 <summary>
 Get/set the MD5 hash of the Ecopath input set a sample was generated for. 
 The hash code is used to ascertain that a sample belongs to a specific Ecopath
 base parameter set.
 </summary>
</member>
<member name="P:EwECore.Samples.cEcopathSample.Source">
 <summary>
 Get/set the source computer that a sample was generated on.
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.NumInvalidEE">
 <summary>
 Returns the number of EE values that exceed 1
 </summary>
 <returns></returns>
</member>
<member name="P:EwECore.Samples.cEcopathSample.Generated">
 <summary>
 Get/set the date that a sample was generated.
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.B">
 <summary>
 Sampled biomass rate (x group)
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.PB">
 <summary>
 Sampled production rate (x group)
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.QB">
 <summary>
 Sampled consumption rate (x group)
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.BA">
 <summary>
 Sampled biomass accummulation (x group)
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.BaBi">
 <summary>
 Sampled biomass accummulation rate (x group)
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.EE">
 <summary>
 Sampled EE (x group)
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.DC">
 <summary>
 Sampled diets (pred x prey)
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.Landing">
 <summary>
 Sampled landings (fleet x group)
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSample.Discard">
 <summary>
 Sampled discards (fleet x group)
 </summary>
</member>
<member name="P:EwECore.Samples.cEcopathSample.Rating">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="F:EwECore.cEcopathDataStructures.Emig">emigration rate relative to biomass</see>
 ratio for this group.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.Samples.cEcopathSampleDatastructures">
 <summary>
 Data structures for sampled Ecopath models.
 <seealso cref="T:EwECore.Samples.cEcopathSampleManager"/>.
 <seealso cref="T:EwECore.Samples.cEcopathSample"/>.
 </summary>
</member>
<member name="P:EwECore.Samples.cEcopathSampleDatastructures.Sample(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Returns an available sample.
 <seealso cref="P:EwECore.Samples.cEcopathSampleDatastructures.nSamples"/>
 </summary>
 <param name="iSample">The one-based index of the sample to retrieve.
 This index cannot exceed <see cref="P:EwECore.Samples.cEcopathSampleDatastructures.nSamples">the total number of
 available samples</see></param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Samples.cEcopathSampleDatastructures.nSamples">
 -------------------------------------------------------------------
 <summary>
 Returns the number of available samples
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Samples.cEcopathSampleManager">
 -----------------------------------------------------------------------
 <summary>
 Manager of alternate Ecopath models sampled from Monte Carlo iterations.
 <seealso cref="T:EwECore.Samples.cEcopathSampleDatastructures"/>.
 <seealso cref="T:EwECore.Samples.cEcopathSample"/>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.Samples.cEcopathSampleManager.cEcopathHash">
 <summary>
 MD5 hash of selected Ecopath inputs rounded
 to three relevant digits. This rounding is performed 
 to allow for single / double imprecisions.
 </summary>
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.#ctor(EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Constructor.
 </summary>
 <param name="core">The core to initialize to.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.Dispose">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.IDisposable.Dispose"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Samples.cEcopathSampleManager.CoreComponent">
 -------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.ICoreInterface.CoreComponent"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Samples.cEcopathSampleManager.DataType">
 -------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.ICoreInterface.DataType"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Samples.cEcopathSampleManager.DBID">
 -------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.ICoreInterface.DBID"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.GetID">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.ICoreInterface.GetID"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Samples.cEcopathSampleManager.Index">
 -------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.ICoreInterface.Index"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Samples.cEcopathSampleManager.Name">
 -------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.ICoreInterface.Name"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.Init">
 -------------------------------------------------------------------
 <summary>
 Initialize the manager after a model has loaded.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.Clear">
 -------------------------------------------------------------------
 <summary>
 Clear the manager when a model has been closed.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.ModelHash">
 -------------------------------------------------------------------
 <summary>
 Returns the MD5 hash for the current loaded Ecopath model.
 </summary>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.Record(System.String,EwECore.cEcosimMonteCarlo)">
 -------------------------------------------------------------------
 <summary>
 Record an <see cref="T:EwECore.Samples.cEcopathSample"/> from the current values in Ecopath.
 <seealso cref="T:EwECore.Samples.cEcopathSample"/>
 </summary>
 <param name="strBaseHash">The hash code for the original model.</param>
 <param name="mc">Monte Carlo to obtain values from.</param>
 <returns>A valid sample, or Nothing if an error occurred.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.StoreEcosimDiagnostics(EwECore.Samples.cEcopathSample,EwECore.cEcosimMonteCarlo,EwECore.cEcosimDatastructures)">
 -------------------------------------------------------------------
 <summary>
 Extend an existing sample with Ecosim run diagnostics
 </summary>
 <param name="sample">The sample to update.</param>
 <param name="mc">Monte Carlo to obtain values from.</param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.Delete(EwECore.Samples.cEcopathSample[])">
 -------------------------------------------------------------------
 <summary>
 Delete a <see cref="T:EwECore.Samples.cEcopathSample"/>.
 </summary>
 <param name="samples">The <see cref="T:EwECore.Samples.cEcopathSample">samples</see> to delete.</param>
 <returns>True if the sample was deleted successfully.</returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Samples.cEcopathSampleManager.nSamples">
 -------------------------------------------------------------------
 <summary>
 Returns the number of available samples.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.Sample(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Returns a single sample.
 </summary>
 <param name="i">The one-based index [1, <see cref="P:EwECore.Samples.cEcopathSampleManager.nSamples"/>] of the sample to obtain.</param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.RandomSamples(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Returns a number of randomly sampled <see cref="T:EwECore.Samples.cEcopathSample">samples</see>.
 </summary>
 <param name="i">The number of samples to return.</param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.ImportFromModel(System.String)">
 -------------------------------------------------------------------
 <summary>
 Import samples from another model.
 </summary>
 <param name="strModel">The model file to import models from.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.CanSaveModel">
 -------------------------------------------------------------------
 <summary>
 Check if saving will erase stored samples. If so, the user is prompted.
 </summary>
 <returns>True if the save operation should continue.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.Load(EwECore.Samples.cEcopathSample,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Load a sample into Ecopath.
 </summary>
 <param name="s">The sample to load, or nothing to unload a sample.</param>
 <returns>True if sample loaded successfully.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.IsLoaded(EwECore.Samples.cEcopathSample)">
 -------------------------------------------------------------------
 <summary>
 Diagnostics method, returns whether a <see cref="T:EwECore.Samples.cEcopathSample"/>
 is currently loaded in EwE.
 </summary>
 <param name="s">The sample to test. If no sample is provided the 
 function cannot complete its test and will return a failure.</param>
 <returns>True if the provided sample is currently loaded.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.IsLoaded">
 -------------------------------------------------------------------
 <summary>
 Diagnostics method, returns whether any <see cref="T:EwECore.Samples.cEcopathSample"/>
 is currently loaded in EwE.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.Run(System.Int32,System.Int32,System.Boolean)">
 <summary>
 
 </summary>
 <param name="iNumSamples"></param>
 <param name="iStartAt">One-based sample index to start at</param>
 <param name="bRandomize"></param>
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.MakeSnapshot(System.Boolean,EwECore.cEcosimMonteCarlo)">
 -------------------------------------------------------------------
 <summary>
 Create a model snapshot from Ecopath.
 </summary>
 <param name="bMustBalance"></param>
 <param name="mc"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.LoadSnapshot(EwECore.Samples.cEcopathSample)">
 -------------------------------------------------------------------
 <summary>
 Load a snapshot into Ecopath.
 </summary>
 <param name="s"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Samples.cEcopathSampleManager.Import(EwECore.Samples.cEcopathSampleDatastructures)">
 -------------------------------------------------------------------
 <summary>
 Import samples from another data structure.
 </summary>
 <param name="data">The <see cref="T:EwECore.Samples.cEcopathSampleDatastructures"/> to import from.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.eSearchModes">
 <summary>
 Enumerated type, indicating the different search and optimization modes.
 </summary>
</member>
<member name="F:EwECore.eSearchModes.NotInSearch">
 <summary>Not in any kind of a search mode</summary>
</member>
<member name="F:EwECore.eSearchModes.InitializingSearch">
 <summary>A search of some type is initializing the data. 
 All data will be initialized but the code will not go into specific search routines.
 </summary>
</member>
<member name="F:EwECore.eSearchModes.FitToTimeSeries">
 <summary>Fit to time series search is active.</summary>
</member>
<member name="F:EwECore.eSearchModes.FishingPolicy">
 <summary>Fishing policy search is active.</summary>
</member>
<member name="F:EwECore.eSearchModes.MonteCarlo">
 <summary>Monte Carlo is active.</summary>
</member>
<member name="F:EwECore.eSearchModes.MSE">
 <summary>MSE search is active.</summary>
</member>
<member name="F:EwECore.eSearchModes.SpatialOpt">
 <summary>Spatial optimization is active.</summary>
</member>
<member name="F:EwECore.eSearchModes.MSY">
 <summary>MSY search is active.</summary>
</member>
<member name="F:EwECore.eSearchModes.FMSY">
 <summary>FMSY search is active.</summary>
</member>
<member name="F:EwECore.eSearchModes.External">
 <summary>An external search is active, for instance triggered by a plug-in.</summary>
</member>
<member name="T:EwECore.cSearchDatastructures">
 <summary>
 Data used by Search and Optimization routines
 </summary>
</member>
<member name="F:EwECore.cSearchDatastructures.m_SearchMode">
 <summary>Current search mode</summary>
</member>
<member name="F:EwECore.cSearchDatastructures.SearchMethod">
 <summary>Fishing policy search method</summary>
</member>
<member name="F:EwECore.cSearchDatastructures.InitOption">
 <summary>Fishing policy initialization method</summary>
</member>
<member name="F:EwECore.cSearchDatastructures.BGoalValue">
 <summary>Structure rel weight </summary>
</member>
<member name="F:EwECore.cSearchDatastructures.MGoalValue">
 <summary>Mandated rebuilding </summary>
</member>
<member name="F:EwECore.cSearchDatastructures.bBaseYearSet">
 <summary>
 Has the base year been set
 </summary>
 <remarks>During an optimization the base year is only set once</remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.ValCatch">
 <summary>Value of Catch</summary>
 <remarks>By (fleet, livingGroup)
 indicies.ValCatch(i, j) = indicies.ValCatch(i, j) + Cloc * DF
 </remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.NetCost">
 <summary>Net cost</summary>
 <remarks>NetCost(nfleets)</remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.ValCatchGear">
 <summary>Value of catch gear</summary>
 <remarks>
 Valcatch(fleet) = ( ValCatch(fleet, j) + m_EPData.PropLanded(fleet, j) * biomeq(j) _
                  * Fgear(fleet) * m_Data.relQ(fleet, j) * LTV) * m_EPData.Market(fleet, j)</remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.DF">
 <summary>Discount Factor</summary>
 <remarks>
 <code>If Dgen = Din Then
          indic.DF = Din ^ (iyr - 1) + (Dgen * (Din ^ (iyr - 2)) / 20) * (iyr - 1)
       Else
         indic.DF = (1 + Dalpha) * Din ^ (iyr - 1) - Dalpha * (Din * Dratio) ^ (iyr - 1)
       End If</code>
 </remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.CatchYear">
 <summary>Sum of Catch for year by fleet, group</summary>
 <remarks>index = (fleet, living)</remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.CatchYearGroup">
 <summary>Sum of Catch for year group</summary>
 <remarks>index = (living)</remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.FishYear">
 <summary>Total Fishing mortality by group</summary>
 <remarks>FishYear = effort * F * QYear</remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.m_SearchCatchSemaphor">
 <summary>
 Semaphor provides single thread access to calcEcospaceMonthlyCatch()
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.Drate">
 <summary>Conventional discount rate for intergeneration discount rate computations</summary>
 <remarks>Drate = 1/(1+DiscountFactor)</remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.Dfgrate">
 <summary>Intergenerational discount rate for computations</summary>
 <remarks>Dfgrate = 1/(1+GenDiscountFactor)</remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.deltaDDfg">
 <summary>Ratio of intergenerational to standard discount rate </summary>
  <remarks>deltaDDfg = Dfgrate/Drate</remarks>
</member>
<member name="F:EwECore.cSearchDatastructures.GenT">
 <summary>Number of years for one generation </summary>
<remarks>GenT = 20</remarks>
</member>
<member name="P:EwECore.cSearchDatastructures.bInSearch">
 <summary>
 Get whether a search is currently in progress.
 </summary>
</member>
<member name="P:EwECore.cSearchDatastructures.ExtraYearsForSearch">
 <summary>
 The Fishing Policy Search needs Ecosim to run for an additional 20 years
 </summary>
</member>
<member name="M:EwECore.cSearchDatastructures.setDefaultOptimizationValues">
 <summary>
 Set default values for the optimiation. These are values that are set the same for every run.
 </summary>
 <remarks>from frmOptF.Load_Form() </remarks>
</member>
<member name="M:EwECore.cSearchDatastructures.setMinSearchBlocks">
 <summary>
 Sets the search blocks to the minimum number needed to have the search turned on
 </summary>
 <remarks>Used when the search blocks need to be dimensioned but not used e.g. Ecoseed</remarks>
</member>
<member name="M:EwECore.cSearchDatastructures.setDefaultFBlockCodes">
 <summary>
 Set default FBlockCodes to a unique code for each fleet
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cSearchDatastructures.saveInitialFishingRate(EwECore.cEcosimDatastructures@)">
 <summary>
 Save the Fishing Rates (Frates(nBlocks)) before they have been changed by the Search Algo 
 so they can be set back to initial values at the start of each Search Run.
 </summary>
 <param name="EcosimData"></param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cSearchDatastructures.restoreSavedFishingRates">
 <summary>
 Restore the Fishing Rates (Frates()) to there initial values saved via saveInitialFishingRate
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cSearchDatastructures.calcNetCost(System.Single[]@,System.Int32)">
 <summary>
 Caculate NetCost from Fgear()
 </summary>
 <param name="Fgear">Fishing Effort</param>
 <param name="iYear"></param>
 <remarks>Calculates NetCost() </remarks>
</member>
<member name="M:EwECore.cSearchDatastructures.SetFGear(System.Single[]@,System.Single[],System.Int32)">
 <summary>
 Set Fishing Effort for a search 
 </summary>
 <param name="Fgear"></param>
 <param name="RelFopt"></param>
 <param name="iYear"></param>
</member>
<member name="M:EwECore.cSearchDatastructures.YearTimeStepEcoSpace(System.Single[],System.Single[]@,System.Int32,System.Int32,System.Single[])">
 <summary>
 Calculates DF (Discount factor), Fgear(), Qyear(),  and FishYear() for Ecospace
 </summary>
 <param name="iYear"></param>
 <param name="RelFopt"></param>
</member>
<member name="M:EwECore.cSearchDatastructures.calcYearlySummaryValues(System.Single[])">
 <summary>
 Calculate yearly summary data based on Biomass for this time step
 </summary>
 <param name="Biomass"></param>
 <remarks>calculates ecovalue, manvalue, Ecodistance and ExistValue used for the Objective function</remarks>
</member>
<member name="M:EwECore.cSearchDatastructures.CalcLTV(System.Int32)">
 <summary>
 Calculate long term value, based on either generational or standard discounting
 </summary>
 <param name="YearPastBaseYear"></param>
 <returns></returns>
</member>
<member name="M:EwECore.cSearchDatastructures.calcDiscountRate(System.Int32)">
 <summary>
 JB 3-Nov-201 GenDiscountFactor removed from interface until we get this sorted out
 
 Calculates discount factor based on either generational (if GenDiscountFactor>0) or standard discounting. 
 For some reason carl has made this a calculation of future value not of present. 
     ''' if Dgenfactor = 0 then uses Traditional discount factor calculating present value of future cost and revenue
 Enter here if GenDiscountFactor = 0 
 </summary>
 <param name="iYear"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.SearchObjectives.ISearchObjective">
 <summary>
 Interface for shared search variables
 </summary>
 <remarks>The Fishing Policy Search, Ecoseed and MSE all share some base variables. This interface provides a consistance interface for accessing these variables.</remarks>
</member>
<member name="T:EwECore.SearchObjectives.cSearchObjective">
 <summary>
 Implementation of ISearchObjective that is used by all classes that implement the ISearchObjective interface.
 </summary>
 <remarks>
 An single instance of this class is created by the core and made available via cCore.SearchObjective(). 
 All objects that implement the ISearchObjective interface do so by sharing the same instance of cCore.SearchObjective(). 
 This allows the data to be synced between different objects at all times.
 </remarks>
</member>
<member name="M:EwECore.SearchObjectives.cSearchObjective.Init(EwECore.cCore@)">
 <summary>
 Build interface objects
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.cShapeData">
 <summary>
 Class to handle the data that makes up the shape of a forcing or mediation shape
 </summary>
 <remarks>This is used for all the Forcing or Mediation shapes</remarks>
</member>
<member name="M:EwECore.cShapeData.Dispose">
 <summary>
 Destroys all data maintained by cShapeData. This will leave the
 </summary>
</member>
<member name="M:EwECore.cShapeData.Clear">
 <summary>
 Clear out the data for further use
 </summary>
</member>
<member name="M:EwECore.cShapeData.Init(System.Single[])">
 <summary>
 
 </summary>
 <param name="ArrayOfData"></param>
 <returns>True if the internal point array changed.</returns>
</member>
<member name="M:EwECore.cShapeData.Update">
 <summary>
 Update the underlying EcoSim data by calling update on the CForcingFunction object that owns this data
 </summary>
 <remarks>This object does not know it's data is stored in the underlying EcoSim Data. 
 That info is held by the CForcingFunction object that owns this data. This is because different shapes (Forcing or Mediation) store there data differently within the EcoSim data structures.
 </remarks>
</member>
<member name="P:EwECore.cShapeData.ShapeData">
 <summary>
 Returns the actual shape values. Note that his method returns a copy
 of the original data array; making changes to the array returned here
 will not be reflected in the original shape.
 </summary>
</member>
<member name="P:EwECore.cShapeData.ShapeData(System.Int32)">
 <summary>
 Get/set a value in the shape for a given point.
 </summary>
 <param name="iPoint">The point to access.</param>
</member>
<member name="P:EwECore.cShapeData.nPoints">
 <summary>
 Get the upper bound of the array. 
 </summary>
 <remarks>
 This property cannot be used to resize the data. Call either 
 <see cref="M:EwECore.cShapeData.ResizeData(System.Int32)">ResizeData</see> or build a new object
 of the desired size.
 </remarks>
</member>
<member name="P:EwECore.cShapeData.XMax">
 <summary>
 Obsolete please use cShapeData.nPoints instead. 
 </summary>
</member>
<member name="P:EwECore.cShapeData.YMax">
 <summary>
 Get the maximum value in the shape.
 </summary>
</member>
<member name="P:EwECore.cShapeData.TimeResolution">
 <summary>
 Get/set the <see cref="T:EwECore.eTSDataSetInterval"/> temporal resolution of a shape.
 </summary>
 <remarks>
 This flag merely serves to direct a user interface how to reflect the data in a 
 shape. The underlying shape data is still interpreted per timestep (for shapes).</remarks>
</member>
<member name="P:EwECore.cShapeData.IsSeasonal">
 <summary>
 Get/set whether a shape is supposed to reflect a monthly pattern.
 </summary>
</member>
<member name="P:EwECore.cShapeData.StartEditPoint">
 <summary>
 First X Index of the current edit block
 </summary>
 <value></value>
 <returns></returns>
 <remarks>>When a user edits a shape this it the index of the first point</remarks>
</member>
<member name="P:EwECore.cShapeData.EndEditPoint">
 <summary>
 Last X Index of the current edit block
 </summary>
 <value></value>
 <returns></returns>
 <remarks>When a user edits a shape this it the index of the last point </remarks>
</member>
<member name="M:EwECore.cShapeData.ResizeData(System.Int32)">
 <summary>
 Resize the existing data to a new number of points this will preserve any existing data and populate new points with a value of one (1). 
 New points will have no affect on the model.
 </summary>
 <param name="newNumberOfPoints">New number of points</param>
 <returns>True if successful. False otherwise</returns>
 <remarks>This is called by the Forcing or Mediation shape that owns this data (m_owner.update()) 
 when it needs to update it's data or when the Shape has been added to the Manager. 
 If this object has not been assigned to a Shape then this will not be called and it can hold any amount of data.
 </remarks>
</member>
<member name="P:EwECore.cShapeData.Index">
 <summary>
 Get/set the index of the time series in a time series dataset.
 </summary>
</member>
<member name="P:EwECore.cShapeData.Name">
 <summary>
 Get/set the name of a time series.
 </summary>
</member>
<member name="T:EwECore.cBaseShapeManager">
 <summary>
 Base class for a Shape Manager. Provides implementation to make a derived Shape Manager behave like a List (For Each). 
 </summary>
 <remarks>This provides For Each functionality to a Shape Manager by implementing the IEnumerable.GetEnumerator() interface. 
 Behaviour specific to a Shape Manager must be implemented in a derived class.
 </remarks>
</member>
<member name="F:EwECore.cBaseShapeManager.m_SimData">
 <summary>underlying <see cref="T:EwECore.cEcosimDatastructures">EcoSim data</see></summary>
</member>
<member name="F:EwECore.cBaseShapeManager.m_shapes">
 <summary>List of shapes owned by this manager.</summary>
</member>
<member name="F:EwECore.cBaseShapeManager.m_core">
 <summary>Reference to the <see cref="T:EwECore.cCore">core</see>.</summary>
</member>
<member name="F:EwECore.cBaseShapeManager.m_DataType">
 <summary><see cref="T:EwEUtils.Core.eDataTypes">Type of shape</see> this manager operates on.</summary>
</member>
<member name="M:EwECore.cBaseShapeManager.Init">
 <summary>
 Initialize/build all the shapes that belong to this shape manager
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="M:EwECore.cBaseShapeManager.CreateNewShape(System.String,System.Single[],System.Int64,System.Single[])">
 <summary>
 Shapes can not be created outside the Shape Manager; they must be created by a ShapeManager.
 </summary>
 <returns>A valid shape if successfull. Otherwise Nothing</returns>
</member>
<member name="P:EwECore.cBaseShapeManager.NPoints">
 <summary>
 Number of points in the data for this type of shape. This is specific to a ShapeManger implementation.
 </summary>
</member>
<member name="M:EwECore.cBaseShapeManager.#ctor(EwECore.cEcosimDatastructures@,EwECore.cCore@,EwEUtils.Core.eDataTypes)">
 <summary>
 Creates a new ShapeManager from the EcoSim data
 </summary>
 <param name="EcoSimData">EcoSim data used to populate the Shapes</param>
 <remarks>New ShapeMangers can only be created by the Core so this is Declares as a Friend. Derived class should override the Init() function to initialize the Shapes. </remarks>
</member>
<member name="M:EwECore.cBaseShapeManager.Dispose">
 <inheritdocs cref="M:System.IDisposable.Dispose"/>
</member>
<member name="M:EwECore.cBaseShapeManager.Add(EwECore.cForcingFunction)">
 <summary>
 Add a <see cref="T:EwECore.cForcingFunction">shape</see> to the manager
 </summary>
 <param name="ForcingFunction">cForcingFunction or derived object to add to the ShapeManager and the underlying EcoSim data.</param>
 <returns>True if Successfull</returns>
 <remarks>Override this in a derived class to add the data in the cForcingFunction to the underlying EcoSim data. 
 This will also work for cMediationFunction Objects as they use cForcingFunction as a base class.</remarks>
</member>
<member name="P:EwECore.cBaseShapeManager.Item(System.Int32)">
 <summary>
 Get a <see cref="T:EwECore.cForcingFunction">shape</see> from the manager.
 </summary>
 <param name="ItemIndex">The zero-based index of the shape to obtain.</param>
</member>
<member name="P:EwECore.cBaseShapeManager.CoreItem(System.Int32)">
 <summary>
 Use a Core one based index to retrieve an item
 </summary>
 <param name="CoreOneBasedIndex">One based index to the item</param>
</member>
<member name="P:EwECore.cBaseShapeManager.Count">
 <summary>
 Number of Items(shapes) in this Shape Manager
 </summary>
 <value></value>
 <returns></returns>
 <remarks>The collection is zero based(0). So Count is one more then the last index i.e. ShapeManager.Item(ShapeManager.Count - 1) Will return the last Item in the list.  </remarks>
</member>
<member name="M:EwECore.cBaseShapeManager.GetEnumerator">
 <summary>
 Implementation of IEnumerable.GetEnumerator provides access to the For Each statment
 </summary>
 <returns>The Enumerator of the List used by this object</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cBaseShapeManager.Contains(EwECore.cForcingFunction@)">
 <summary>
 Does this ShapeManager contain this cForcingFunction
 </summary>
 <param name="ForcingFunction">A cForcingFunction or cMediation object</param>
 <returns>True if this cForcingFunction is in the Manager. False otherwise.</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cBaseShapeManager.Remove(EwECore.cForcingFunction@)">
 <summary>
 Remove a shape from the Manager and the underlying EcoSim Data
 </summary>
 <param name="ShapeToRemove">Valid shape to remove</param>
 <returns>True if successful</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cBaseShapeManager.Clear">
 <summary>
 Clear shapes from memory.
 </summary>
</member>
<member name="M:EwECore.cBaseShapeManager.ShapeChanged(EwECore.cShapeData)">
 <summary>
 Called by a shape to tell the manager that it has changed data. 
 </summary>
 <remarks>Tell the core that a shape has changed. </remarks>
</member>
<member name="M:EwECore.cBaseShapeManager.Update(System.Boolean)">
 <summary>
 Populate the underlying EcoSim data structures with the forcing function data
 </summary>
 <returns></returns>
 <remarks>This is dumb it will clear all the existing data and repopulate all the data. It has no idea what has changed </remarks>
</member>
<member name="M:EwECore.cBaseShapeManager.Load">
 <summary>
 Load the existing shape with the underlying Ecosim data
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cBaseShapeManager.getShapeForEcoSimArrayIndex(System.Int32,EwECore.cForcingFunction@)">
 <summary>
 Convert an array index from the underlying data in EcoSim into the Forcing function that is stored in the list
 </summary>
 <param name="iEcoSimIndex"></param>
 <param name="theForcingShape"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:EwECore.cBaseShapeManager.DataType">
 <inheritdocs cref="P:EwECore.ICoreInterface.DataType"/>
</member>
<member name="P:EwECore.cBaseShapeManager.CoreComponent">
 <inheritdocs cref="P:EwECore.ICoreInterface.CoreComponent"/>
</member>
<member name="P:EwECore.cBaseShapeManager.DBID">
 <inheritdocs cref="P:EwECore.ICoreInterface.DBID"/>
</member>
<member name="M:EwECore.cBaseShapeManager.GetID">
 <inheritdocs cref="M:EwECore.ICoreInterface.GetID"/>
</member>
<member name="P:EwECore.cBaseShapeManager.Index">
 <inheritdocs cref="P:EwECore.ICoreInterface.Index"/>
</member>
<member name="P:EwECore.cBaseShapeManager.Name">
 <inheritdocs cref="P:EwECore.ICoreInterface.Name"/>
</member>
<member name="M:EwECore.cBaseShapeManager.CreateNewShape(System.String,System.Single[],System.Single,System.Single,System.Single,System.Single,System.Int64)">
 <summary>
 Shapes can not be created outside the Shape Manager; they must be created by a ShapeManager.
 </summary>
 <returns>A valid shape if successfull. Otherwise Nothing</returns>
</member>
<member name="T:EwECore.cEcosimEnviroResponseManager">
 <summary>
 Manager class to handle Ecosim Environmental Response functions
 </summary>
</member>
<member name="T:EwECore.cEcosimMortalityResponseManager">
 <summary>
 Manager class to handle Ecosim Mortality Response functions
 </summary>
</member>
<member name="P:EwECore.cEcospaceEnviroResponseManager.nEnviroData">
 -----------------------------------------------------------------------
 <summary>
 Gets the number of maps managed by the manager.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceEnviroResponseManager.EnviroData(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns the driver map at a given index [1, <see cref="P:EwECore.cEcospaceEnviroResponseManager.nEnviroData"/>].
 </summary>
 <param name="MapIndex">The one-based index of the map to return.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceEnviroResponseManager.Update">
 -----------------------------------------------------------------------
 <summary>
 Update all the maps in the manager.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceMortalityResponseManager.nEnviroData">
 -----------------------------------------------------------------------
 <summary>
 Gets the number of maps managed by the manager.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cEcospaceMortalityResponseManager.EnviroData(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns the driver map at a given index [1, <see cref="P:EwECore.cEcospaceMortalityResponseManager.nEnviroData"/>].
 </summary>
 <param name="MapIndex">The one-based index of the map to return.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cEcospaceMortalityResponseManager.Update">
 -----------------------------------------------------------------------
 <summary>
 Update all the maps in the manager.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cEggProductionShapeManager">
 <summary>
Manager for the Egg Production Shapes
 </summary>
 <remarks> Egg production and Forcing shapes are stored in the same data structures in EcoSim so most of their functionality is in cForcingFunctionManager. 
 The only real difference is in how the data is applied to groups. Egg Production can only be applied to a Stanza Group.
  So the manager contains a list of all the Stanza Groups that have an associated Egg Production shape.</remarks>
</member>
<member name="M:EwECore.cEggProductionShapeManager.LoadGroupShapeList">
 <summary>
 Overrides the base class CForcingFunctionManager InitAppliesTo() to initialize the cAppliesToList with the EggProduction forcing data from EcoSim
 </summary>
 <returns></returns>
 <remarks>EggProduction forcing data points are stored in the same data structures as Time Forcing data cEcoSimDataStructures.zscale(). 
 so cEggProductionManager can use the same InitShapes routine as it's base class cForcingFunctionManager</remarks>
</member>
<member name="M:EwECore.cEggProductionShapeManager.OnChanged(EwECore.cGroupShapePair@)">
 <summary>
 Tell the core that data has been changed
 </summary>
 <remarks>Called by a GroupShapePair when its data has changed</remarks>
</member>
<member name="P:EwECore.cEnviroResponseFunction.ResponseLeftLimit">
 <summary>
 Minimum value of the input map that the response will be computed for. 
 All values less than this will return the first value of the response function. 
 </summary>
 <remarks>
 Left margin of the X Axis considered to be inbounds of the response function.
 Updates <see cref="F:EwECore.cMediationDataStructures.XAxisMin">cMediationDataStructures.XAxisMin</see>
 </remarks>
</member>
<member name="P:EwECore.cEnviroResponseFunction.ResponseRightLimit">
 <summary>
 Maximum value of the input map that the response will be computed for. 
 All values greater than this will return the last value of the response function. 
 </summary>
 <remarks>
 Right margin of the X Axis considered to be inbounds of the response function. 
 Updates <see cref="F:EwECore.cMediationDataStructures.XAxisMax">cMediationDataStructures.XAxisMax</see>
 </remarks>
</member>
<member name="T:EwECore.cEnviroResponseShapeManager">
 <summary>
 Implemenation of the Base class for capacity shapes
 </summary>
</member>
<member name="M:EwECore.cEnviroResponseShapeManager.CreateNewShape(System.String,System.Single[],System.Int64,System.Single[])">
 <summary>
 Create a new Mediation shape
 </summary>
</member>
<member name="M:EwECore.cFishingEffortShapeManger.CreateNewShape(System.String,System.Single[],System.Int64,System.Single[])">
 <summary>
 Fishing rate shapes can not be dynamically created; they are part of the fleet setup.
 </summary>
 <returns>Always Nothing.</returns>
</member>
<member name="M:EwECore.cFishingMortalityShapeManger.CreateNewShape(System.String,System.Single[],System.Int64,System.Single[])">
 <summary>
 Fishing mortality rate shapes can not be dynamically created; they are part of the fleet setup.
 </summary>
 <returns>Always Nothing.</returns>
</member>
<member name="T:EwECore.cFishingMortShape">
 <summary>
 A fishing mortality shape.
 </summary>
</member>
<member name="M:EwECore.cFishingMortShape.Load">
 <summary>
 Initialize the propeties from the underlying EcoSim data structures at the existing array index (iEcoSimIndex)
 </summary>
 <returns>True if successful</returns>
 <remarks>This seperates creation from initialization so that an existing object can be repopluated from its underlying data</remarks>
</member>
<member name="M:EwECore.cFishingMortShape.Update">
 <summary>
 Update the underlying EcoSim data structures
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.cFishingRateShape">
 <summary>
 A fish s
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cFishingRateShape.Load">
 <summary>
 Initialize the propeties from the underlying EcoSim data structures at the existing array index (iEcoSimIndex)
 </summary>
 <returns>True if successful</returns>
 <remarks>This seperates creation from initialization so that an existing object can be repopluated from its underlying data</remarks>
</member>
<member name="M:EwECore.cFishingRateShape.Update_Org">
 <summary>
 Update the underlying EcoSim data structures
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cFishingRateShape.Update">
 <summary>
 Update the underlying EcoSim data structures
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.cForcingFunction">
 -----------------------------------------------------------------------
 <summary>
 Provides access to Forcing and EggProduction shapes, and a base class 
 for Mediation functions.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cForcingFunction.Reshape(EwEUtils.Core.IShapeFunction)">
 -----------------------------------------------------------------------
 <summary>
 Update the shape from a shape function. This updates the shape data,
 the <see cref="P:EwECore.cForcingFunction.ShapeFunctionType"/>, and <see cref="P:EwECore.cForcingFunction.ShapeFunctionParameter(System.Int32)"/>
 values.
 </summary>
 <param name="fn">The shapefunction to update from.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cForcingFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eShapeFunctionType"/> that defines the forcing function.
 </summary>
 <seealso cref="M:EwECore.cForcingFunction.Reshape(EwEUtils.Core.IShapeFunction)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cForcingFunction.nParams">
 -----------------------------------------------------------------------
 <summary>
 Get the number of shape function parameters.
 </summary>
 <seealso cref="P:EwECore.cForcingFunction.ShapeFunctionType"/>
 <seealso cref="P:EwECore.cForcingFunction.ShapeFunctionParameter(System.Int32)"/>
 <seealso cref="P:EwECore.cForcingFunction.ShapeFunctionParameters"/>
 <seealso cref="M:EwECore.cForcingFunction.Reshape(EwEUtils.Core.IShapeFunction)"/>
 <seealso cref="T:EwEUtils.Core.IShapeFunction"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cForcingFunction.ShapeFunctionParameter(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the value of a shape function parameter.
 </summary>
 <param name="iParam">One-based parameter index.</param>
 <seealso cref="P:EwECore.cForcingFunction.ShapeFunctionType"/>
 <seealso cref="P:EwECore.cForcingFunction.nParams"/>
 <seealso cref="P:EwECore.cForcingFunction.ShapeFunctionParameters"/>
 <seealso cref="M:EwECore.cForcingFunction.Reshape(EwEUtils.Core.IShapeFunction)"/>
 <seealso cref="T:EwEUtils.Core.IShapeFunction"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cForcingFunction.ShapeFunctionParameters">
 -----------------------------------------------------------------------
 <summary>
 Get an array with the values for all shape function parameters.
 </summary>
 <seealso cref="P:EwECore.cForcingFunction.ShapeFunctionType"/>
 <seealso cref="P:EwECore.cForcingFunction.nParams"/>
 <seealso cref="M:EwECore.cForcingFunction.Reshape(EwEUtils.Core.IShapeFunction)"/>
 <seealso cref="T:EwEUtils.Core.IShapeFunction"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cForcingFunction.ID">
 -----------------------------------------------------------------------
 <summary>
 Index of the shape in the list managers list of shape
 </summary>
 <remarks>This is a zero based index set when the shape is added to the manager (Construction of the shape) </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cForcingFunction.#ctor(EwECore.cEcosimDatastructures@,EwECore.cBaseShapeManager@,System.Int32,EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <summary>
 Creates a new Forcing Function Shape from the underlying EcoSim Data.
 </summary>
 <param name="esData"><see cref="T:EwECore.cEcosimDatastructures">Ecosim data structure</see>
 to create the forcing function from.</param>
 <param name="Manager"></param>
 <param name="iDBID"></param>
 <param name="DataType"></param>
 <remarks>
 This is used by the Manager to create forcing function from the 
 underlying EcoSim data.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cForcingFunction.Load">
 <summary>
 Initialize the propeties from the underlying EcoSim data structures for this shapes Database ID 
 </summary>
 <returns>True if successful</returns>
 <remarks>This seperates creation from initialization so that an existing object can be repopluated from its underlying data</remarks>
</member>
<member name="M:EwECore.cForcingFunction.Dispose">
 <inheritdocs cref="M:EwECore.cShapeData.Dispose"/>
</member>
<member name="M:EwECore.cForcingFunction.Clear">
 <inheritdocs cref="M:EwECore.cShapeData.Clear"/>
</member>
<member name="M:EwECore.cForcingFunction.Update">
 <summary>
 Update the already existing underlying EcoSim data structures (m_data)
 </summary>
 <returns>True if successful.</returns>
 <remarks>This gets called by the cForcingData when it has been edited to update the existing EcoSim data</remarks>
</member>
<member name="M:EwECore.cForcingFunction.ShapeChanged">
 <summary>
 Tell the manager that a shape has changed
 </summary>
</member>
<member name="T:EwECore.cForcingFunctionShapeManager">
 <summary>
 Extents the base class to manage the Forcing Shapes
 </summary>
 <remarks>cBaseShapeManager contains the code to manage the list. This will load the Forcing data only</remarks>
</member>
<member name="M:EwECore.cForcingFunctionShapeManager.#ctor(EwECore.cEcosimDatastructures@,EwECore.cCore@,EwEUtils.Core.eDataTypes)">
 <summary>
 Creates and loads a new Forcing shape manager out from the EcoSim data
 </summary>
 <param name="EcoSimData">EcoSim data structures to load the forcing shapes from</param>
 <param name="theCore">Reference to the Core that is used for functionality that only the core can know</param>
 <param name="DataType"><see cref="T:EwEUtils.Core.eDataTypes">Data type</see> of shapes to load</param>
 <remarks>This will create the new manager and load the data into shapes</remarks>
</member>
<member name="P:EwECore.cForcingFunctionShapeManager.NPoints">
 <summary>
 Number of points in the underlying Shape data
 </summary>
 <value></value>
 <returns></returns>
 <remarks>This is provided for convenience. So the number of points can be retrieved without getting a shape.</remarks>
</member>
<member name="M:EwECore.cForcingFunctionShapeManager.CreateNewShape(System.String,System.Single[],System.Int64,System.Single[])">
 <summary>
 Creates a new shape
 </summary>
 <returns>A shape that has been added to the Shape Manager</returns>
 <remarks>A shape cannot be created on its own. It must be created by this factory so that it is hooked up to the core data on creation. </remarks>
</member>
<member name="T:EwECore.cGroupShapeList">
 <summary>
 This is a collection of cShapeGroupPair 
 </summary>
</member>
<member name="T:EwECore.cGroupShapePair">
 <summary>
 This object represents the iStanza Group (index of stanza group) and Egg Production Forcing Shape index that is used by this Stanza group
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.cGroupShapePair.m_iManager">
 <summary>Index of a shape in the cEggProductionManager.Item() list</summary>
</member>
<member name="P:EwECore.cGroupShapePair.ShapeID">
 <summary>
 Index of this Shape in the cEggProductionManager.Item() lists
 </summary>
 <remarks>The shape to use for this pair from the cEggProductionManager. 
 <example>
 'get the cGroupShapePair for the first stanza group from the EggProdManager.GroupShapeList
 'this cGroupShapePair will have an iStanzaGroup=0
 Dim pair As cGroupShapePair = EggProdManager.GroupShapeList.Item(0)
 'make this cGroupShapePair use the first shape in the EggProdManager
 pair.ShapeMangerIndex = 0
 </example>
</remarks>
</member>
<member name="P:EwECore.cGroupShapePair.iStanzaGroup">
 <summary>
 A zero based index to the Stanzas. This is the same as is used by cCore.StanzaGroups.Item(iStanza) list
 </summary>
</member>
<member name="P:EwECore.cGroupShapePair.iShape">
 <summary>
 Index of the shape in the underlying core data 
 </summary>
 <remarks>
 This is a friend because only the manager should care what the underlying core shape index is.
 </remarks>
</member>
<member name="P:EwECore.cGroupShapePair.iCoreStanzaIndex">
 <summary>
 Index used by the core to update data
 </summary>
 <remarks>Stanzas are stored in a zeor base list for the interface. This is the one based index used by the core.</remarks>
</member>
<member name="T:EwECore.cLandingsInteraction">
 <summary>
 Class to wrap the shape and function type modifiers for a price elasticity interaction
 </summary>
</member>
<member name="M:EwECore.cLandingsInteraction.#ctor(System.Int32,System.Int32,EwECore.cMediatedInteractionManager,System.Collections.Generic.List{EwEUtils.Core.eForcingFunctionApplication})">
 <summary>
 Create a new interaction.
 </summary>
 <param name="iFleet"><see cref="P:EwECore.cCoreInputOutputBase.Index">Fleet index</see>.</param>
 <param name="iGroup"><see cref="P:EwECore.cCoreInputOutputBase.Index">Group index</see>.</param>
 <param name="manager"><see cref="T:EwECore.cMediatedInteractionManager">Mediated interaction manager</see>.</param>
</member>
<member name="M:EwECore.cLandingsInteraction.Load">
 <summary>
 Build the list of shapes used by this interaction from the underlying Ecosim data.
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="P:EwECore.cLandingsInteraction.FleetIndex">
 <summary>
 Get the <see cref="P:EwECore.cCoreInputOutputBase.Index">index</see> of the fleet
 for this interaction.
 </summary>
</member>
<member name="P:EwECore.cLandingsInteraction.GroupIndex">
 <summary>
 Get the <see cref="P:EwECore.cCoreInputOutputBase.Index">index</see> of the group
 for this interaction.
 </summary>
</member>
<member name="M:EwECore.cLandingsInteraction.Update">
 <summary>
 Update the underlying Ecosim data with the values in this landings interaction
 </summary>
</member>
<member name="P:EwECore.cLandingsInteraction.DataType">
 <inheritdocs cref="P:EwECore.ICoreInterface.DataType"/>
</member>
<member name="M:EwECore.cLandingsInteraction.GetID">
 <inheritdocs cref="M:EwECore.ICoreInterface.GetID"/>
</member>
<member name="T:EwECore.cLandingsMediatingGroup">
 <summary>
 Mediation group for Price Elasticity.
 cPriceMediatingGroup "Is A" cMediatingGroup with a fleet index that tell you what Fleet to get the Landings from
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cLandingsMediatingGroup.#ctor(System.Int32,System.Int32,System.Single)">
 <summary>
 Build a new Mediation Group
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.cLandingsMediationFunction">
 <summary>
 A derived mediation function, dedicated to modelling fleet-group interactions
 based on landings.
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.cLandingsMediationFunction.Update">
 <summary>
 Update the underlying EcoSim data structures
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cLandingsMediationFunction.clearMedWeights">
 <summary>
 Clear all the data, in the underlying ecosim data, out of the MedWeights for this mediation shape.
 </summary>
 <remarks>
 This is used if a mediating group is removed to clear the ecosim data before the group is removed from the list. 
 This must be used in conjuction the Update() to restore the data
 </remarks>
</member>
<member name="M:EwECore.cLandingsMediationFunction.AddGroup(System.Int32,System.Single,System.Int32)">
 <inheritdocs cref="M:EwECore.cMediationBaseFunction.AddGroup(System.Int32,System.Single,System.Int32)"/>
 <param name="iFleet"></param>
</member>
<member name="P:EwECore.cLandingsMediationFunction.NumGroups">
 <inheritdocs cref="P:EwECore.cMediationBaseFunction.NumGroups"/>
</member>
<member name="P:EwECore.cLandingsMediationFunction.Group(System.Int32)">
 <inheritdocs cref="P:EwECore.cMediationBaseFunction.Group(System.Int32)"/>
</member>
<member name="M:EwECore.cLandingsMediationFunction.RemoveGroup(System.Int32)">
 <summary>
 
 </summary>
 <param name="iIndex">Zero-based index [0, <see cref="P:EwECore.cLandingsMediationFunction.NumGroups"/>-1] of the 
 mediating group to remove.</param>
 <returns></returns>
</member>
<member name="M:EwECore.cLandingsMediationFunction.Clear">
 <inheritdocs cref="M:EwECore.cForcingFunction.Clear"/>
</member>
<member name="T:EwECore.cLandingsMediationShapeManager">
 <summary>
 Implemenation of the Base class for Mediation shapes
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:EwECore.cLandingsMediationShapeManager.CreateNewShape(System.String,System.Single[],System.Int64,System.Single[])">
 <summary>
 Create a new Landings shape
 </summary>
 <returns></returns>
</member>
<member name="T:EwECore.cMediatedInteraction">
 <summary>
 Class to wrap the shape and function type modifiers for a meditated interaction
 </summary>
 <remarks>This will populate a list of five(MaxFunctions) shapes/functiontype pairs on construction. 
 A user calls setShape(,,,) or getShape(,,,) to modify the shape or functiontype for this Pred Prey interaction. </remarks>
</member>
<member name="T:EwECore.cMediatedInteraction.cShapeFunctionTypePair">
 <summary>
 Private class to hold the shape and function type for each possible modifier.
 </summary>
</member>
<member name="F:EwECore.cMediatedInteraction.m_lstAppTypes">
 <summary>
List of Application types this that this interation applies to
Passed into the Constructor
 </summary>
</member>
<member name="M:EwECore.cMediatedInteraction.Load">
 <summary>
 Build the list of shapes used by this interaction from the underlying Ecosim data.
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="P:EwECore.cMediatedInteraction.MaxNumShapes">
 <summary>
 Get the maximum number of shapes that can be assigned to a 
 pred/prey interaction.
 </summary>
</member>
<member name="P:EwECore.cMediatedInteraction.nAppliedShapes">
 <summary>
 Get the number of shapes that are used by this predator/prey interaction.
 </summary>
 <remarks>The first shape that is Nothing marks the end of the series. 
 No shapes after that will be used.</remarks>
</member>
<member name="M:EwECore.cMediatedInteraction.getShape(System.Int32,EwECore.cForcingFunction@,EwEUtils.Core.eForcingFunctionApplication@)">
 <summary>
 Get a shape modifier, consisting of a <see cref="T:EwECore.cForcingFunction">forcing funtion</see> and 
 a <see cref="T:EwEUtils.Core.eForcingFunctionApplication">Type of variable</see>, defined at a given index.
 </summary>
 <param name="iItem">One-based index of the <see cref="T:EwECore.cForcingFunction">shape</see> and 
 <see cref="T:EwEUtils.Core.eForcingFunctionApplication">FunctionType</see> to retreive. There can 
 be up to <see cref="P:EwECore.cMediatedInteraction.MaxNumShapes">MaxNumShapes</see> for a pred prey interaction.</param>
 <param name="Shape">A reference to the shape that is used for this pred/prey 
 interaction.</param>
 <param name="FunctionType"><see cref="T:EwEUtils.Core.eForcingFunctionApplication">Type of variable</see>
 that this modifier applies to.</param>
 <returns>True if there is a shape modifier defined at this index.</returns>
</member>
<member name="M:EwECore.cMediatedInteraction.setShape(System.Int32,EwECore.cForcingFunction,EwEUtils.Core.eForcingFunctionApplication)">
 <summary>
 Set a shape modifier, consisting of a <see cref="T:EwECore.cForcingFunction">forcing function</see> and 
 <see cref="T:EwEUtils.Core.eForcingFunctionApplication">function type</see>, for a given index.
 </summary>
 <param name="ItemIndex">One-base index of the shape to set. There can be 
 up to <see cref="P:EwECore.cMediatedInteraction.MaxNumShapes">MaxNumShapes</see> for a pred/prey interaction.</param>
 <param name="Shape"><see cref="T:EwECore.cForcingFunction">Shape</see> to use for this 
 pred/prey interaction index. If the shape is Nothing/Null then no modifier will be 
 used for this pred/prey interaction index.</param>
 <param name="FunctionType"><see cref="T:EwEUtils.Core.eForcingFunctionApplication">Type of variable</see>
 to apply this modifier to.</param>
 <returns>True is the index was in bounds and the shape was set</returns>
 <remarks>To clear an index set the shape to Nothing</remarks>
</member>
<member name="P:EwECore.cMediatedInteraction.LockUpdates">
 <summary>
 Get/set whether updates should not be sent to the core. This functionality 
 is particularly useful when making a series of changes to pred/prey interactions.
 </summary>
</member>
<member name="M:EwECore.cMediatedInteraction.Update">
 <summary>
 Update the underlying Ecosim data with the values in this pred prey interaction
 </summary>
 <remarks>The update does not communicate the update with the core that is done by what/who ever called the method. 
 This allows a manager to update all the data then tell the core. </remarks>
</member>
<member name="P:EwECore.cMediatedInteraction.DataType">
 <inheritdocs cref="P:EwECore.ICoreInterface.DataType"/>
</member>
<member name="M:EwECore.cMediatedInteraction.GetID">
 <inheritdocs cref="M:EwECore.ICoreInterface.GetID"/>
</member>
<member name="P:EwECore.cMediatedInteraction.CoreComponent">
 <inheritdocs cref="P:EwECore.ICoreInterface.CoreComponent"/>
</member>
<member name="P:EwECore.cMediatedInteraction.DBID">
 <inheritdocs cref="P:EwECore.ICoreInterface.DBID"/>
</member>
<member name="P:EwECore.cMediatedInteraction.Index">
 <inheritdocs cref="P:EwECore.ICoreInterface.Index"/>
</member>
<member name="P:EwECore.cMediatedInteraction.Name">
 <inheritdocs cref="P:EwECore.ICoreInterface.Name"/>
</member>
<member name="T:EwECore.cMediatedInteractionManager">
 <summary>
 Manages all mediated shape interactions.
 </summary>
</member>
<member name="P:EwECore.cMediatedInteractionManager.MaxNShapes">
 <summary>
 Get the maximum number of shapes that can be assigned to an interaction.
 </summary>
</member>
<member name="T:EwECore.cMediatingFleet">
 <summary>
 Fleet and Weight of a Fleet that make up a Mediating Fleet for a Mediation function. There 
 can be more then one cMediatingFleet for a Mediation Function
 </summary>
 <remarks>This defines the Fleet(s) that provide the Biomass for the X axis of a mediation function.</remarks>
</member>
<member name="M:EwECore.cMediatingFleet.#ctor(System.Int32,System.Single)">
 <summary>
 Build a new Mediation Fleet
 </summary>
 <param name="iFleet">Index to the EcoPath/EcoSim fleet.</param>
 <param name="theWeight">Weight that is applied to this fleet [0-1]</param>
 <remarks></remarks>
</member>
<member name="T:EwECore.cMediatingGroup">
 <summary>
 Group and Weight of a Group that make up a Mediating Group for a Mediation function. There can be more then one cMediatingGroup for a Mediation Function
 </summary>
 <remarks>This is the Group(s) that provide the Biomass for the X axis of a mediation function</remarks>
</member>
<member name="M:EwECore.cMediatingGroup.#ctor(System.Int32,System.Single)">
 <summary>
 Build a new Mediation Group
 </summary>
 <param name="iGroup">Index to the EcoPath/EcoSIm group this is the iGroup</param>
 <param name="theWeight">Weight that is applied to this group 0-1</param>
 <remarks></remarks>
</member>
<member name="T:EwECore.cMediationBaseFunction">
<summary>
 Base Class for a mediation function. 
 A mediation function "Is A" Forcing function that that contains Ecopath base values along it's X axis, Biomass, Effort or Catch
 depending on the implementation. The Y axis contains the value of the underlying shape entered by the user. 
 The value of the Y axis is used to mediate/modify a Group biomass (for a Mediation function) or Group/Fleet price (for a Price Elasticity function) 
 based on how the mediaton function is applied via the cPredPreyInteraction or cLandingsInteraction that "contain" the mediation function. 
 </summary>
</member>
<member name="M:EwECore.cMediationBaseFunction.Load">
 <summary>
 Initialize the propeties from the underlying EcoSim data structures at the existing array index (iEcoSimIndex)
 </summary>
 <returns>True if successful</returns>
 <remarks>This seperates creation from initialization so that an existing object can be repopluated from its underlying data</remarks>
</member>
<member name="P:EwECore.cMediationBaseFunction.NumGroups">
 <summary>Returns the number of <see cref="T:EwECore.cMediatingGroup">mediating groups</see> attached to this function.</summary>
</member>
<member name="P:EwECore.cMediationBaseFunction.Group(System.Int32)">
 <summary>Retrieve a <see cref="T:EwECore.cMediatingGroup">mediating group</see>.</summary>
 <param name="iIndex">Zero-based index [0, <see cref="P:EwECore.cMediationBaseFunction.NumGroups"/>-1] of the mediating group to retrieve.</param>
</member>
<member name="M:EwECore.cMediationBaseFunction.AddGroup(System.Int32,System.Single,System.Int32)">
 <summary>Add a <see cref="T:EwECore.cMediatingGroup">mediating group</see> to this function.</summary>
 <param name="iGroup">The <see cref="P:EwECore.cCoreInputOutputBase.Index">ecopath index</see> of the group to add.</param>
 <param name="weight">The weight of the mediating fleet.</param>
</member>
<member name="P:EwECore.cMediationBaseFunction.NumFleet">
 <summary>Returns the number of <see cref="T:EwECore.cMediatingFleet">mediating fleets</see> attached to this function.</summary>
</member>
<member name="P:EwECore.cMediationBaseFunction.Fleet(System.Int32)">
 <summary>Retrieve a <see cref="T:EwECore.cMediatingFleet">mediating fleet</see>.</summary>
 <param name="iIndex">Zero-based index [0, <see cref="P:EwECore.cMediationBaseFunction.NumFleet"/>-1] of the mediating fleet to retrieve.</param>
</member>
<member name="M:EwECore.cMediationBaseFunction.AddFleet(System.Int32,System.Single)">
 <summary>Add a <see cref="T:EwECore.cMediatingFleet">mediating fleet</see> to this function.</summary>
 <param name="iFleet">The <see cref="P:EwECore.cCoreInputOutputBase.Index">ecopath index</see> of the fleet to add.</param>
 <param name="weight">The weight of the mediating fleet.</param>
</member>
<member name="P:EwECore.cMediationBaseFunction.XBaseIndex">
 <summary>
 X Axis base index for biomass
 </summary>
 <value></value>
 <returns></returns>
 <remarks>This is the vertical green line in the EwE 5 mediation interface</remarks>
</member>
<member name="P:EwECore.cMediationBaseFunction.XBase">
 <summary>
 X Axis base value for sum of x biomass
 </summary>
 <value></value>
 <returns></returns>
 <remarks>This is the vertical green line in the EwE 5 mediation interface</remarks>
</member>
<member name="M:EwECore.cMediationBaseFunction.Update">
 <summary>
 Update the underlying EcoSim data structures
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.cMediationFunction">
 <summary>
 Mediation functions inherit their base functionality from cMediationBaseFunction 
 which provide the underlying shape data and Ecopath base line properties. 
 This implements loading and updating of the correct core data for this type of mediation function. 
 </summary>
</member>
<member name="M:EwECore.cMediationFunction.Update">
 <summary>
 Update the underlying EcoSim data structures
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cMediationFunction.clearMedWeights">
 <summary>
 Clear all the data, in the underlying ecosim data, out of the MedWeights for this mediation shape.
 </summary>
 <remarks>
 This is used if a mediating group is removed to clear the ecosim data before the group is removed from the list. 
 This must be used in conjuction the Update() to restore the data
 </remarks>
</member>
<member name="M:EwECore.cMediationFunction.AddGroup(System.Int32,System.Single,System.Int32)">
 <inheritdocs cref="M:EwECore.cMediationBaseFunction.AddGroup(System.Int32,System.Single,System.Int32)"/>
</member>
<member name="P:EwECore.cMediationFunction.NumGroups">
 <inheritdocs cref="P:EwECore.cMediationBaseFunction.NumGroups"/>
</member>
<member name="P:EwECore.cMediationFunction.Group(System.Int32)">
 <inheritdocs cref="P:EwECore.cMediationBaseFunction.Group(System.Int32)"/>
</member>
<member name="M:EwECore.cMediationFunction.Clear">
 <inheritdocs cref="M:EwECore.cForcingFunction.Clear"/>
</member>
<member name="M:EwECore.cMediationFunction.AddFleet(System.Int32,System.Single)">
 <inheritdocs cref="M:EwECore.cMediationBaseFunction.AddFleet(System.Int32,System.Single)"/>
</member>
<member name="P:EwECore.cMediationFunction.Fleet(System.Int32)">
 <inheritdocs cref="P:EwECore.cMediationBaseFunction.Fleet(System.Int32)"/>
</member>
<member name="P:EwECore.cMediationFunction.NumFleet">
 <inheritdocs cref="P:EwECore.cMediationBaseFunction.NumFleet"/>
</member>
<member name="M:EwECore.cMediationFunction.RemoveFleet(System.Int32)">
 <summary>
 
 </summary>
 <param name="iIndex">Zero-based index [0, <see cref="P:EwECore.cMediationFunction.NumFleet"/>-1] of the 
 mediating group to remove.</param>
 <returns></returns>
</member>
<member name="T:EwECore.cMediationShapeManager">
 <summary>
 Implemenation of the Base class for Mediation shapes
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:EwECore.cMediationShapeManager.CreateNewShape(System.String,System.Single[],System.Int64,System.Single[])">
 <summary>
 Create a new Mediation shape
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:EwECore.cPredPreyInteraction">
 <summary>
 Class to wrap the shape and function type modifiers for a pred/prey interaction
 </summary>
 <remarks>This will populate a list of five(MaxFunctions) shapes/functiontype pairs on construction. 
 A user calls setShape(,,,) or getShape(,,,) to modify the shape or functiontype for this Pred Prey interaction. </remarks>
</member>
<member name="M:EwECore.cPredPreyInteraction.#ctor(System.Int32,System.Int32,EwECore.cMediatedInteractionManager,System.Collections.Generic.List{EwEUtils.Core.eForcingFunctionApplication})">
 <summary>
 Create a new interaction.
 </summary>
 <param name="PredIndex"><see cref="P:EwECore.cCoreInputOutputBase.Index">Predator index</see>.</param>
 <param name="PreyIndex"><see cref="P:EwECore.cCoreInputOutputBase.Index">Prey index</see>.</param>
 <param name="manager"><see cref="T:EwECore.cMediatedInteractionManager">Mediated interaction manager</see>.</param>
</member>
<member name="M:EwECore.cPredPreyInteraction.Load">
 <summary>
 Build the list of shapes used by this interaction from the underlying Ecosim data.
 </summary>
 <returns>True if successful.</returns>
</member>
<member name="P:EwECore.cPredPreyInteraction.PredIndex">
 <summary>
 Get the <see cref="P:EwECore.cCoreInputOutputBase.Index">index</see> of the predator
 for this interaction.
 </summary>
</member>
<member name="P:EwECore.cPredPreyInteraction.PreyIndex">
 <summary>
 Get the <see cref="P:EwECore.cCoreInputOutputBase.Index">index</see> of the prey for
 this interaction.
 </summary>
</member>
<member name="P:EwECore.cPredPreyInteraction.isProdRate">
 <summary>
 Get whether this interaction denotes a production rate interaction.
 </summary>
</member>
<member name="M:EwECore.cPredPreyInteraction.Update">
 <summary>
 Update the underlying Ecosim data with the values in this pred prey interaction
 </summary>
 <remarks>The update does not communicate the update with the core that is done by what/who ever called the method. 
 This allows a manager to update all the data then tell the core. </remarks>
</member>
<member name="P:EwECore.cPredPreyInteraction.DataType">
 <inheritdocs cref="P:EwECore.ICoreInterface.DataType"/>
</member>
<member name="M:EwECore.cPredPreyInteraction.GetID">
 <inheritdocs cref="M:EwECore.ICoreInterface.GetID"/>
</member>
<member name="T:EwECore.IEnviroInputData">
 <summary>
 Interface for defining Ecospace Environmental Input maps
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.IEnviroInputData.ResponseFunction(System.Int32,System.Int32,System.Int32)">
 <summary>
 Return the driver value as a function of the applied Response Function
 </summary>
 <param name="iGroup">Index of the Group that this Response is for</param>
 <param name="iRow">Row of the map</param>
 <param name="iCol">Column of the map</param>
</member>
<member name="M:EwECore.IEnviroInputData.Init(EwECore.cMediationDataStructures,EwECore.cEcospaceDataStructures)">
 <summary>
 Initialize from the cMediationDataStructures containing all the available response functions and cEcospaceDataStructures
 </summary>
 <param name="MediationData">cMediationDataStructures that contains the Response Function (mediation functions) that can be used by this Map</param>
 <param name="SpaceData"></param>
</member>
<member name="P:EwECore.IEnviroInputData.ResponseIndexForGroup(System.Int32,System.Boolean)">
 <summary>
 Get / set the index of the Response function applied to a Group
 </summary>
 <param name="iGroup">One-based index of the Group that the response function is applied to</param>
 <param name="bUpdateMaps">Optional flag to suppress (possibly expensive) map updates</param>
 <value></value>
 <returns>Index of a response function.</returns>
 <remarks>
 <code>
 dim ResponseIndex as integer
 dim iGroup as integer
 iGroup = 1
 'Set the Response function index for iGroup
  IEnviroInputMap.ResponseIndexForGroup(iGroup) = 2
 'Get the Response functon index for iGroup
 ResponseIndex = IEnviroInputMap.ResponseIndexForGroup(iGroup) 
 </code>
 </remarks>
</member>
<member name="M:EwECore.IEnviroInputData.ResponseFunction(System.Int32,System.Int32)">
 <summary>
 Response function for Ecosim
 </summary>
 <param name="iGroup"></param>
 <param name="iTimeStep"></param>
 <returns></returns>
</member>
<member name="M:EwECore.IEnviroInputData.Init(EwECore.cMediationDataStructures,EwECore.cEcosimDatastructures)">
 <summary>
 Initialize from cMediationDataStructures containing all the available response functions and cEcospaceDataStructures
 </summary>
 <param name="MediationData">cMediationDataStructures that contains the Response Function (mediation functions) that can be used by this environmental driver</param>
 <param name="EcosimData"></param>
</member>
<member name="P:EwECore.IEnviroInputData.Max">
 <summary>
 Max value of the driver
 </summary>
</member>
<member name="P:EwECore.IEnviroInputData.Min">
 <summary>
 Minimum value of the driver
 </summary>
</member>
<member name="P:EwECore.IEnviroInputData.Mean">
 <summary>
 Mean value of the driver
 </summary>
</member>
<member name="P:EwECore.IEnviroInputData.Start">
 <summary>
 Simulation start value of the driver
 </summary>
</member>
<member name="M:EwECore.IEnviroInputData.Histogram">
 <summary>
 Histogram of driver values
 </summary>
 <remarks>
 Values in the Histogram will be normalized.
 Re-computed on each call to Histogram.
 </remarks>
</member>
<member name="P:EwECore.IEnviroInputData.HistogramBinWidth">
 <summary>
 Width of a histogram bin
 </summary>
</member>
<member name="M:EwECore.IEnviroInputData.Update">
 <summary>
 Updates the map stats on the underlying data
 </summary>
 <remarks>Caluculates Min, Max and Mean</remarks>
</member>
<member name="M:EwECore.IEnviroInputData.SetManager(EwECore.IEnvironmentalResponseManager)">
 <summary>
 Set the cMapResponseInteractionManager that this map uses
 </summary>
 <param name="theManager"></param>
</member>
<member name="P:EwECore.cBetapdfShapeFunction.ParamName(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ParamName(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cBetapdfShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for an Betapdf shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cBetapdfShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cBetapdfShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cBetapdfShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cBetapdfShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cBetapdfShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ShapeFunctionType"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cBetapdfShapeFunction.Gamma(System.Double)">
 -------------------------------------------------------------------
 <summary>
 Gamma function
 </summary>
 <param name="xx"></param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cBetapdfShapeFunction.gammln(System.Double)">
 -------------------------------------------------------------------
 <summary>
 Gamma Log n from Numeric Recipies in C
 </summary>
 <param name="xx"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.cComputedShapeFunction">
 <summary>
 A <see cref="T:EwECore.cShapeFunction"/> which points descrbibe a distribution determined
 by external logic. This function type is not editable.
 </summary>
</member>
<member name="M:EwECore.cComputedShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cComputedShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cComputedShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cComputedShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cComputedShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cExponentialShapeFunction.ParamName(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ParamName(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cExponentialShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for an exponential shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cExponentialShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cExponentialShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cExponentialShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cExponentialShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cExponentialShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ShapeFunctionType"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cFreehandShapeFunction">
 <summary>
 A <see cref="T:EwECore.cShapeFunction"/> which points are not defined through a primitive,
 but instead have been sketching in the EwE user interface or have been obtained
 by other means.
 </summary>
</member>
<member name="M:EwECore.cFreehandShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cFreehandShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cFreehandShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cFreehandShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cFreehandShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cHyperbolicShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for a hyperbolic shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cHyperbolicShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cHyperbolicShapeFunction.ParamName(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ParamName(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cHyperbolicShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cHyperbolicShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cHyperbolicShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cHyperbolicShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ShapeFunctionType"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLinearShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for a linear shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLinearShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLinearShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cLinearShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cLinearShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cLinearShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ShapeFunctionType"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLogisticFourParamsShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for a sigmoid shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLogisticFourParamsShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cLogisticFourParamsShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cLogisticFourParamsShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cLogisticFourParamsShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cLogisticFourParamsShapeFunction.ParamName(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ParamName(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cLogisticFourParamsShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ShapeFunctionType"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cNormalShapeFunction.ParamName(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ParamName(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cNormalShapeFunction.ParamStatus(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ParamStatus(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cNormalShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for an normal distributed shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cNormalShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cNormalShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cNormalShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cNormalShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cNormalShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ShapeFunctionType"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cNormalShapeFunction.ParamValue(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IShapeFunction.ParamValue(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cShapeFunction">
 ---------------------------------------------------------------------------
 <summary>
 Base class for implementing EwE core shape functions.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cShapeFunction.xBase">
 <summary>This original value is extracted from EwE5.</summary>
</member>
<member name="F:EwECore.cShapeFunction.m_parameters">
 <summary>The parameters that define the shape</summary>
</member>
<member name="F:EwECore.cShapeFunction.m_points">
 <summary>The points of the shape</summary>
</member>
<member name="P:EwECore.cShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <summary>
 Get one of the pre-defined shape function types for this shape.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 <para>This will have to change once shape functions are delivered by 
 plug-ins. Then, a class name will have to be used instead of an
 enum to locate the function that was used.</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.IShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.IShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShapeFunction.Parameters">
 -----------------------------------------------------------------------
 <summary>
 Returns the array of function parameters.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShapeFunction.ParamName(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns the name of a parameter. By default, one of the four standard
 shape paramter names is returned (e.g., YZero, YEnd, YBase and Steepness)
 </summary>
 <param name="iParam">The one-based parameter index [1, <see cref="P:EwECore.cShapeFunction.nParameters"/>]
 to obtain the name for.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShapeFunction.ParamUnit(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.IShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShapeFunction.ParamStatus(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IShapeFunction.ParamStatus(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShapeFunction.ParamsChanged">
 -----------------------------------------------------------------------
 <summary>
 Flag, indicating that parameter values have changed and that the shape 
 will be recalculated next time the <see cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/> is requested.
 </summary>
 <returns>True if parameter values have recently changed.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShapeFunction.ParamValue(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IShapeFunction.ParamValue(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.Core.IShapeFunction.ParamValue(System.Int32)"/>
 <summary>
 By default, the shape is filled to the end with the value at <paramref name="nPoints"/>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShapeFunction.Apply(System.Object)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.Core.IShapeFunction.Apply(System.Object)"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShapeFunction.Max">
 -----------------------------------------------------------------------
 <summary>
 Returns the max value in the shape buffer.
 </summary>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cShapeFunctionFactory">
 ---------------------------------------------------------------------------
 <summary>
 Factory for delivering <see cref="T:EwEUtils.Core.IShapeFunction">shape functions</see> that
 can be used to reshape a particular <see cref="T:EwECore.cForcingFunction"/>. This class
 also takes <see cref="T:EwEPlugin.IEcosimShapeFunctionPlugin">shape functions 
 delivered by plug-ins</see> into account.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cShapeFunctionFactory.GetShapeFunction(System.Int64,EwEPlugin.cPluginManager)">
 -----------------------------------------------------------------------
 <summary>
 Get a <see cref="T:EwEUtils.Core.IShapeFunction"/> for a given <paramref name="ft">Shape function type</paramref>
 </summary>
 <param name="ft">The function type</param>
 <param name="pm"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShapeFunctionFactory.GetShapeFunction(EwECore.cForcingFunction,EwEPlugin.cPluginManager)">
 -----------------------------------------------------------------------
 <summary>
 Get an initialized <see cref="T:EwEUtils.Core.IShapeFunction"/> for a given <see cref="T:EwECore.cForcingFunction"/>
 </summary>
 <param name="shape"></param>
 <param name="pm"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShapeFunctionFactory.GetShapeFunctions(EwECore.cForcingFunction,EwEPlugin.cPluginManager)">
 -----------------------------------------------------------------------
 <summary>
 Returns all <see cref="T:EwEUtils.Core.IShapeFunction">shape functions</see>, optionally
 filtered for compatibility with - and initialized to - a given 
 <see cref="T:EwECore.cForcingFunction"/>.
 </summary>
 <param name="shape">The optional <see cref="T:EwECore.cForcingFunction"/> to find 
 compatible <see cref="T:EwEUtils.Core.IShapeFunction">shape functions</see> for.</param>
 <param name="pm">The <see cref="T:EwEPlugin.cPluginManager"/> to find plug-in shapes for.</param>
 <returns>
 An array of compatible <see cref="T:EwEUtils.Core.IShapeFunction">shape function</see> instances.
 </returns> 
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShapeFunctionFactory.GetShapeFunctions(EwEPlugin.cPluginManager)">
 -----------------------------------------------------------------------
 <summary>
 Returns all <see cref="T:EwEUtils.Core.IShapeFunction">shape functions</see> compatible
 with a given <see cref="T:EwEUtils.Core.eDataTypes">data type</see>.
 </summary>
 <param name="pm">The <see cref="T:EwEPlugin.cPluginManager"/> to find plug-in shapes for.</param>
 <returns>
 An array of compatible <see cref="T:EwEUtils.Core.IShapeFunction">shape function</see> instances.
 </returns> 
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShoulderShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for a shoulder-contoured shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShoulderShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cShoulderShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShoulderShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShoulderShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cShoulderShapeFunction.ParamName(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ParamName(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cRightShoulderShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cLeftShoulderShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cSigmoidLegacyShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for a sigmoid shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cSigmoidLegacyShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cSigmoidLegacyShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cSigmoidLegacyShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cSigmoidLegacyShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cSigmoidLegacyShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ShapeFunctionType"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cSigmoidShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for a sigmoid shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cSigmoidShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cSigmoidShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cSigmoidShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cSigmoidShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cSigmoidShapeFunction.ParamName(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ParamName(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cSigmoidShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ShapeFunctionType"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTrapezoidShapeFunction.Shape(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Shape(System.Int32)"/>
 <summary>
 Returns the points for a trapezoid shape.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTrapezoidShapeFunction.Defaults">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Defaults"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTrapezoidShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTrapezoidShapeFunction.IsDistribution">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.IsDistribution"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTrapezoidShapeFunction.LeftBottom">
 -----------------------------------------------------------------------
 <summary>
 Get/set parameter 1.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTrapezoidShapeFunction.LeftTop">
 -----------------------------------------------------------------------
 <summary>
 Get/set parameter 2.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTrapezoidShapeFunction.RightTop">
 -----------------------------------------------------------------------
 <summary>
 Get/set parameter 3.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTrapezoidShapeFunction.RightBottom">
 -----------------------------------------------------------------------
 <summary>
 Get/set parameter 4.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTrapezoidShapeFunction.ParamName(System.Int32)">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ParamName(System.Int32)"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTrapezoidShapeFunction.nParameters">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.nParameters"/>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTrapezoidShapeFunction.ShapeFunctionType">
 -----------------------------------------------------------------------
 <inheritdocs cref="P:EwECore.cShapeFunction.ShapeFunctionType"/>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTrapezoidShapeFunction.Apply(System.Object)">
 -----------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.cShapeFunction.Apply(System.Object)"/>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cFleetTimeSeries">
 -----------------------------------------------------------------------
 <summary>
 Data for one time series contained in an Ecosim scenario.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cFleetTimeSeries.#ctor(EwECore.cCore,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cFleetTimeSeries.FleetIndex">
 -----------------------------------------------------------------------
 <summary>
 Get/set the index of the fleet this time series applies to.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cFleetTimeSeries.GroupIndex">
 -----------------------------------------------------------------------
 <summary>
 Get/set the group index that a time series applies to. Group targets apply 
 to fleet x group time series such as <see cref="F:EwECore.eTimeSeriesType.DiscardMortality"/>
 and <see cref="F:EwECore.eTimeSeriesType.DiscardProportion"/>. 
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cGroupTimeSeries">
 -----------------------------------------------------------------------
 <summary>
 Data for one time series contained in an Ecosim scenario.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cGroupTimeSeries.#ctor(EwECore.cCore,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cGroupTimeSeries.GroupIndex">
 -----------------------------------------------------------------------
 <summary>
 Get/set the index of the Group this time series applies to.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cTimeSeries">
 ---------------------------------------------------------------------------
 <summary>
 Data for one time series contained in an Ecosim scenario.
 </summary>
 <remarks>
 This class is implemented as a <see cref="T:EwECore.cShapeData">cShapeData</see>.
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cTimeSeries.m_timeSeriesType">
 <summary>The <see cref="T:EwECore.eTimeSeriesType">type</see> of a time series.</summary>
</member>
<member name="F:EwECore.cTimeSeries.m_bEnabled">
 <summary>Applied flag</summary>
</member>
<member name="F:EwECore.cTimeSeries.m_core">
 <summary>The core a TS belongs to.</summary>
</member>
<member name="M:EwECore.cTimeSeries.#ctor(EwECore.cCore@,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Constructor
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.TimeSeriesType">
 -----------------------------------------------------------------------
 <summary>
 Get/set the <see cref="T:EwECore.eTimeSeriesType">type</see> of a time series.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.CV">
 -----------------------------------------------------------------------
 <summary>
 Get/set the Covariance for a time series.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.WtType">
 -----------------------------------------------------------------------
 <summary>
 Get/set the weight of a time series.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.DatPool">
 -----------------------------------------------------------------------
 <summary>
 Get/set the index of the target that a time series applies to. The
 type of the target is implied by the <see cref="P:EwECore.cTimeSeries.TimeSeriesType">type</see>
 of the time series.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.DatPoolSec">
 -----------------------------------------------------------------------
 <summary>
 Get/set the index of the secundary target that a time series applies to. The
 type of the target is implied by the <see cref="P:EwECore.cTimeSeries.TimeSeriesType">type</see>
 of the time series.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.DatVal(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get/set the annual values for a time series.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.Enabled">
 -----------------------------------------------------------------------
 <summary>
 Get/set the apply flag on the Time Series. Call <see cref="M:EwECore.cCore.UpdateTimeSeries(System.Boolean)">cCore.UpdateTimeSeries</see>
 to enable all flagged time series to the Ecosim model.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.DataSS">
 -----------------------------------------------------------------------
 <summary>
 Weighted Sum of squares for the fit of a data set to the predicted value SSPredErr
 </summary>
 <remarks>
 sumof(log(observed(i)/predicted(i))^2) * [timeseries weight(i)].
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.DataQ">
 -----------------------------------------------------------------------
 <summary>
 Average zstat sumof(Log(observed/predicted))/nobs Datq
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.eDataQ">
 -----------------------------------------------------------------------
 <summary>
 exp(DataQ) average prediction error
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeries.Update">
 -----------------------------------------------------------------------
 <summary>
 Helper method, call this to inform the EwE core that a Time Series has changed.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeries.IsReference">
 -----------------------------------------------------------------------
 <summary>
 Helper method, states whether a time series is a reference series.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.ValidationStatus">
 -----------------------------------------------------------------------
 <summary>
 Get/set whether a time series can be used.
 </summary>
 <returns>A <see cref="T:EwEUtils.Core.eStatusFlags"/> stating whether the time series
 can be used.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.ValidationMessage">
 -----------------------------------------------------------------------
 <summary>
 Get/set a textual message explaining the time series <see cref="P:EwECore.cTimeSeries.ValidationStatus"/>
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeries.Interval">
 -----------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwECore.eTSDataSetInterval">interval</see> for the time series.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cTimeSeriesDataset">
 ---------------------------------------------------------------------------
 <summary>
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesDataset.ResetStatusFlags(System.Boolean)">
 -----------------------------------------------------------------------
 <summary>
 All variables non-editable (for now, 11feb08)
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesDataset.nTimeSeries">
 -----------------------------------------------------------------------
 <summary>
 Returns the number of time series in a dataaset, as obtained from the datasource.
 </summary>
 <remarks>
 <para>This value is read from the database and provides an estimate of the number of
 time series for this dataset PRIOR TO when the time series are loaded.</para>
 <para>As soon as the dataset is loaded, the method will give the actual number of 
 time series loaded in the core.</para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesDataset.FirstYear">
 -----------------------------------------------------------------------
 <summary>
 Returns the first year in the time series dataset.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesDataset.NumPoints">
 -----------------------------------------------------------------------
 <summary>
 Returns the number of points in the time series dataset. Data points may
 be spaced <see cref="F:EwECore.eTSDataSetInterval.Annual">annually</see> or is given for each
 <see cref="F:EwECore.eTSDataSetInterval.TimeStep">time step</see>. The size of the 
 interval can be checked via <see cref="P:EwECore.cTimeSeriesDataset.TimeSeriesInterval"/>.
 <seealso cref="P:EwECore.cTimeSeriesDataset.TimeSeriesInterval"/>
 <seealso cref="T:EwECore.eTSDataSetInterval"/>
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesDataset.TimeSeries(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Get a time series from the dataset.
 </summary>
 <param name="iSeries">One-based index of the time series to retrieve.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesDataset.Update">
 -----------------------------------------------------------------------
 <summary>
 Update all time series in the dataset
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesDataset.IsEnabled">
 -----------------------------------------------------------------------
 <summary>
 
 </summary>
 <returns>
 <para>Return values are:</para>
 <list>
 <item><term>True</term><description>All of the time series in the Dataset are applied</description></item>
 <item><term>False</term><description>None of the time series in the Dataset are applied</description></item>
 <item><term>UseDefault</term><description>Some of the time series in the Dataset are applied</description></item>
 </list>
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesDataset.IsLoaded">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the dataset is currently loaded.
 </summary>
 <returns>True if the dataset is currently loaded.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cTimeSeriesDataStructures">
 <summary>
 Class that holds and manages all time series-related data in the EwE core.
 </summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.nDatasets">
 <summary>Number of available datasets.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.DatasetDBID">
 <summary>Dataset database IDs</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.DatasetName">
 <summary>Names of available datasets.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.DatasetAuthor">
 <summary>Authors of available datasets.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.DatasetDescription">
 <summary>Descriptions of available datasets.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.DatasetNumTimeSeries">
 <summary>Number of time series contained in each dataset.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.DatasetNumPoints">
 <summary>The number of data points in the dataset.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.nTimeSeries">
 <summary>Number of time series in the model.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.nMaxYears">
 <summary>Maximum number of years across all time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesDBID">
 <summary>Database ID for each time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesName">
 <summary>Name of each time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesEnabled">
 <summary>Array of flags indicating which a time series must be applied.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesType">
 <summary>Type of each time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesPool">
 <summary>Index of the core object that each time series links to. The type
 of the core object is implied by <see cref="F:EwECore.cTimeSeriesDataStructures.TimeSeriesType">TimeSeriesType</see>.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesPoolSec">
 <summary>Index of the core object of a secundary time series target, if applicable. The type
 of the core object is implied by <see cref="F:EwECore.cTimeSeriesDataStructures.TimeSeriesType">TimeSeriesType</see>.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesWeight">
 <summary>Weight type for each time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesCV">
 <summary>CV for each time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesValues">
 <summary>Time values for each time series, indexed as (iTime, iSeries).</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.TimeSeriesSSPredErr">
 <summary>Weighted Sum of Squared Prediction Error by time series data set sumof(log(observed(i)/predicted(i))^2) * [timeseries weight(i)].</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedNdatType">
 <summary>Number of applied time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedDatPoints">
 <summary>Number of datum points across all applied time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedDatType">
 <summary><see cref="T:EwECore.eTimeSeriesType">Type</see> of each applied time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedDatPool">
 <summary>Index of the core object that each applied time series links to. The type
 of the core object is implied by <see cref="F:EwECore.cTimeSeriesDataStructures.AppliedDatType">DatType</see>.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedDatPoolSec">
 <summary>Index of the second core object that each applied time series links to. The type
 of the core object is implied by <see cref="F:EwECore.cTimeSeriesDataStructures.AppliedDatType">DatType</see>.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedWtType">
 <summary>Weight type for each applied time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedDatYear">
 <summary>Year of the datum point.</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedDatSS">
 <summary>Sum of squares contribution (x time series)</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedDataSetInterval">
 <summary>Time interval of the currently selected dataset (monthly or annual).</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedSSPredErr">
 <summary>Sum of Squared Prediction Error by time series data set sumof(log(observed(i)/predicted(i))^2) * [timeseries weight(i)].</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.AppliedDatQ">
 <summary>mean(sumof(log(observed/predicted))) by data type</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceZ">
 <summary>Forced fishing mortalities. By Group,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceCatch">
 <summary>Forced catch. By Group,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceDiscardProp">
 <summary>Proportion of total catch that is discarded. By Fleet,Group,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceDiscardMort">
 <summary>Proportion of discards that incur mortality. By Fleet,Group,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceCatchabilities">
 <summary>Catchabilities. By Fleet,Group,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceOffVesselPriceAbs">
 <summary>Ecopath off-vessel price. By Fleet,Group,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceOffVesselPriceRel">
 <summary>Ecopath off-vessel price multiplier. By Fleet,Group,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceEffortCostAbs">
 <summary>Ecopath CUPE cost multiplier. By Fleet,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceEffortCostRel">
 <summary>Ecopath CUPE cost multiplier. By Fleet,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceSailCostRel">
 <summary>Ecopath sail cost multiplier. By Fleet,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceSailCostAbs">
 <summary>Ecopath sail cost (abs). By Fleet,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceFixedCostAbs">
 <summary>Ecopath Fixed cost (abs). By Fleet,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.PoolForceFixedCostRel">
 <summary>Ecopath Fixed cost multiplier. By Fleet,Time</summary>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.Iobs">
 <summary>
 Index to the current year/datatype
 </summary>
 <remarks>This is increment for each data type each time the stats are collected. Once a year.</remarks>
</member>
<member name="F:EwECore.cTimeSeriesDataStructures.Erpred">
 <summary>log(observed/predicted) by observation</summary>
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.Clear">
 <summary>
 Clear all time series data and free memory
 </summary>
</member>
<member name="P:EwECore.cTimeSeriesDataStructures.nYears">
 <summary>
 Number of years in the reference data set
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.HasData(System.Int32,System.Int32,System.Int32)">
 <summary>
 Is there reference data for this model timestep
 </summary>
 <param name="iCumTimeStep"></param>
 <param name="iMonth"></param>
 <param name="iYear"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.setRefDataIndex(System.Int32@,System.Int32,System.Int32,System.Int32)">
 <summary>
 Get the reference data timestep index for this model timestep
 </summary>
 <param name="iIndexToSet"> Index of the data in DatVal(,)</param>
 <param name="iCumTimeStep">Model cumulative timestep 1 - n timestep</param>
 <param name="iMonth">Model month 1 - 12</param>
 <param name="iYear">Model year 1 - n years</param>
 <returns>True if there is reference data for this model timestep</returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.SetBiomassForcing(System.Boolean[])">
 <summary>
 Set whether a given group is biomass forced through time series.
 </summary>
 <param name="IsBiomassForced"></param>
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.SetDiscardForcing(System.Boolean[])">
 <summary>
 Set whether a given group is discard forced through time series.
 </summary>
 <param name="IsDiscardForced"></param>
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.redimForcingData(System.Int32)">
 <summary>
 Redim time series forcing data PoolForceBB(nGroups, nYears),PoolForceZ(nGroups, nYears) and PoolForceCatch(nGroups, nYears)
 </summary>
 <param name="RunLengthYears">Ecosim run length in years</param>
 <remarks></remarks>
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.loadEnabled(System.Int32)">
 <summary>
 Apply all flagged time series to the Ecosim model.
 </summary>
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.UseForAIC(EwECore.eTimeSeriesType)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether a <see cref="T:EwECore.eTimeSeriesType">timeseries type</see>
 contributes to AIC calculations.
 </summary>
 <param name="TimeSeriesType"></param>
 <returns>True if a timeseries type contributes to AIC Calculations</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.DoDatValCalculations">
 <summary>
 Load data from datval() into forcing arrays used by the models. Calculate the 
 </summary>
 <remarks>This needs to be called after the time series data is loaded to update other data arrays.</remarks>
</member>
<member name="M:EwECore.cTimeSeriesDataStructures.DataLoadedForTypeGroup(EwECore.eTimeSeriesType,System.Int32)">
 <summary>
 Is there a timeseries of a data type loaded for a group/fleet
 </summary>
 <param name="TSDataType">Type of data to test for</param>
 <param name="iGroupIndex">Index of Group or Fleet</param>
 <returns>True if there is data loaded for this datatype, group</returns>
</member>
<member name="T:EwECore.cTimeSeriesFactory">
 ---------------------------------------------------------------------------
 <summary>
 The one access point in EwE to create <see cref="T:EwECore.cTimeSeries">cTimeSeries</see>
 -derived objects, and to translate between time series <see cref="T:EwECore.eTimeSeriesType">types</see>
 and <see cref="T:EwECore.eTimeSeriesCategoryType">categories</see>.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesFactory.TimeSeriesCategory(EwECore.eTimeSeriesType)">
 -----------------------------------------------------------------------
 <summary>
 Determine the <see cref="T:EwECore.eTimeSeriesCategoryType">Time series category</see>
 based on a <see cref="T:EwECore.eTimeSeriesType">Time series type</see>. For instance,
 time series types <see cref="F:EwECore.eTimeSeriesType.Catches"/>
 and <see cref="F:EwECore.eTimeSeriesType.FishingEffort"/>
 are <see cref="F:EwECore.eTimeSeriesCategoryType.Fleet"/>-related time series. With the
 Discardless changes time series category <see cref="F:EwECore.eTimeSeriesCategoryType.FleetGroup"/>
 was introduced.
 </summary>
 <param name="timeSeriesType">The type to get the category for.</param>
 <remarks>
 This method was added to centralize interpretation of the awkward enumerator 
 <see cref="T:EwECore.eTimeSeriesType">eTimeSeriesType</see>.
 </remarks>
 <returns>
 A time series category for the provided time series type.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesFactory.CreateTimeSeries(EwECore.eTimeSeriesType,EwECore.cCore,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Factory method; the only location in EwE where actual <see cref="T:EwECore.cTimeSeries">cTimeSeries-derived</see>
 objects are created.
 </summary>
 <param name="timeSeriesType">The <see cref="T:EwECore.eTimeSeriesType">type</see> of
 the time series.</param>
 <returns>A Time Series instance, or nothing if an error occurred.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesFactory.CompatibleTypes(EwECore.eTimeSeriesType)">
 -----------------------------------------------------------------------
 <summary>
 Returns all <see cref="T:EwECore.eTimeSeriesType"/> of the same <see cref="T:EwECore.eTimeSeriesCategoryType">category</see>
 as the provided <paramref name="type"/>.
 </summary>
 <param name="type">The <see cref="T:EwECore.eTimeSeriesType">type</see> to find others for.</param>
 <returns>Well...</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesFactory.CompatibleTypes(EwECore.eTimeSeriesCategoryType)">
 -----------------------------------------------------------------------
 <summary>
 Returns all <see cref="T:EwECore.eTimeSeriesType"/> within a give <see cref="T:EwECore.eTimeSeriesCategoryType">category</see>.
 </summary>
 <param name="cat">The <see cref="T:EwECore.eTimeSeriesCategoryType">category</see> to find others for.</param>
 <returns>Well...</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cTimeSeriesImport">
 ---------------------------------------------------------------------------
 <summary>
 TimeSeries import class
 </summary>
 <remarks>
 This reminds me so much about programming COBOL that I'm downright terrified...
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesImport.#ctor(System.Int32,EwECore.eTimeSeriesType)">
 -----------------------------------------------------------------------
 <summary>
 Constructor
 </summary>
 <param name="iNumYears">Number of years in this time series.</param>
 <param name="timeSeriesType"><see cref="T:EwECore.eTimeSeriesType">Type</see> of this time series.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesImport.Update">
 -----------------------------------------------------------------------
 <summary>
 Overridden to prevent this type of time series to interact with the 
 EwE core.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cTimeSeriesReaderFactory">
 ---------------------------------------------------------------------------
 <summary>
 Helper class; creates a <see cref="T:EwECore.cTimeSeriesTextReader">Time series reader</see>
 for a given <see cref="T:EwECore.cTimeSeriesReaderFactory.eTimeSeriesReaderTypes">type of Time series input source</see>.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cTimeSeriesReaderFactory.eTimeSeriesReaderTypes">
 -----------------------------------------------------------------------
 <summary>
 Enumerated type stating all supported time series input formats.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cTimeSeriesReaderFactory.eTimeSeriesReaderTypes.CSV">
 <summary>Indicates a reader that can read Time Series data from a comma-separated file.</summary>
</member>
<member name="F:EwECore.cTimeSeriesReaderFactory.eTimeSeriesReaderTypes.Clipboard">
 <summary>Indicates a reader that can read Time Series data from the clipboard.</summary>
</member>
<member name="M:EwECore.cTimeSeriesReaderFactory.GetTimeSeriesReader(EwECore.cCore,EwECore.cTimeSeriesReaderFactory.eTimeSeriesReaderTypes)">
 -----------------------------------------------------------------------
 <summary>
 Return a <see cref="T:EwECore.cTimeSeriesTextReader">Time series text reader</see>
 for a given <see cref="T:EwECore.cTimeSeriesReaderFactory.eTimeSeriesReaderTypes">type of Time series input source</see>.
 </summary>
 <param name="core">The <see cref="T:EwECore.cCore">Core</see> instance to obtain the reader for.</param>
 <param name="readerType">The <see cref="T:EwECore.cTimeSeriesReaderFactory.eTimeSeriesReaderTypes">type of Time series input source</see>
 to rad from.</param>
 <returns>
 A <see cref="T:EwECore.cTimeSeriesTextReader">Time series text reader</see> if successful, 
 or Nothing/Null/Nada/Zip if an error occurred.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cTimeSeriesTextReader">
 ---------------------------------------------------------------------------
 <summary>
 Reads one or more time series from a text input source.
 </summary>
 <remarks>
 Time series text input format is hopefully described in the latest manual.
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cTimeSeriesTextReader.m_iFirstYear">
 <summary>Start year of the time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesTextReader.m_iNumPoints">
 <summary>Number of years in the time series.</summary>
</member>
<member name="F:EwECore.cTimeSeriesTextReader.m_ts">
 <summary>Internal list of read time series objects.</summary>
</member>
<member name="F:EwECore.cTimeSeriesTextReader.m_tsPreview">
 <summary>A <see cref="T:EwECore.cTimeSeriesTextReader.cPreview">preview</see> how the reader has interpreted the text source, allowing a user interface to tune the read process.</summary>
</member>
<member name="F:EwECore.cTimeSeriesTextReader.m_strDelimiter">
 <summary>String delimiting character to use when splitting the text into different columns.</summary>
</member>
<member name="F:EwECore.cTimeSeriesTextReader.m_strDecimalSeparator">
 <summary>Decimal separator to use when interpreting floating point values in the text.</summary>
</member>
<member name="F:EwECore.cTimeSeriesTextReader.m_interval">
 <summary>Dat apoint interval.</summary>
</member>
<member name="T:EwECore.cTimeSeriesTextReader.cPreview">
 -----------------------------------------------------------------------
 <summary>
 Helper class; showing how a <see cref="T:EwECore.cTimeSeriesTextReader">cTimeSeriesTextReader</see>
 has interpreted the incoming time series data. The preview allows a user interface to
 interactively adjust the reader to correctly import time series.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cTimeSeriesTextReader.cPreview.m_iColumnCount">
 <summary>Number of columns encountered in the external time series text.</summary>
 <remarks>Note that this number does not per definition denote the number of time series in the external text!</remarks>
</member>
<member name="F:EwECore.cTimeSeriesTextReader.cPreview.m_rows">
 <summary>Original lines of text encountered in the time series text.</summary>
</member>
<member name="F:EwECore.cTimeSeriesTextReader.cPreview.m_rowvalues">
 <summary>Lines of text from the time series text, split by delimiter.</summary>
</member>
<member name="F:EwECore.cTimeSeriesTextReader.cPreview.m_rowerrors">
 <summary>Errors encountered for each line of text.</summary>
</member>
<member name="M:EwECore.cTimeSeriesTextReader.cPreview.#ctor(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 <param name="iColumnCount">The number of columns found in the time series text.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.cPreview.AddRow(System.String,System.String[])">
 -----------------------------------------------------------------------
 <summary>
 Add a row to the preview.
 </summary>
 <param name="strLine">The original line of text, as read from the time series text.</param>
 <param name="astrValues">The line of text, as split by the requested delimiter.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.cPreview.RowCount">
 -----------------------------------------------------------------------
 <summary>
 Returns the number of rows in the preview.
 </summary>
 <returns>The number of rows in the preview</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.cPreview.ColumnCount">
 -----------------------------------------------------------------------
 <summary>
 Returns the number of columns in the preview.
 </summary>
 <returns>The number of columns in the preview</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.cPreview.Row(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns an original line of text.
 </summary>
 <param name="iRow">The row number to obtain the text for. Note that this
 value is 1-based.</param>
 <returns>An original row of text, as read from the time series text.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesTextReader.cPreview.RowError(System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns an error for a line from the time series text.
 </summary>
 <param name="iRow">The row number to obtain the error text for. Note that this
 value is 1-based.</param>
 <value></value>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesTextReader.cPreview.Value(System.Int32,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Returns a (col, row) value as distilled from the time series text.
 </summary>
 <param name="iColumn">The column number to obtain the error text for. Note that this
 value is 1-based.</param>
 <param name="iRow">The row number to obtain the error text for. Note that this
 value is 1-based.</param>
 <returns>A (col, row) value as distilled from the time series text.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.#ctor(EwECore.cCore)">
 -----------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 <param name="core">A reference to the <see cref="T:EwECore.cCore">Core</see> that
 this reader belongs to.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.Read(System.String,System.String,EwECore.eTSDataSetInterval)">
 -----------------------------------------------------------------------
 <summary>
 Reads any number of Time Series data from a text source. The
 Time Series are exposed by this collection as <see cref="T:EwECore.cTimeSeries">cTimeSeries</see>
 objects.
 </summary>
 <param name="strDelimiter">
 String delimiting character to use when splitting the text into different columns.
 </param>
 <param name="strDecimalSeparator">
 Decimal separator to use when interpreting floating point values in the text.
 </param>
 <returns>True when successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.GetReader">
 -----------------------------------------------------------------------
 <summary>
 The one entry point to access the source text reader. Override this method 
 to implement a connection to the appropriate text source. Note that the
 reader obtained via this method should be released by overriding
 <see cref="M:EwECore.cTimeSeriesTextReader.ReleaseReader(System.IO.TextReader)">ReleaseReader</see>.
 </summary>
 <returns>A TextReader if the connection could be made, or
 Nothing if an error occurred.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.ReleaseReader(System.IO.TextReader)">
 -----------------------------------------------------------------------
 <summary>
 The one entry point to release a text reader obtained via
 <see cref="M:EwECore.cTimeSeriesTextReader.GetReader">GetReader</see>.
 </summary>
 <returns>A TextReader if the connection could be made, or
 Nothing if an error occurred.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.Reset">
 -----------------------------------------------------------------------
 <summary>
 Reset the reader.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.AnalyzeData">
 -----------------------------------------------------------------------
 <summary>
 Analyze the data
 </summary>
 <returns>True if valid</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.ReadTimeSeriesFromText">
 -----------------------------------------------------------------------
 <summary>
 Reads time series in local collection of cTimeSeries objects.
 </summary>
 <returns>True if successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.ValidateLine(System.Int32,System.String[])">
 -----------------------------------------------------------------------
 <summary>
 Validates the number of columns encountered in a line of text.
 </summary>
 <param name="iNumCols">The number of columns that is expected.</param>
 <param name="astrCols">The columns in the line of text.</param>
 <returns>True if the number of columns validated succesfully.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.ReadLine(System.IO.TextReader,System.Int32@)">
 -----------------------------------------------------------------------
 <summary>
 Reads a line of text from the time series data.
 </summary>
 <param name="tr">The reader to read from.</param>
 <param name="iLineNumber">The line number that is being read. This number
 is be incremented when a line of text is read succesfully.</param>
 <returns>True when a line of text is read succesfully</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.SplitLine(System.String)">
 -----------------------------------------------------------------------
 <summary>
 Helper method, splits a line of text by the current <see cref="M:EwECore.cTimeSeriesTextReader.Delimiter">Delimiter</see>.
 </summary>
 <param name="strLine">The line to split.</param>
 <returns>An array of strings.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.ReportError(System.String,System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Helper method; adds an error message to the data preview for a given line.
 If the line is not specified the error message is directly sent to the EwE system.
 </summary>
 <param name="strError">Error text to report.</param>
 <param name="iLineNumber">Text line that this error occurred at, or
 <see cref="F:EwECore.cCore.NULL_VALUE">cCore.NULL_VALUE</see> if the line number
 is irrelevant.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.ToTimeSeriesType(System.String)">
 -----------------------------------------------------------------------
 <summary>
 Convert a time series type string to a time series enumerated type.
 </summary>
 <param name="strTimeSeries"></param>
 <returns>
 A time series type value, or <see cref="F:EwECore.eTimeSeriesType.NotSet">NotSet</see>
 if the conversion failed.
 </returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.Add(EwECore.cTimeSeriesImport)">
 -----------------------------------------------------------------------
 <summary>
 Add an item to the collection.
 </summary>
 <remarks>
 This collection is read-only, only to be manipulated through the <see cref="M:EwECore.cTimeSeriesTextReader.Read(System.String,System.String,EwECore.eTSDataSetInterval)">Read</see> interface.
 </remarks>
 <param name="item">Item NOT to add :P</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.Clear">
 -----------------------------------------------------------------------
 <summary>
 Clears the collection.
 </summary>
 <remarks>
 This collection is read-only, only to be manipulated through the <see cref="M:EwECore.cTimeSeriesTextReader.Read(System.String,System.String,EwECore.eTSDataSetInterval)">Read</see> interface.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.Contains(EwECore.cTimeSeriesImport)">
 -----------------------------------------------------------------------
 <summary>
 Returns whether the collection contains a given item.
 </summary>
 <param name="item">The Item to locate in the collection</param>
 <returns>True if the item was found.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.CopyTo(EwECore.cTimeSeriesImport[],System.Int32)">
 -----------------------------------------------------------------------
 <summary>
 Copies the collection to a strong-typed array of <see cref="T:EwECore.cTimeSeries">cTimeSeries</see> objects.
 </summary>
 <param name="array">The array to copy to.</param>
 <param name="arrayIndex">The index to start the copy process at.</param>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesTextReader.Count">
 -----------------------------------------------------------------------
 <summary>
 Returns the number of items in the collection.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesTextReader.IsReadOnly">
 -----------------------------------------------------------------------
 <summary>
 States whether the collection is read-only.
 </summary>
 <returns>Always true.</returns>
 <remarks>
 This collection is always read-only, only to be manipulated through the <see cref="M:EwECore.cTimeSeriesTextReader.Read(System.String,System.String,EwECore.eTSDataSetInterval)">Read</see> interface.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.Remove(EwECore.cTimeSeriesImport)">
 -----------------------------------------------------------------------
 <summary>
 Removes an item to the collection.
 </summary>
 <remarks>
 This collection is read-only, only to be manipulated through the <see cref="M:EwECore.cTimeSeriesTextReader.Read(System.String,System.String,EwECore.eTSDataSetInterval)">Read</see> interface.
 </remarks>
 <param name="item">Item NOT to remove.</param>
 <returns>Always false.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.GetEnumerator">
 -----------------------------------------------------------------------
 <summary>
 Returns a strong-typed enumerator for this collection.
 </summary>
 <returns>A strong-typed enumerator for this collection.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.GetEnumeratorObligatoryOverrideWhichWeDoNotNeedAtAllThankYou">
 -----------------------------------------------------------------------
 <summary>
 Returns a weak-typed enumerator for this collection.
 </summary>
 <remarks>This obligatory override is silly, obsolete and therefore hidden from view.</remarks>
 <returns>A weak-typed enumerator for this collection.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.Preview">
 -----------------------------------------------------------------------
 <summary>
 Returns a double indexed array of strings with a preview of read time
 series data. Data is indexed by (column, row). Indexes are zero based.
 </summary>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.Delimiter">
 -----------------------------------------------------------------------
 <summary>
 Returns the delimiter used by the reader.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesTextReader.DecimalSeparator">
 -----------------------------------------------------------------------
 <summary>
 Returns the decimal separator used by the reader.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesTextReader.FirstYear">
 -----------------------------------------------------------------------
 <summary>
 Returns the first year of time series data found by the reader.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesTextReader.NumPoints">
 -----------------------------------------------------------------------
 <summary>
 Returns the number of years of time series data found by the reader.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesTextReader.NumYears">
 -----------------------------------------------------------------------
 <summary>
 Returns the number of years of time series data found by the reader.
 </summary>
 <remarks>
 This method has been deprecated in favour of <see cref="P:EwECore.cTimeSeriesTextReader.NumPoints"/>.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cTimeSeriesCSVReader">
 ---------------------------------------------------------------------------
 <summary>
 Reads one or more time series from a CSV file.
 </summary>
 <remarks>
 For a description of the CSV file layout, refer to 
 <see cref="T:EwECore.cTimeSeriesTextReader">cTimeSeriesTextReader</see>.
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cTimeSeriesCSVReader.m_strFileName">
 <summary>Path to the CSV file that was read.</summary>
</member>
<member name="M:EwECore.cTimeSeriesCSVReader.#ctor(EwECore.cCore)">
 -----------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 <param name="core">A reference to the <see cref="T:EwECore.cCore">Core</see> that
 this reader belongs to.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesCSVReader.Read(System.String,System.String,System.String,EwECore.eTSDataSetInterval)">
 -----------------------------------------------------------------------
 <summary>
 Reads any number of Time Series data from a text source. The
 Time Series are exposed by this collection as <see cref="T:EwECore.cTimeSeries">cTimeSeries</see>
 objects.
 </summary>
 <param name="strFileName">Path to the CSV file to read.</param>
 <param name="strDelimiter">
 String delimiting character to use when splitting the text into different columns.
 </param>
 <param name="strDecimalSeparator">
 Decimal separator to use when interpreting floating point values in the text.
 </param>
 <returns>True when successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesCSVReader.GetReader">
 -----------------------------------------------------------------------
 <summary>
 Access the content of the CSV file via a <see cref="T:System.IO.TextReader">TextReader</see>.
 </summary>
 <returns>A TextReader connected to the CSV file.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesCSVReader.ReleaseReader(System.IO.TextReader)">
 -----------------------------------------------------------------------
 <summary>
 The one entry point to release a text reader obtained via
 <see cref="M:EwECore.cTimeSeriesCSVReader.GetReader">GetReader</see>.
 </summary>
 <returns>A TextReader if the connection could be made, or
 Nothing if an error occurred.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTimeSeriesCSVReader.Dataset">
 -----------------------------------------------------------------------
 <summary>
 Get a description of the CSV file.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.cTimeSeriesCSVWriter">
 ---------------------------------------------------------------------------
 <summary>
 Write a time series dataset to a text output source.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="F:EwECore.cTimeSeriesCSVWriter.m_core">
 <summary>The core to read from.</summary>
</member>
<member name="M:EwECore.cTimeSeriesCSVWriter.#ctor(EwECore.cCore)">
 -----------------------------------------------------------------------
 <summary>
 Constructor, initializes a new instance of this class.
 </summary>
 <param name="core">A reference to the <see cref="T:EwECore.cCore">Core</see> that
 this reader belongs to.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesCSVWriter.Write(System.String,System.String,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Writes the current loaded time series dataset to a CSV file.
 </summary>
 <param name="strFileName">Name of the file to save to.</param>
 <param name="strDelimiter">String delimiting character to use when 
 separating the text into different columns.</param>
 <param name="strDecimalSeparator">Decimal separator to use when 
 interpreting floating point values in the text.</param>
 <returns>True when successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTimeSeriesCSVWriter.WriteTemplate(System.String,System.String,System.String)">
 -----------------------------------------------------------------------
 <summary>
 Writes the current loaded time series dataset to a CSV file. If there is
 no time series loaded, this will write a dummy file with example content.
 </summary>
 <param name="strFileName">Name of the file to save to.</param>
 <returns>True when successful.</returns>
 -----------------------------------------------------------------------
</member>
<member name="T:EwECore.Shapes.Utility.cShapeImportData">
 -----------------------------------------------------------------------
 <summary>
 Data for <see cref="T:EwECore.Shapes.Utility.cShapeImporter">importing shapes</see>.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.Shapes.Utility.cShapeImportData.Delimiter">
 -------------------------------------------------------------------
 <summary>
 Get/set the CSV text separator character to use when importing.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.Shapes.Utility.cShapeImportData.DecimalSeparator">
 -------------------------------------------------------------------
 <summary>
 Get/set the decimal separator character character to use when importing.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Shapes.Utility.cShapeImportData.Clear">
 -------------------------------------------------------------------
 <summary>
 Clear the shape import data.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Shapes.Utility.cShapeImportData.Read(System.IO.TextReader)">
 -------------------------------------------------------------------
 <summary>
 Read the shape import text.
 </summary>
 <param name="text">The text to read.</param>
 <returns>True if successful.</returns>
 <remarks>
 <para>The CSV separated text must follow a strict layout:</para>
 <code>
 ShapeName,ShapeType,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5
 {text},{number},{value},{value},{value},{value},{value} 
 </code>
 <para>The header line must be present but is not parsed (yet).</para>
 <para>The shape type value must match one of the pre-defined <see cref="T:EwEUtils.Core.eShapeFunctionType"/>
 values, or a numerical value that matches a <see cref="P:EwEUtils.Core.IShapeFunction.ShapeFunctionType"/>
 value delivered plug-ins that offer extra shape functions.</para>
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Shapes.Utility.cShapeImportData.FunctionDefinitions(EwEUtils.Core.eDataTypes)">
 -------------------------------------------------------------------
 <summary>
 Returns all the <see cref="T:EwECore.Shapes.Utility.cShapeImportData.cFunctionDefinition">function definitions</see>
 read from the import text via <seealso cref="M:EwECore.Shapes.Utility.cShapeImportData.Read(System.IO.TextReader)"/>, and that are
 <see cref="M:EwEUtils.Core.IShapeFunction.IsCompatible(EwEUtils.Core.eDataTypes)">compatible</see> with the 
 provided <paramref name="dt">data type</paramref>
 </summary>
 <returns>An array of <see cref="T:EwECore.Shapes.Utility.cShapeImportData.cFunctionDefinition">function definitions</see>.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.Shapes.Utility.cShapeImportData.ShapeFunctions">
 -------------------------------------------------------------------
 <summary>
 Returns all avaliable <see cref="T:EwEUtils.Core.IShapeFunction">shape functions</see>, provuded
 by the EwE core and plug-ins.
 </summary>
 <returns>All avaliable <see cref="T:EwEUtils.Core.IShapeFunction">shape functions</see>.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Shapes.Utility.cShapeImporter">
 -----------------------------------------------------------------------
 <summary>
 Importer to create new shapes from text.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.Shapes.Utility.cShapeImporter.Import(EwECore.cBaseShapeManager,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Perform the actual import.
 </summary>
 <param name="man"></param>
 <param name="nPoints"></param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cAdvectionAdapter">
 =======================================================================
 <summary>
 Adapter to populate the Advection core layer (not the monthly maps!)
 Note that this adapter disables the use of monthly advection files when
 external data is connected!
 </summary>
 <remarks>
 A scalar is needed to have the ability to reverse or scale advection 
 vectors.
 </remarks>
 =======================================================================
</member>
<member name="M:EwECore.SpatialData.cAdvectionAdapter.Initialize">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.Initialize"/>.
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cAdvectionAdapter.CanCalculateScalar">
 -------------------------------------------------------------------
 <summary>
 States that this adapter cannot scale to a base value, as there is
 no base velocity to scale to.
 </summary>
 <returns></returns>
 <seealso cref="M:EwECore.SpatialData.cSpatialScalarDataAdapterBase.CalculateScalar(System.Double,System.Double)" />
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cAdvectionAdapter.InitRun">
 -------------------------------------------------------------------
 <summary>
 Initialize the run, overridden to disable some core logic if 
 advection is connected to external data.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cAdvectionAdapter.EndRun">
 -------------------------------------------------------------------
 <summary>
 End the run, overridden to restore some core logic if 
 advection is connected to external data.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cBiomassForcingAdapter">
 -----------------------------------------------------------------------
 <summary>
 Data Adapter specific to Biomass forcing.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cBiomassForcingAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)"/>.
 <remarks>Overridden to scale values prior to being set in the 
 Ecospace data structures.</remarks>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cBiomassRelativeAdapter">
 -----------------------------------------------------------------------
 <summary>
 Data Adapter specific to Biomass forcing.
 </summary>
 <remarks>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.SpatialData.cBiomassRelativeAdapter.m_baseLayers">
 <summary>Ragged array used to store the base map by Layer</summary>
</member>
<member name="F:EwECore.SpatialData.cBiomassRelativeAdapter.m_IsBaseInitialized">
 <summary>Has the base map for this layer been initialized?</summary>
</member>
<member name="M:EwECore.SpatialData.cBiomassRelativeAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)"/>.
 <remarks>Overridden to scale values prior to being set in the 
 Ecospace data structures.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cBiomassRelativeAdapter.InitializeBaseLayer(System.Int32)">
 <summary>
 Keep a copy of the base map for this layer
 </summary>
 <param name="iLayer"></param>
 <remarks>First Chance initialization. This should only be called once.</remarks>
</member>
<member name="T:EwECore.SpatialData.cCapacityDataAdapter">
 -----------------------------------------------------------------------
 <summary>
 Data Adapter specific to Capacity layers .
 </summary>
 <remarks>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cCapacityDataAdapter.Initialize">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.Initialize"/>.
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cCapacityDataAdapter.Adapt(EwECore.cEcospaceBasemap,EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.DateTime,EwEUtils.SpatialData.ISpatialRaster,System.Double)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.Adapt(EwECore.cEcospaceBasemap,EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.DateTime,EwEUtils.SpatialData.ISpatialRaster,System.Double)"/>
 <remarks>
 Called before data from an external source is copied into <see cref="F:EwECore.cEcospaceDataStructures.RelPP"/>
 EcoSpace uses an internal scaler to scale PP data to Ecopath levels. <see cref="F:EwECore.cEcospaceDataStructures.PPScale"/>
 This is the mean relative PP across all water cells computed from the currently loaded  <see cref="F:EwECore.cEcospaceDataStructures.RelPP"/> array.
 <see cref="M:EwECore.SpatialData.cSpatialScalarDataAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)"/> will scale external data to a the first timestep or a user defined value.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cCapacityDataAdapter.EndRun">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.EndRun"/>
 <summary>
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cForcingAdapterBase">
 <summary>
 Adapter base class for forcing data.
 </summary>
 <remarks>
 Handles base class functionality for forcing data. 
 Restores data to forced state during the timestep so interface displays forced data instead of predicted. 
 The option to display forced of predicted values could be added to the interface.
 Stops data from being overwritten at the end of the run so data for the last run timestep is displayed, instead of overwritten.  
 </remarks>
</member>
<member name="T:EwECore.SpatialData.cForcingAdapterBase.cForcingMapIndexPair">
 <summary>
 Class to buffer forcing data from the last timestep so it can be restored later in the timestep.
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.SpatialData.cForcingAdapterBase.cForcingMapIndexPair.data">
 <summary>
 Forcing data from the last timestep
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.SpatialData.cForcingAdapterBase.cForcingMapIndexPair.iLayerIndex">
 <summary>
 Index of the layer/Group that this data is applied to
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.SpatialData.cForcingAdapterBase.cForcingMapIndexPair.isTimeStepForced">
 <summary>
 Has this timestep been forced
 </summary>
 <remarks></remarks>
</member>
<member name="F:EwECore.SpatialData.cForcingAdapterBase.cForcingMapIndexPair.NULL_CELL">
 <summary>
 Mask of cells that where not forced in the timestep
 </summary>
 <remarks>This could have been done with cCore.NULL_VALUE but this makes debugging easier. You can tell which cells were never set to forcing.</remarks>
</member>
<member name="M:EwECore.SpatialData.cForcingAdapterBase.Initialize">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.Initialize"/>.
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cForcingAdapterBase.Adapt(EwECore.cEcospaceBasemap,EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.DateTime,EwEUtils.SpatialData.ISpatialRaster,System.Double)">
 <summary>
 Intercepts the Adapt functionality to set the isTimeStepForced. 
 This tells the <see cref="M:EwECore.SpatialData.cForcingAdapterBase.RestoreForcing(EwECore.cEcospaceDataStructures)">RestoreForcing</see> method that data has been forced for this timestep 
 and it should used to overwrite the predicted values.
 </summary>
 <param name="bm"></param>
 <param name="layer"></param>
 <param name="conn"></param>
 <param name="iTime"></param>
 <param name="dt"></param>
 <param name="dataExternal"></param>
 <param name="dNoData"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.SpatialData.cForcingAdapterBase.InitForcingMaps">
 <summary>
 Initialize buffer for holding forced data from the start of the timestep. 
 This is the data that will be restored in <see cref="M:EwECore.SpatialData.cForcingAdapterBase.RestoreForcing(EwECore.cEcospaceDataStructures)"> </see>.
 </summary>
 <remarks></remarks>
</member>
<member name="M:EwECore.SpatialData.cForcingAdapterBase.RestoreForcing(EwECore.cEcospaceDataStructures)">
 <summary>
 Restores forced data to forced state, overwriting the predicted values. 
 Cells in the external data that are cCore.NULL_VALUE will not be restored.
 This allows for forcing of partial areas while leaving the other cells to be predicted by Ecospace.
 </summary>
 <param name="SpaceData"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:EwECore.SpatialData.cHabitatDataAdapter.Adapt(EwECore.cEcospaceBasemap,EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.DateTime,EwEUtils.SpatialData.ISpatialRaster,System.Double)">
 -------------------------------------------------------------------
 <inheritdoc cref="M:EwECore.SpatialData.cCapacityDataAdapter.Adapt(EwECore.cEcospaceBasemap,EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.DateTime,EwEUtils.SpatialData.ISpatialRaster,System.Double)"/>
 <remarks>
 Overridden to invalidate fishing area assessments, if any.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cIBMAge1NumbersForcingAdapter">
 -----------------------------------------------------------------------
 <summary>
 Data Adapter for forcing IBM numbers at first age
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cIBMAge1NumbersForcingAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)"/>.
 <remarks>Overridden to scale values prior to being set in the 
 Ecospace data structures.</remarks>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cMPADataAdapter">
 -----------------------------------------------------------------------
 <summary>
 Data Adapter specific to MPA layers.
 </summary>
 <remarks>
 Needed to decide what coverage ratio closes a cell for fishing.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.SpatialData.cMPADataAdapter.cTHRESHOLD">
 <summary>The threshold that determines when a cell is closed for fishing.</summary>
 <remarks>This parameter must be configurable. Perhaps via Ecospace scenario parameters?</remarks>
</member>
<member name="T:EwECore.SpatialData.cRelPPDataAdapter">
 -----------------------------------------------------------------------
 <summary>
 Data Adapter specific to Relative PP.
 </summary>
 <remarks>
 Does not actually scale the data rather it sets <see cref="F:EwECore.cEcospaceDataStructures.PPScale"/> 
 which is used by <see cref="T:EwECore.cSpaceSolver">cSpaceSolver.derivtRed</see> to scale RelPP.
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cRelPPDataAdapter.Initialize">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.Initialize"/>.
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cRelPPDataAdapter.InitRun">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.InitRun"/>
 <remarks>
 Overridden to clear the PP scale factor.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cRelPPDataAdapter.Adapt(EwECore.cEcospaceBasemap,EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.DateTime,EwEUtils.SpatialData.ISpatialRaster,System.Double)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.Adapt(EwECore.cEcospaceBasemap,EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.DateTime,EwEUtils.SpatialData.ISpatialRaster,System.Double)"/>
 <remarks>
 Called before data from an external source is copied into <see cref="F:EwECore.cEcospaceDataStructures.RelPP"/>
 EcoSpace uses an internal scaler to scale PP data to Ecopath levels. <see cref="F:EwECore.cEcospaceDataStructures.PPScale"/>
 This is the mean relative PP across all water cells computed from the currently loaded  <see cref="F:EwECore.cEcospaceDataStructures.RelPP"/> array.
 <see cref="M:EwECore.SpatialData.cSpatialScalarDataAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)"/> will scale external data to a the first timestep or a user defined value.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cRelPPDataAdapter.EndRun">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.EndRun"/>
 <summary>
 Overridden to restore PP scale factor.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialDataAdapter">
 <summary>
 Base spatial data adapter for inserting external spatial/temporal raster data into
 Ecospace map data structures.
 </summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDataAdapter.m_varName">
 <summary>Ecospace variable to operate onto.</summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDataAdapter.m_coreCounter">
 <summary>Core counter that this adapter operates onto.</summary>
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.#ctor(EwECore.cCore,EwEUtils.Core.eVarNameFlags,EwEUtils.Core.eCoreCounterTypes)">
 -------------------------------------------------------------------
 <summary>
 Create a new instance of this class.
 </summary>
 <param name="core">The core to use.</param>
 <param name="varName">The ecospace layer, identified by <see cref="T:EwEUtils.Core.eVarNameFlags">varname</see>,
 that this adapter will interface with.</param>
 <param name="cc">The <see cref="T:EwEUtils.Core.eCoreCounterTypes">core counter</see> that states the
 number of layers that this adapter will interface with.</param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataAdapter.AllowSaveIntermediateResults">
 -------------------------------------------------------------------
 <summary>
 Get/set whether intermediate rasters will be saved to disk when
 obtained from an exernal data connection.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.Initialize">
 -------------------------------------------------------------------
 <summary>
 Initialize the adapter in response to an Ecospace scenario (re)load.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.MaxLength">
 -------------------------------------------------------------------
 <summary>
 Returns the maximum number of layers for this adapter.
 </summary>
 <returns>The number of layers for this adapter.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.IsConnected(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Return whether a layer in this adapter is connected to external data.
 </summary>
 <param name="iLayer">The one-based index of the layer to query.</param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataAdapter.IsEnabled(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Return whether a layer in this adapter is allowed to exchange external 
 data.
 </summary>
 <param name="iLayer">The one-based index of the layer to query.</param>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataAdapter.VarName">
 -------------------------------------------------------------------
 <summary>
 Get the <see cref="T:EwEUtils.Core.eVarNameFlags">variable name</see> for the type
 of layer that this adapter operates onto.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataAdapter.Status(System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Return the status for the underlying layer.
 </summary>
 <param name="iLayer">The one-based index of the layer to query.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.Populate(System.Int32,System.Double,EwECore.cEcospaceLayer)">
 -------------------------------------------------------------------
 <summary>
 Populate the core data that this adapter is responsible for.
 </summary>
 <param name="iTime">The one-based Ecospace time step to populate data for.</param>
 <param name="dNoData">The no data value for the Ecospace layer.</param>
 <param name="layer">The layers to populate. If left to null, all layers
 for the implicit <see cref="P:EwECore.SpatialData.cSpatialDataAdapter.VarName"/> will be populated.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.InitRun">
 -------------------------------------------------------------------
 <summary>
 Perform pre-run initializations for all adapters such as preserving
 layer data prior to a run. Individual adapters can perform their 
 own initialization in.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.EndRun">
 -------------------------------------------------------------------
 <summary>
 Perform post-run cleanup for all adapters such as restoring
 layer data after to a run, as an accompanying method to.
 Individual adapters can perform their own cleanup in.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.Adapt(EwECore.cEcospaceBasemap,EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.DateTime,EwEUtils.SpatialData.ISpatialRaster,System.Double)">
 -------------------------------------------------------------------
 <summary>
 Load data from an external data raster into an Ecospace array.
 </summary>
 <param name="bm">The <see cref="T:EwECore.cEcospaceBasemap"/> for the scenario to load data into.</param>
 <param name="layer">The <see cref="T:EwECore.cEcospaceLayer"/> that will receive the data.</param>
 <param name="iTime">The Ecospace time step to load data for.</param>
 <param name="dataExternal">The <see cref="T:EwEUtils.SpatialData.ISpatialRaster"/> that holds the loaded external data.</param>
 <returns>True if successful.</returns>
 <remarks>Note that this method writes values straight into the underlying data structures!</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)">
 -------------------------------------------------------------------
 <summary>
 Set a cell value into the underlying layer.
 </summary>
 <param name="layer">The layer to set the value into.</param>
 <param name="iRow">One-based row index for setting the value.</param>
 <param name="iCol">One-based column index for setting the value.</param>
 <param name="sCellValueAtT">The value to set in the cell, as obtained from 
 external data.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.SaveLayerData">
 -------------------------------------------------------------------
 <summary>
 Save the content of adapter-managed layers to a temporary file.
 <seealso cref="M:EwECore.SpatialData.cSpatialDataAdapter.RestoreLayerData"/>
 </summary>
 <remarks>
 Note that only the content of layers <see cref="P:EwECore.cEcospaceLayer.IsExternalData">configured to receive external data</see>
 will be preserved, and only for layers of type single, integer or boolean.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.RestoreLayerData">
 -------------------------------------------------------------------
 <summary>
 Restore the content of layers from a temporary file.
 <seealso cref="M:EwECore.SpatialData.cSpatialDataAdapter.SaveLayerData"/>
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataAdapter.IntermediateSubDirectory">
 -------------------------------------------------------------------
 <summary>
 Get/set the directory for storing intermedite results for debugging.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataAdapter.IntermediateFileName">
 -------------------------------------------------------------------
 <summary>
 Get/set the file name for storing intermedite results for debugging.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataAdapter.Connections(System.Int32,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Return configured connections for this adapter.
 </summary>
 <param name="iLayer">The one-based index of the layer to return connections for.
 If less than one, configured connections for all layers in the adapter are returned.</param>
 <param name="bEnabledOnly">If true, only those layers specified by <paramref name="iLayer"/>
 that are <see cref="P:EwECore.SpatialData.cSpatialDataAdapter.IsEnabled(System.Int32)">enabled</see> are examined. If this flag is False, 
 all layers specified by <paramref name="iLayer"/> are examined.</param>
 <returns>Configured connections for this adapter.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialScalarDataAdapter">
 -----------------------------------------------------------------------
 <summary>
 Implementation of <see cref="T:EwECore.SpatialData.cSpatialScalarDataAdapterBase"/> to scale data by 
 a given scale.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialScalarDataAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwECore.SpatialData.cSpatialDataAdapter.SetCell(EwECore.cEcospaceLayer,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Int32,System.Double)"/>.
 <remarks>Overridden to scale values prior to being set in the 
 Ecospace data structures.</remarks>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialScalarDataAdapterBase">
 <summary>
 Derived spatial data adapter to insert scaled external spatial/temporal map data into
 the Ecospace data structures at any given moment. This adapter maintains a scale
 for every map layer attached to the adapter, and will translate map values
 to relative values when <see cref="T:EwECore.SpatialData.cSpatialScalarDataAdapterBase.eScaleType"/> is set to
 <see cref="F:EwECore.SpatialData.cSpatialScalarDataAdapterBase.eScaleType.Relative">relative</see>.
 </summary>
</member>
<member name="T:EwECore.SpatialData.cSpatialScalarDataAdapterBase.eScaleType">
 -------------------------------------------------------------------
 <summary>
 Supported value conversion modes for a <see cref="T:EwECore.SpatialData.cSpatialScalarDataAdapter"/>.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="F:EwECore.SpatialData.cSpatialScalarDataAdapterBase.eScaleType.Absolute">
 <summary>Values are applied as-is: no scaling is performed.</summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialScalarDataAdapterBase.eScaleType.Relative">
 <summary>Value are scaled before being applied.</summary>
</member>
<member name="M:EwECore.SpatialData.cSpatialScalarDataAdapterBase.CanCalculateScalar">
 -------------------------------------------------------------------
 <summary>
 States if this adapter can scale to a base value.
 </summary>
 <seealso cref="M:EwECore.SpatialData.cSpatialScalarDataAdapterBase.CalculateScalar(System.Double,System.Double)"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialScalarDataAdapterBase.CalculateScaleFromEcopathTimePeriod(System.Int32,EwECore.SpatialData.cSpatialDataConnection,System.Int32,System.Double@)">
 -------------------------------------------------------------------
 <summary>
 Calculate the average of a dataset for a year, starting at a given
 Ecospace time step.
 </summary>
 <param name="iFirstTimeStep">The time step that the calculation
 is requested for.</param>
 <param name="dScale">The calculated scale.</param>
 <returns>A <see cref="P:EwECore.SpatialData.cDatasetCompatilibity.Compatibility"/> result
 indicating the outcome of the calculation.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialScalarDataAdapterBase.CalculateScalar(System.Double,System.Double)">
 -------------------------------------------------------------------
 <summary>
 Calculates a scale value based on the sum and number of cells over the time period.
 </summary>
 <param name="SumOverPeriod">Sum of values over the time period.</param>
 <param name="nMapCells">Total number of cells included in the sum.</param>
 <returns> (1 / mean)</returns>
 <remarks>Default scalar for relative adapters. Return the mean scalar as a multiplier.</remarks>
 <seealso cref="M:EwECore.SpatialData.cSpatialScalarDataAdapterBase.CanCalculateScalar"/>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialScalarNonRestoringDataAdapter">
 <summary>
 This scalar data adapter deliberately does NOT preserve and restore layer data.
 </summary>
</member>
<member name="T:EwECore.SpatialData.cSpatialDataCache">
 <summary>
 Cache for spatial data files
 </summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDataCache.m_strRootPath">
 <summary>Root folder for the cache.</summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDataCache.s_default">
 <summary>Default spatial data cache instance.</summary>
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.DefaultDataCache">
 -------------------------------------------------------------------
 <summary>
 Returns the default spatial data cache.
 </summary>
 <returns>The default spatial data cache.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.#ctor(System.String)">
 -------------------------------------------------------------------
 <summary>
 Constructs a new cache.
 </summary>
 <param name="strRootPath">The <see cref="T:System.IO.Path">cache folder</see> to use.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.GetSize(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <summary>
 Returns the size of the cache for a single <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/>
 (in bytes).
 </summary>
 <param name="ds">The dataset to obtain cache size information for.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.GetSize">
 -------------------------------------------------------------------
 <summary>
 Returns the total size of the cache (in bytes).
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.GetUnusedSize(EwECore.SpatialData.cSpatialDataSetManager)">
 -------------------------------------------------------------------
 <summary>
 Returns the size of the cache of datasets no longer present in the
 datamanager (in bytes).
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.Clear(EwECore.SpatialData.cSpatialDataSetManager)">
 -------------------------------------------------------------------
 <summary>
 Clear cached data files.
 </summary>
 <param name="man">If provided, only datasets no longer present in the
 datamanager will be cleared.</param>
 <returns>True if successful.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.Clear(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <summary>
 Clear cached files for a given dataset.
 </summary>
 <param name="ds"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataCache.RootFolder">
 -------------------------------------------------------------------
 <summary>
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataCache.RootFolder"/>"
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.GetFileName(EwEUtils.SpatialData.ISpatialDataSet,System.Drawing.PointF,System.Drawing.PointF,System.Double,System.DateTime,System.String,System.String)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataCache.GetFileName(EwEUtils.SpatialData.ISpatialDataSet,System.Drawing.PointF,System.Drawing.PointF,System.Double,System.DateTime,System.String,System.String)"/>"
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.GetCacheFolder(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <summary>
 Returns the path to a cache for a dataset.
 </summary>
 <param name="ds"><see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> to obtain the cache path for.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.GetCacheFolder(EwEUtils.SpatialData.ISpatialDataSet,System.Drawing.PointF,System.Drawing.PointF,System.Double,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Returns the path to a cache for a dataset, spatial extent, cell size and time.
 </summary>
 <param name="ds"><see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> to obtain the cache path for.</param>
 <param name="ptfTL">Top-left location (in decimal degrees lon,lat) of the bounding box of the data.</param>
 <param name="ptfBR">Bottom-right location (in decimal degrees lon,lat) of the bounding box of the data.</param>
 <param name="dCellSize">Cell size to obtain the cache path for.</param>
 <param name="bCreateIfMissing">Flag, stating that the path can be created
 if missing.</param>
 <returns>A cache path.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.GetCacheFileName(EwEUtils.SpatialData.ISpatialDataSet,System.Drawing.PointF,System.Drawing.PointF,System.Double,System.DateTime,System.String,System.String,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Returns the path to a cache for a dataset.
 </summary>
 <param name="ds"><see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> to obtain the cache path for.</param>
 <param name="ptfTL">Top-left location (in decimal degrees lon,lat) of the bounding box of the data.</param>
 <param name="ptfBR">Bottom-right location (in decimal degrees lon,lat) of the bounding box of the data.</param>
 <param name="dCellSize">Cell size to obtain the cache path for.</param>
 <param name="dt">Date to create the file name for.</param>
 <param name="strExt">File extension to create the file name for.</param>
 <param name="strFilter">Optional filter to include in the file name, may be empty.</param>
 <param name="bCreateIfMissing">Flag, indicating whether the path should be created if missing.</param>
 <returns>A cache path.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.GetCachePath(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <summary>
 Get the cache folder(s) for a single <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/>.
 </summary>
 <param name="ds">The <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> to get the cache
 folders for.</param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataCache.GetTotalFileSize(System.String[])">
 -------------------------------------------------------------------
 <summary>
 Returns the total file size of a series of folders (in bytes).
 </summary>
 <param name="astrFolders"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConfigFile.nDatasets">
 -------------------------------------------------------------------
 <summary>
 Get the number of datasets in the configuration file.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConfigFile.Load(EwECore.cCore,EwECore.SpatialData.cSpatialDataSetManager)">
 -------------------------------------------------------------------
 <summary>
 Initializes the manager with datasets, loaded from persistent storage.
 </summary>
 <returns>False if the config file is corrupted, True otherwise.</returns>
 <remarks>This method can also be used to import extra datasets.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConfigFile.Save(EwECore.cCore,EwECore.SpatialData.cSpatialDataSetManager,EwEUtils.SpatialData.ISpatialDataSet[],System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Saves all datasets currently loaded by the manager to persistent storage.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 <para>If the manager is read-only, which is set when the datafile
 is externally modified, any save attempt will abort and fail.</para>
 <para>Note that this method can also be used to export datasets.</para>
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.Dataset">
 <summary></summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.Converter">
 <summary></summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.Scale">
 <summary></summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.ScaleType">
 <summary></summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.UseDefaultDateStart">
 <summary></summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.CustomDateStart">
 <summary>
 Custom start date for bringing in external data.
 If set before the first year of dataset data, the spatial temporal 
 framework will repeat the FIRST YEAR of external data until the
 actual external data is encountered.
 </summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.UseDefaultDateEnd">
 <summary></summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.CustomDateEnd">
 <summary>
 Custom end date for bringing in external data.
 If set past the last year of dataset data, the spatial temporal 
 framework will keep repeating the LAST YEAR of external data.
 </summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.Adapter">
 <summary></summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.iLayer">
 <summary></summary>
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnection.#ctor">
 <summary></summary>
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnection.IsConfigured">
 <summary></summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.TimeStart">
 -------------------------------------------------------------------
 <summary>
 Helper method to resolve the start year of external data, based on dataset 
 configuration and optional choices.
 </summary>
 <seealso cref="P:EwECore.SpatialData.cSpatialDataConnection.CustomDateStart"/>
 <seealso cref="P:EwECore.SpatialData.cSpatialDataConnection.UseDefaultDateStart"/>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnection.TimeEnd">
 -------------------------------------------------------------------
 <summary>
 Helper method to resolve the end year of external data, based on dataset 
 configuration and optional choices.
 </summary>
 <seealso cref="P:EwECore.SpatialData.cSpatialDataConnection.CustomDateStart"/>
 <seealso cref="P:EwECore.SpatialData.cSpatialDataConnection.UseDefaultDateStart"/>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnection.ToDataTime(EwECore.cCore,System.DateTime)">
 -------------------------------------------------------------------
 <summary>
 Translate a date to 
 </summary>
 <param name="core"></param>
 <param name="dt"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialDataConnectionManager">
 -----------------------------------------------------------------------
 <summary>
 Manages the connections between available <see cref="T:EwECore.SpatialData.cSpatialDataAdapter"/>s 
 and <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/>s
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.SpatialData.cSpatialDataConnectionManager.m_datasetManager">
 <summary>Manager of active data sets.</summary>
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.Update(EwECore.SpatialData.cSpatialDataAdapter)">
 <summary>
 Apply spatial configration details to the underlying spatial data structures.
 </summary>
 <param name="adt">The adapter to update. If left empty, all adapters will be updated.</param>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataConnectionManager.NumConnectedAdapters">
 -------------------------------------------------------------------
 <summary>
 Get the number of <see cref="M:EwECore.SpatialData.cSpatialDataAdapter.IsConnected(System.Int32)">live data connections</see>.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.InvalidConnections(System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Returns an array of all <see cref="T:EwEUtils.SpatialData.ISpatialDataSet">data sets</see>
 that are known to be missing data.
 </summary>
 <param name="bEnabledOnly">If true, only <see cref="T:EwEUtils.SpatialData.ISpatialDataSet">data sets</see>
 that are <see cref="P:EwECore.SpatialData.cSpatialDataAdapter.IsEnabled(System.Int32)">enabled</see> are
 checked. If false, all <see cref="T:EwEUtils.SpatialData.ISpatialDataSet">data sets</see> are checked.</param>
 <returns>An array of all <see cref="T:EwECore.SpatialData.cSpatialDataConnection">connections</see>
 that are known to be missing data.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.DatasetTemplates(EwEUtils.Core.eVarNameFlags)">
 -------------------------------------------------------------------
 <summary>
 Returns an array of dataset templates from the core assemly and 
 from loaded plug-ins.
 </summary>
 <param name="vn">The varname to filter by, if any.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.DatasetManager">
 -------------------------------------------------------------------
 <summary>
 Returns a reference to the embedded dataset manager.
 </summary>
 <returns>A reference to the embedded dataset manager.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.Update(EwEUtils.SpatialData.ISpatialDataSet,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Apply changes to a single dataset
 </summary>
 <param name="ds"></param>
 <param name="ForceUpdate">True to force the notification</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.Update(EwEUtils.SpatialData.ISpatialDataConverter,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Apply changes to a single converter
 </summary>
 <param name="cv"></param>
 <param name="ForceUpdate">True to force the notification</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.NotifyCore(EwEUtils.Core.eMessageType)">
 -------------------------------------------------------------------
 <summary>
 Notify the core that data has changed.
 </summary>
 <param name="importance"></param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.ConverterTemplates(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <summary>
 Returns an array of data converter templates compatible with a <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/>.
 </summary>
 <returns>An array of compatible <see cref="T:EwEUtils.SpatialData.ISpatialDataConverter">converters</see>.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.ConverterTemplates">
 -------------------------------------------------------------------
 <summary>
 Returns an array of data converter templates compatible with a <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/>.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.CreateAdapters">
 -------------------------------------------------------------------
 <summary>
 Create fixed data adapters for ecospace data layers.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataConnectionManager.Clear">
 -------------------------------------------------------------------
 <summary>
 Clear fixed data adapters.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialDataSetManager">
 -----------------------------------------------------------------------
 <summary>
 Manager class for loading and saving globally shared spatial data sets.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.DefaultConfigFile">
 -------------------------------------------------------------------
 <summary>
 Returns the full path to the configuration file. This creates the directory if needed.
 </summary>
 <returns>The full path to the configuration file.</returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataSetManager.CurrentConfigFile">
 -------------------------------------------------------------------
 <summary>
 Get the full path to the current active config file.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Load(System.String,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Initializes the manager with datasets, loaded from persistent storage.
 </summary>
 <param name="strFile">The name of the file to load. If not specified, 
 the <see cref="M:EwECore.SpatialData.cSpatialDataSetManager.DefaultConfigFile">default configuration file</see>
 is used.</param>
 <param name="bClearFirst">Flag, stating that the content currently in 
 the manager should be cleared first.</param>
 <returns>False if the config file is corrupted, True otherwise.</returns>
 <remarks>This method can also be used to import extra datasets.</remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Save(System.String,EwEUtils.SpatialData.ISpatialDataSet[],System.String,System.String,System.String,System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Saves all datasets currently loaded by the manager to persistent storage.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 <para>If the manager is read-only, which is set when the datafile
 is externally modified, any save attempt will abort and fail.</para>
 <para>Note that this method can also be used to export datasets.</para>
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Changed">
 -------------------------------------------------------------------
 <summary>
 Send a change notification
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataSetManager.IsIndexingEnabled">
 -------------------------------------------------------------------
 <summary>
 Get/set user preference for indexing datasets.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.SuspendIndexing">
 -------------------------------------------------------------------
 <summary>
 Get/set whether the indexer is paused.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataSetManager.IndexDataset">
 -------------------------------------------------------------------
 <summary>
 Get/set the dataset to index.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.IsIndexing(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <summary>
 Returns whether a dataset is being indexed.
 </summary>
 <param name="ds">The dataset to check. If this parameter is omitted 
 this method will return whether any dataset is being indexed.</param>
 <returns>True if a dataset is being indexed.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Add(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.ICollection`1.Add(`0)"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Clear">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.ICollection`1.Clear"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Contains(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.CopyTo(EwEUtils.SpatialData.ISpatialDataSet[],System.Int32)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataSetManager.Count">
 -------------------------------------------------------------------
 <inheritdocs cref="P:System.Collections.Generic.ICollection`1.Count"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataSetManager.IsReadOnly">
 -------------------------------------------------------------------
 <inheritdocs cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Remove(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.ICollection`1.Remove(`0)"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.RemoveAt(System.Int32)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.GetEnumerator">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.IndexOf(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.InaccessibleInsert(System.Int32,EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataSetManager.Item(System.Int32)">
 -------------------------------------------------------------------
 <inheritdocs cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Datasets(EwEUtils.Core.eVarNameFlags)">
 --------------------------------------------------------------------
 <summary>
 Returns all datasets compatible with a given <see cref="T:EwEUtils.Core.eVarNameFlags">variable</see>.
 </summary>
 <param name="var">The <see cref="T:EwEUtils.Core.eVarNameFlags">variable</see> to filter by.</param>
 <returns>An array of datasets, compatible with the given <paramref name="var">variable</paramref>.</returns>
 --------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Datasets">
 --------------------------------------------------------------------
 <summary>
 Returns all available datasets.
 </summary>
 <returns>All available datasets.</returns>
 --------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataSetManager.ConfigFiles">
 -------------------------------------------------------------------
 <summary>
 Get/set the paths to all defined config files.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataSetManager.ConfigFileDefinitions">
 <summary>
 Get all custom configuration files defined on the local system.
 </summary>
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.CreateConfigFile(System.String,System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Creates a new configuration file, and adds it to the internal list of
 defined spatial temporal data configuration files.
 </summary>
 <param name="strFile"></param>
 <param name="strName"></param>
 <param name="strDescription"></param>
 <remarks>The dataset configuration file will inherit the local computer 
 name, and <see cref="P:EwECore.cCore.DefaultAuthor">author</see> and <see cref="P:EwECore.cCore.DefaultContact">contact</see> 
 information as configured in the core.
 </remarks>
 <returns>The created dataset, or nothing if an error occurred.</returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDataSetManager.CreateConverter(EwECore.SpatialData.cSpatialDataStructures.cAdapaterConfiguration)">
 -------------------------------------------------------------------
 <summary>
 Create a converter from provided configuration info.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.UpdateDataset(EwEUtils.SpatialData.ISpatialDataSet,EwECore.SpatialData.cSpatialDataStructures.cAdapaterConfiguration)">
 -------------------------------------------------------------------
 <summary>
 Store a dataset into provided configuration info.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDataSetManager.Save(System.String,System.Boolean,System.String,System.String,System.String,System.String)">
 -------------------------------------------------------------------
 <summary>
 Saves all datasets currently loaded by the manager to persistent storage.
 </summary>
 <returns>True if successful.</returns>
 <remarks>
 <para>If the manager is read-only, which is set when the datafile
 is externally modified, any save attempt will abort and fail.</para>
 <para>Note that this method can also be used to export datasets.</para>
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cDatasetCompatilibity">
 -----------------------------------------------------------------------
 <summary>
 <para>Helper class for assessing the compatibility of a <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> 
 with the spatial and temporal extent of the currently loaded Ecospace scenario.</para>
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.m_rcfBasemap">
 <summary>Spatial bounds of the current base map.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.m_iNumTimeSteps">
 <summary>Number of time steps in assessment period.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.m_iNumTimeOverlap">
 <summary>Number of time steps with data.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.m_iNumFullSpatialOverlap">
 <summary>Number of data time steps with full spatial overlap.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.m_iNumPartialSpatialOverlap">
 <summary>Number of data time steps with partial spatial overlap.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.m_iNumError">
 <summary>Number of files that could not be loaded.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.m_iNumIndexed">
 <summary>Number of indexed files</summary>
</member>
<member name="M:EwECore.SpatialData.cDatasetCompatilibity.#ctor(EwECore.cCore,EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <summary>
 Assess the compatibility of a <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> with a 
 loaded Ecospace scenario.
 </summary>
 <param name="core">The core with a loaded Ecospace scenario.</param>
 <param name="ds">The <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/>to assess.</param>
 <remarks>
 This method will make an assessment of the full Ecospace run time.
 </remarks>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes">
 <summary>Compatibility levels.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.NotSet">
 <summary>Assessment has not been performed yet.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.Errors">
 <summary>Errors occurred while assessing the compatibility.</summary>
 <remarks>The number of erroneous data sets can be checked via <see cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumError"/>.</remarks>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.NoTemporal">
 <summary>No temporal overlap.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.TemporalNotIndexed">
 <summary>Temporal overlap, spatial unknown because indexing has not been performed.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.NoSpatial">
 <summary>Temporal overlap, but no spatial overlap.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.PartialSpatial">
 <summary>Temporal overlap, but patial overlap.</summary>
</member>
<member name="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.TotalOverlap">
 <summary>Temporal and total spatial overlap.</summary>
</member>
<member name="P:EwECore.SpatialData.cDatasetCompatilibity.Compatibility">
 -------------------------------------------------------------------
 <summary>
 <para>
 Get a measure of temporal compatibility between a dataset and a
 loaded Ecospace scenario. Values are to be interpreted as follows:
 </para>
 <list type="table">
 <listheader>
 <term>Value</term><description>Meaning</description>
 </listheader>
 <item><term><see cref="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.Errors"/></term>
 <description>Assessment failed; this happens when there is no Ecospace scenario loaded, or any external data could not be accessed.</description></item>
 <item><term><see cref="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.NoTemporal"/></term>
 <description>Thew dataset does not contain any data for the Ecospace run time period.</description></item>
 <item><term><see cref="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.NoSpatial"/></term>
 <description>The dataset contains data for Ecospace time steps, but the data does not spatially overlap.</description></item>
 <item><term><see cref="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.PartialSpatial"/></term>
 <description>The dataset contains data for Ecospace time steps, but the data partially spatially overlaps.</description></item>
 <item><term><see cref="F:EwECore.SpatialData.cDatasetCompatilibity.eCompatibilityTypes.TotalOverlap"/></term>
 <description>The dataset contains data for Ecospace time steps, and all data spatially overlaps.</description></item>
 </list>
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cDatasetCompatilibity.CompatibilityAt(System.Int32)">
 <summary>
 
 </summary>
 <param name="iTimeStep">The Ecospace time step to check compatibility for.</param>
 <returns>
 <para>Return values should be interpreted as follows:</para>
 </returns>
</member>
<member name="P:EwECore.SpatialData.cDatasetCompatilibity.NumAssessedTimeSteps">
 -------------------------------------------------------------------
 <summary>
 Get the number of assessed Ecospace time steps. If this method
 returns 0 an error occurred and the assessment is invalid.
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumOverlappingTimeSteps"/>
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumFullSpatialOverlap"/>
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumPartialSpatialOverlap"/>
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cDatasetCompatilibity.NumOverlappingTimeSteps">
 -------------------------------------------------------------------
 <summary>
 Get the number of assessed time steps for which the data set
 contains external data.
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumAssessedTimeSteps"/>
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumFullSpatialOverlap"/>
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumPartialSpatialOverlap"/>
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cDatasetCompatilibity.NumPartialSpatialOverlap">
 -------------------------------------------------------------------
 <summary>
 Get the number of assessed time steps for which the data set
 contains external data that partially - not fully - overlaps
 the area of the Ecospace scenario.
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumOverlappingTimeSteps"/>
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumFullSpatialOverlap"/>
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumAssessedTimeSteps"/>
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cDatasetCompatilibity.NumFullSpatialOverlap">
 -------------------------------------------------------------------
 <summary>
 Get the number of assessed time steps for which the data set
 contains external data that fully - not partially - overlaps
 the area of the Ecospace scenario.
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumOverlappingTimeSteps"/>
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumAssessedTimeSteps"/>
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumPartialSpatialOverlap"/>
 </summary>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cDatasetCompatilibity.NumError">
 -------------------------------------------------------------------
 <summary>
 Get the number of assessed time steps for which no data could be
 loaded.
 <seealso cref="P:EwECore.SpatialData.cDatasetCompatilibity.NumOverlappingTimeSteps"/>
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cDatasetCompatilibity.Assess(System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Perform the assessment of a dataset for a given number of time steps.
 </summary>
 <param name="iTimeStart"></param>
 <param name="iNumTimeSteps"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cDatasetCompatilibity.ToRect(System.Drawing.PointF,System.Drawing.PointF)">
 -------------------------------------------------------------------
 <summary>
 Convert a lat/lon area into an extent rectangle.
 </summary>
 <param name="ptfTL"></param>
 <param name="ptfBR"></param>
 <returns></returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialDatasetIndexer">
 <summary>
 Helper class that performs the task of indexing one spatial dataset at the time.
 The indexer has a queue of datasets to index.
 </summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDatasetIndexer.m_sync">
 <summary>Synchronization lock</summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDatasetIndexer.m_core">
 <summary>The core to operate on.</summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDatasetIndexer.m_queue">
 <summary>Queue of datasets to index.</summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDatasetIndexer.m_threadIndex">
 <summary>THe worker thread to perform the indexing.</summary>
</member>
<member name="M:EwECore.SpatialData.cSpatialDatasetIndexer.#ctor(EwECore.cCore,EwECore.SpatialData.cSpatialDataSetManager)">
 -------------------------------------------------------------------
 <summary>
 Constructor.
 </summary>
 <param name="core">The core to index against.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDatasetIndexer.Prioritize(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <summary>
 Prioritize a dataset for indexing.
 </summary>
 <param name="ds">The <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> to index, or
 nothing to stop indexing.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDatasetIndexer.Stop">
 -------------------------------------------------------------------
 <summary>
 Stop indexing.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDatasetIndexer.Current">
 -------------------------------------------------------------------
 <summary>
 Returns the <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> currently being indexed.
 </summary>
 <returns>The <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> currently being indexed.</returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDatasetIndexer.IsIndexing(EwEUtils.SpatialData.ISpatialDataSet)">
 -------------------------------------------------------------------
 <summary>
 Returns whether a dataset is being indexed.
 </summary>
 <param name="ds">The <see cref="T:EwEUtils.SpatialData.ISpatialDataSet"/> to check, or 
 nothing to check if any dataset is being indexed.</param>
 <returns>True if a dataset is being indexed.</returns>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.SpatialData.cSpatialDatasetIndexer.Enabled">
 -------------------------------------------------------------------
 <summary>
 Enable/disable indexing. This state is managed by the data set manager
 who knows he bigger picture.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialDatasetIndexer.IndexDatasetThread">
 -------------------------------------------------------------------
 <summary>
 Private indexing thread.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialDataStructures">
 <summary>
 
 </summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDataStructures.DataAdapters">
 <summary>Availalable data adapters</summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDataStructures.cMAX_CONN">
 <summary>Max. number of external data connections per layer.</summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataStructures.Item(EwEUtils.Core.eVarNameFlags,System.Int32,System.Int32)">
 -------------------------------------------------------------------
 <summary>
 Get a spatial data configuration for a given (layer, connection slot) combination.
 </summary>
 <param name="varname"></param>
 <param name="iIndex">One-based layer index</param>
 <param name="iConnection">One-based connection index</param>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialDataStructures.cAdapaterConfiguration">
 <summary>
 Class for maintaining the details for a given spatial data connection.
 </summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataStructures.cAdapaterConfiguration.DatasetGUID">
 <summary>GUID to locally defined dataset.</summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataStructures.cAdapaterConfiguration.DatasetTypeName">
 <summary>Typename to instantiate dataset.</summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataStructures.cAdapaterConfiguration.ConverterTypeName">
 <summary>Typename to instantiate converter.</summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataStructures.cAdapaterConfiguration.ConverterConfig">
 <summary>Configuration to set up converter.</summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataStructures.cAdapaterConfiguration.Scale">
 <summary>Data scale, if any.</summary>
</member>
<member name="P:EwECore.SpatialData.cSpatialDataStructures.cAdapaterConfiguration.ScaleType">
 <summary></summary>
</member>
<member name="F:EwECore.SpatialData.cSpatialDataStructures.m_data">
 -------------------------------------------------------------------
 <summary>
 Storage structure of data connections by varname.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.SpatialData.cSpatialOperationLog">
 -----------------------------------------------------------------------
 <summary>
 Central class for logging spatial operations.
 </summary>
 <remarks>
 <para>
 The operations log generates <see cref="T:EwECore.cMessage">core messages</see>, 
 one message for a  given layer and time step, with <see cref="P:EwECore.cMessage.Variables"/> 
 for every spatial operation applied to the data for this layer.
 </para>
 <para>
 To do this, the log behaves in a transaction-based manner. A layer log message 
 is started by calling <see cref="M:EwECore.SpatialData.cSpatialOperationLog.BeginLayerLog(System.Int32,System.DateTime,EwEUtils.Core.eVarNameFlags,EwECore.cEcospaceLayer)"/>. 
 Consecutive <see cref="M:EwECore.SpatialData.cSpatialOperationLog.LogOperation(System.String,EwEUtils.Core.eStatusFlags)">LogOperation</see> calls
 will add <see cref="T:EwECore.cVariableStatus"/> entries to the message. The message
 is terminated and sent out by calling <see cref="M:EwECore.SpatialData.cSpatialOperationLog.EndLayerLog(System.Boolean)"/>.
 </para>
 </remarks>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialOperationLog.#ctor(EwECore.cCore)">
 -------------------------------------------------------------------
 <summary>
 Initialize a new instance of this class.
 </summary>
 <param name="core">The core to use for sending messages.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialOperationLog.BeginRun">
 -------------------------------------------------------------------
 <summary>
 Start collection run diagnostics.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialOperationLog.BeginLayerLog(System.Int32,System.DateTime,EwEUtils.Core.eVarNameFlags,EwECore.cEcospaceLayer)">
 -------------------------------------------------------------------
 <summary>
 Notify the log that the spatial framework has begun processing external
 data for a map layer at a given time step. To finish processing
 the layer call <see cref="M:EwECore.SpatialData.cSpatialOperationLog.EndLayerLog(System.Boolean)"/>.
 </summary>
 <param name="timestep">The time step that is currently being executed.</param>
 <param name="dt">The absolute time represented by this time step.</param>
 <param name="layer">The layer that is being processed.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialOperationLog.EndLayerLog(System.Boolean)">
 -------------------------------------------------------------------
 <summary>
 Notify the log that the spatial framework is finished processing
 external data for the layer and time step indicated in <see cref="M:EwECore.SpatialData.cSpatialOperationLog.BeginLayerLog(System.Int32,System.DateTime,EwEUtils.Core.eVarNameFlags,EwECore.cEcospaceLayer)"/>.
 </summary>
 <param name="bSendMessage">Flag, stating whether a status message
 should be sent out. True by default.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialOperationLog.LogOperation(System.String,EwEUtils.Core.eStatusFlags)">
 -------------------------------------------------------------------
 <summary>
 Log a spatial operation for the current layer.
 </summary>
 <param name="strMsg">The status message describing the operation.</param>
 <param name="status">The result of the operation.</param>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.SpatialData.cSpatialOperationLog.EndRun">
 -------------------------------------------------------------------
 <summary>
 Stop collecting run information.
 </summary>
 <returns>True if all spatial operations completed without errors.</returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.cSpatialDatasetPlaceholder">
 -----------------------------------------------------------------------
 <summary>
 Placeholder class for a spatial temporal data connection that cannot be
 initialized, most likely due to a missing plug-in.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.CustomName">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.CustomName"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.CustomDescription">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.CustomDescription"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.Source">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.Source"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.GUID">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.GUID"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.TimeStart">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.TimeStart"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.TimeEnd">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.TimeEnd"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.VarName">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.VarName"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.ConversionFormat">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.ConversionFormat"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.Configuration(System.Xml.XmlDocument,System.String)">
 -------------------------------------------------------------------
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.Configuration(System.Xml.XmlDocument,System.String)"/>
 -------------------------------------------------------------------
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.DialogReadFilter(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.DialogReadFilter(System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.Cache">
 <inheritdocs cref="P:EwEUtils.SpatialData.ISpatialDataSet.Cache"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.EnableData(EwEUtils.Core.IRunType)">
 <inheritdocs cref="P:EwEUtils.Core.IExternalDataSource.EnableData(EwEUtils.Core.IRunType)"/>
</member>
<member name="P:EwECore.cSpatialDatasetPlaceholder.Summary">
 <inheritdocs cref="P:EwEUtils.Core.ISummarizable.Summary"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.UpdateIndexAtT(System.DateTime)">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.UpdateIndexAtT(System.DateTime)"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.IsConfigured">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.IsConfigured"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.HasDataAtT(System.DateTime)">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.HasDataAtT(System.DateTime)"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.LockDataAtT(System.DateTime,System.Double,System.Drawing.PointF,System.Drawing.PointF,System.String)">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.LockDataAtT(System.DateTime,System.Double,System.Drawing.PointF,System.Drawing.PointF,System.String)"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.IsLocked">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.IsLocked"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.Unlock">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.Unlock"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.GetExtentAtT(System.DateTime,System.Drawing.PointF@,System.Drawing.PointF@)">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.GetExtentAtT(System.DateTime,System.Drawing.PointF@,System.Drawing.PointF@)"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.IndexStatusAtT(System.DateTime)">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.IndexStatusAtT(System.DateTime)"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.GetAttributes">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.GetAttributes"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.GetAttributeDataTypes">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.GetAttributeDataTypes"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.GetAttributeValues">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.GetAttributeValues"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.GetRaster(EwEUtils.SpatialData.ISpatialDataConverter,System.String)">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.GetRaster(EwEUtils.SpatialData.ISpatialDataConverter,System.String)"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.ExportTo(System.String)">
 <inheritdocs cref="M:EwEUtils.SpatialData.ISpatialDataSet.ExportTo(System.String)"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.IsDataAvailable(EwEUtils.Core.IRunType)">
 <inheritdocs cref="M:EwEUtils.Core.IExternalDataSource.IsDataAvailable(EwEUtils.Core.IRunType)"/>
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.ToXML(System.Xml.XmlDocument,System.String)">
 -------------------------------------------------------------------
 <summary>
 Write content to XML.
 </summary>
 <param name="doc">The doc to generate nodes for.</param>
 <returns>
 An XML node that contains the content of the dataset.
 </returns>
 -------------------------------------------------------------------
</member>
<member name="M:EwECore.cSpatialDatasetPlaceholder.FromXML(System.Xml.XmlDocument,System.Xml.XmlNode,System.String)">
 -------------------------------------------------------------------
 <summary>
 Read content from XML.
 </summary>
 <param name="doc">The doc to read nodes from.</param>
 <param name="node">The configuration node that contains the content
 of the dataset. Happy, happy, happy.</param>
 <returns>
 True if successful.
 </returns>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Style.cAreaUnitFormatter">
 ---------------------------------------------------------------------------
 <summary>
 Class for providing a textual description of <see cref="T:EwEUtils.Core.eUnitAreaType"/> objects.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.Style.cAreaUnitFormatter.#ctor(System.String)">
 -------------------------------------------------------------------
 <summary>
 Create a new type <see cref="T:EwEUtils.Core.eUnitCurrencyType"/>formatter.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Style.cCurrencyUnitFormatter">
 ---------------------------------------------------------------------------
 <summary>
 Class for providing a textual description of <see cref="T:EwEUtils.Core.eUnitCurrencyType"/> objects.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.Style.cCurrencyUnitFormatter.#ctor(System.String)">
 -------------------------------------------------------------------
 <summary>
 Create a new type <see cref="T:EwEUtils.Core.eUnitCurrencyType"/>formatter.
 </summary>
 <param name="strCustom">Any custom unit text as entered by the user. 
 by the user.</param>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Style.cMapUnitFormatter">
 ---------------------------------------------------------------------------
 <summary>
 Class for providing a textual description of <see cref="T:EwEUtils.Core.eUnitAreaType"/> objects.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.Style.cMapUnitFormatter.#ctor">
 -------------------------------------------------------------------
 <summary>
 Create a new type <see cref="T:EwECore.Style.cMapUnitFormatter"/>formatter.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Style.cTimeUnitFormatter">
 ---------------------------------------------------------------------------
 <summary>
 Class for providing a textual description of <see cref="T:EwEUtils.Core.eUnitTimeType"/> objects.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.Style.cTimeUnitFormatter.#ctor(System.String)">
 -------------------------------------------------------------------
 <summary>
 Create a new type <see cref="T:EwEUtils.Core.eUnitCurrencyType"/>formatter.
 </summary>
 -------------------------------------------------------------------
</member>
<member name="T:EwECore.Style.cUnits">
 <summary>
 Formatter for string-based units
 </summary>
</member>
<member name="T:EwECore.Style.cVarnameTypeFormatter">
 ---------------------------------------------------------------------------
 <summary>
 Class for providing a textual description of core variables.
 </summary>
 <remarks>
 <para>This class tries to obtain a string from the ScientificShared resources.
 The resource string is expected to be named and formatted as follows:</para>
 <para>VARIABLE_[varname] = "[symbol]|[abbr]|[name]|[description]"</para>
 </remarks>
 ---------------------------------------------------------------------------
</member>
<member name="T:EwECore.cTaxon">
 <summary>
 Taxonomy definition that contributes to a functional group or stanza configuration.
 </summary>
</member>
<member name="P:EwECore.cTaxon.iGroup">
 <summary>
 Get/set the index of the Ecopath group that a taxonomy definition contributes to.
 </summary>
</member>
<member name="P:EwECore.cTaxon.iStanza">
 <summary>
 Get/set the index of the Stanza configuration that a taxonomy definition contributes to.
 </summary>
</member>
<member name="P:EwECore.cTaxon.PropB">
 <summary>
 Get/set the proportion that a taxonomy definition contributes to a <see cref="P:EwECore.cTaxon.Group">group</see>.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Phylum">
 <summary>
 Get/set the phylum of a taxonomy definition.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Class">
 <summary>
 Get/set the class of a taxonomy definition.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Order">
 <summary>
 Get/set the order of a taxonomy definition.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Family">
 <summary>
 Get/set the family of a taxonomy definition.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Genus">
 <summary>
 Get/set the genus of a taxonomy definition.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Species">
 <summary>
 Get/set the species of a taxonomy definition.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Common">
 <summary>
 Get/set the species common name.
 </summary>
</member>
<member name="P:EwECore.cTaxon.SearchFields">
 <summary>
 Get/set flags last used to search the taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.CodeSAUP">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeSAUP"/>
</member>
<member name="P:EwECore.cTaxon.CodeFishBase">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeFishBase"/>
</member>
<member name="P:EwECore.cTaxon.CodeSeaLifeBase">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeSeaLifeBase"/>
</member>
<member name="P:EwECore.cTaxon.CodeAquaMaps">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeAquaMaps"/>
</member>
<member name="P:EwECore.cTaxon.CodeAphia">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeAphia"/>
</member>
<member name="P:EwECore.cTaxon.CodeOBIS">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeOBIS"/>
</member>
<member name="P:EwECore.cTaxon.CodeFAO">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeFAO"/>
</member>
<member name="P:EwECore.cTaxon.CodeLSID">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeLSID"/>
</member>
<member name="P:EwECore.cTaxon.Source">
 <summary>
 Get/set the name of the source that a taxonomy definition was obtained from.
 </summary>
</member>
<member name="P:EwECore.cTaxon.SourceKey">
 <summary>
 Get/set the key to refresh a taxonomy definition from the <see cref="P:EwECore.cTaxon.Source">source</see>.
 </summary>
</member>
<member name="P:EwECore.cTaxon.South">
 <summary>
 Get/set the southern extent of the model bounding box.
 </summary>
</member>
<member name="P:EwECore.cTaxon.North">
 <summary>
 Get/set the northern extent of the model bounding box.
 </summary>
</member>
<member name="P:EwECore.cTaxon.West">
 <summary>
 Get/set the western extent of the model bounding box.
 </summary>
</member>
<member name="P:EwECore.cTaxon.East">
 <summary>
 Get/set the eastern extent of the model bounding box.
 </summary>
</member>
<member name="P:EwECore.cTaxon.EcologyType">
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eEcologyTypes"/> for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.OrganismType">
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eOrganismTypes"/> for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.PropC">
 <summary>
 Get/set the proportion of the catch of this taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.IUCNConservationStatus">
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eIUCNConservationStatusTypes"/> for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.ExploitationStatus">
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eExploitationTypes"/> for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.OccurrenceStatus">
 <summary>
 Get/set the <see cref="T:EwEUtils.Core.eOccurrenceStatusTypes"/> for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.MeanWeight">
 <summary>
 Get/set the mean weight for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.MeanWeightStatus">
 <summary>
 Get/set the mean weight status for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.MeanLength">
 <summary>
 Get/set the mean length for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.MeanLengthStatus">
 <summary>
 Get/set the mean length status for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.MaxLength">
 <summary>
 Get/set the max length for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.MaxLengthStatus">
 <summary>
 Get/set the max length status for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.MeanLifespan">
 <summary>
 Get/set the mean life span for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.MeanLifespanStatus">
 <summary>
 Get/set the mean life span status for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.VulnerabilityIndex">
 <summary>
 Get/set the vulnerability index for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.VulnerabilityIndexStatus">
 <summary>
 Get/set the vulnerability index status for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Winf">
 <summary>
 Get/set the asymptotic weight for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.vbgfK">
 <summary>
 Get/set the asymptotic weight for a taxon.
 </summary>
</member>
<member name="P:EwECore.cTaxon.LastUpdated">
 <summary>
 Get/set the Julian date the taxonomy definition was last updated.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Group">
 <summary>
 Get/set the index of the Ecopath group that a taxonomy definition contributes to.
 </summary>
</member>
<member name="P:EwECore.cTaxon.Stanza">
 <summary>
 Get/set the index of the Stanza configuration that a taxonomy definition contributes to.
 </summary>
</member>
<member name="T:EwECore.cTaxonAnalysis">
 ---------------------------------------------------------------------------
 <summary>
 Helper class to analyze taxonomy data.
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="M:EwECore.cTaxonAnalysis.#ctor(EwECore.cTaxonDataStructures)">
 -----------------------------------------------------------------------
 <summary>
 Create a new instance of the taxon analysis class.
 </summary>
 <param name="taxonDS">The <see cref="T:EwECore.cTaxonDataStructures">taxonomy data structures</see>
 to obtain taxon data from.</param>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTaxonAnalysis.GroupBiomassProportion(System.Int32,System.Object,EwECore.eOperators)">
 -----------------------------------------------------------------------
 <summary>
 Returns the biomass proportion of all taxa for a single group matching 
 a specific condition.
 </summary>
 <param name="iGroup">The group to obtain taxa for.</param>
 <param name="val">The value to test against. Supported value types are
 <see cref="T:EwEUtils.Core.eOccurrenceStatusTypes"/>, <see cref="T:EwEUtils.Core.eIUCNConservationStatusTypes"/>, 
 <see cref="T:EwEUtils.Core.eOrganismTypes"/> and <see cref="T:EwEUtils.Core.eEcologyTypes"/></param>
 <param name="op">The <see cref="T:EwECore.eOperators">operation</see> to perform.
 If not provided <see cref="F:EwECore.eOperators.EqualTo">'='</see> is used.</param>
 <returns>The proportion of biomass.</returns>
 <example lang="VB.NET">
 <code>
 Dim taxonanalysis As cTaxonAnalysis = Me.m_core.TaxonAnalysis
 Dim Binv As Single = 0 ' Biomass of invertebrates
 Dim Bnt as single = 0  ' Biomass of species listed as IUCN near-treathened or worse 
 
 For iGroup As Integer = 1 To Me.m_core.NumGroups
     ' Sum up the biomass for all invertebrates
     Binv += Me.m_core.EcopathGroupOutput(iGroup).Biomass * taxonanalysis.GroupBiomassProportion(iGroup, eOrganismTypes.Invertebrates))
     ' Sum up the biomass for all species with a IUCN status of near-threathened or worse
     Bnt += Me.m_core.EcopathGroupOutput(iGroup).Biomass * taxonanalysis.GroupBiomassProportion(iGroup, eIUCNConservationStatusTypes.NearThreatened, eOperators.GreaterThanOrEqualTo))
 Next iGroup
 </code>
 </example>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTaxonAnalysis.GroupCatchProportion(System.Int32,System.Object,EwECore.eOperators)">
 -----------------------------------------------------------------------
 <summary>
 Returns the catch proportion of all taxa for a single group matching 
 a specific condition.
 </summary>
 <param name="iGroup">The group to obtain taxa for.</param>
 <param name="val">The value to test against. Supported value types are
 <see cref="T:EwEUtils.Core.eOccurrenceStatusTypes"/>, <see cref="T:EwEUtils.Core.eIUCNConservationStatusTypes"/>, 
 <see cref="T:EwEUtils.Core.eOrganismTypes"/> and <see cref="T:EwEUtils.Core.eEcologyTypes"/></param>
 <param name="op">The <see cref="T:EwECore.eOperators">operation</see> to perform.
 If not provided <see cref="F:EwECore.eOperators.EqualTo">'='</see> is used.</param>
 <returns>The proportion of catch.</returns>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTaxonAnalysis.DemersalEcologyTypes">
 -----------------------------------------------------------------------
 <summary>
 Returns ecology types of demersal species.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="P:EwECore.cTaxonAnalysis.PelagicEcologyTypes">
 -----------------------------------------------------------------------
 <summary>
 Returns ecology types of pelagic species.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTaxonAnalysis.Clear">
 -----------------------------------------------------------------------
 <summary>
 Resets all internally cached values.
 </summary>
 -----------------------------------------------------------------------
</member>
<member name="M:EwECore.cTaxonAnalysis.GroupProportion(EwECore.cTaxonAnalysis.eComputationType,System.Int32,System.Object,EwECore.eOperators)">
 -----------------------------------------------------------------------
 <summary>
 Perform the actual computation and caches the result.
 </summary>
 <param name="computation">The <see cref="T:EwECore.cTaxonAnalysis.eComputationType"/>.</param>
 <param name="iGroup"></param>
 <param name="value"></param>
 <param name="op"></param>
 <returns></returns>
 -----------------------------------------------------------------------
</member>
<member name="F:EwECore.cTaxonDataStructures.NumTaxon">
 <summary>Total number of taxonomy codes.</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonDBID">
 <summary>Taxonomy code DBID (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonTarget">
 <summary>Taxon assignments (xNumTaxa) -> <see cref="F:EwECore.cTaxonDataStructures.IsTaxonStanza">iGroup / iStanza</see></summary>
 <remarks>This number should be interpreted as a group index if
 <see cref="F:EwECore.cTaxonDataStructures.IsTaxonStanza">IsTaxonStanza(i)</see> is set to False,
 or denotes a stanza index otherwise.</remarks>
</member>
<member name="F:EwECore.cTaxonDataStructures.IsTaxonStanza">
 <summary>Flag stating whether TaxonTarget(i) refers to a stanza (true) or a group (false)</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonPropBiomass">
 <summary>Taxon proportion of biomass (xNumTaxa)</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonPropCatch">
 <summary>Taxa proportion of catch (xNumTaxa)</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonClass">
 <summary>Taxonomy class names (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonOrder">
 <summary>Taxonomy order names (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonFamily">
 <summary>Taxonomy family names (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonGenus">
 <summary>Taxonomy genus names (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonSpecies">
 <summary>Taxonomy species names (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonName">
 <summary>Taxonomy (common) names (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonCodeFAO">
 <summary>Taxonomy FAO codes (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonCodeLSID">
 <summary>Taxonomy TDWG LSID codes (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonCodeSAUP">
 <summary>Taxonomy SAUP codes (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonCodeFB">
 <summary>Taxonomy FishBase codes (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonCodeSLB">
 <summary>Taxonomy SeaLifeBase codes (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonCodeAquaMaps">
 <summary>Taxonomy Aquamaps codes (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonCodeAphia">
 <summary>Taxonomy AphiaID codes (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonCodeOBIS">
 <summary>Taxonomy OBIS Taxonomic numbers (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonSource">
 <summary>Taxonomy source names where Taxon information was derived from (xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonSourceKey">
 <summary>Taxonomy source keys to access Taxon information in <see cref="F:EwECore.cTaxonDataStructures.TaxonSource">a source</see>(xNumTaxa).</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonLastUpdated">
 <summary>Taxonomy last updated dates (xNumTaxa) in julian day format.</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonNorth">
 <summary>Northern limit of taxon occurrence bounding box</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonSouth">
 <summary>Southern limit of taxon occurrence bounding box</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonEast">
 <summary>Eastern limit of taxon occurrence bounding box</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonWest">
 <summary>Western limit of taxon occurrence bounding box</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonEcologyType">
 <summary>Ecology types for taxa</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonOrganismType">
 <summary>Organism types for taxa</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonIUCNConservationStatus">
 <summary>Taxa IUCN csonservation status</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonExploitationStatus">
 <summary>Taxa exploitaiton status</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.TaxonOccurrenceStatus">
 <summary>Taxa occurrence status</summary>
</member>
<member name="F:EwECore.cTaxonDataStructures.m_alGroupTaxa">
 <summary>Group taxon index - may be used by model, initially designed for quick taxon access code.</summary>
</member>
<member name="M:EwECore.cTaxonDataStructures.#ctor(EwECore.cEcopathDataStructures,EwECore.cStanzaDatastructures)">
 <summary>
 Create a new instance of cTaxonDataStructures
 </summary>
 <param name="ecopathDS"><see cref="T:EwECore.cEcopathDataStructures"/> to use for base data.</param>
 <param name="stanzaDS"><see cref="T:EwECore.cStanzaDatastructures"/> to use for base data.</param>
</member>
<member name="M:EwECore.cTaxonDataStructures.Clear">
 <summary>
 'Forget' internal data.
 </summary>
</member>
<member name="M:EwECore.cTaxonDataStructures.RedimTaxon">
 <summary>
 Allocate memory for data.
 </summary>
</member>
<member name="P:EwECore.cTaxonDataStructures.NumGroupTaxa(System.Int32)">
 <summary>
 Get the number of taxa assigned to a given group.
 </summary>
 <param name="iGroup">The one-based group index to get the number of taxa for.</param>
 <remarks>Taxa can be <see cref="F:EwECore.cTaxonDataStructures.TaxonTarget">assigned</see> directly to a group
 or indirectly via a multi-stanza configuration, determined by the state of the 
 <see cref="F:EwECore.cTaxonDataStructures.IsTaxonStanza"/> field. Regardless, this method returns the number of
 taxa assigned to a group - directly or indirectly.</remarks>
</member>
<member name="P:EwECore.cTaxonDataStructures.GroupTaxa(System.Int32,System.Int32)">
 <summary>
 Get the one-based index of a taxon for a given group.
 </summary>
 <param name="iGroup">The one-based group index to get the taxon information for.</param>
 <param name="iIndex">The one-based index [1, <see cref="P:EwECore.cTaxonDataStructures.NumGroupTaxa(System.Int32)"/>] of the taxon to obtain.</param>
 <remarks>Taxa can be <see cref="F:EwECore.cTaxonDataStructures.TaxonTarget">assigned</see> directly to a group
 or indirectly via a multi-stanza configuration, determined by the state of the 
 <see cref="F:EwECore.cTaxonDataStructures.IsTaxonStanza"/> field. Regardless, this method returns the number of
 taxa assigned to a group - directly or indirectly.</remarks>
</member>
<member name="M:EwECore.cTaxonDataStructures.UpdateTaxonIndex">
 <summary>
 Rebuild the taxon / group index.
 </summary>
</member>
<member name="T:EwECore.cTaxonSearchData">
 ---------------------------------------------------------------------------
 <summary>
 Container for transferring Taxonomy data
 </summary>
 ---------------------------------------------------------------------------
</member>
<member name="P:EwECore.cTaxonSearchData.Phylum">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.Phylum"/>
</member>
<member name="P:EwECore.cTaxonSearchData.Class">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.Class"/>
</member>
<member name="P:EwECore.cTaxonSearchData.Common">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.Common"/>
</member>
<member name="P:EwECore.cTaxonSearchData.Family">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.Family"/>
</member>
<member name="P:EwECore.cTaxonSearchData.Genus">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.Genus"/>
</member>
<member name="P:EwECore.cTaxonSearchData.Order">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.Order"/>
</member>
<member name="P:EwECore.cTaxonSearchData.Species">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.Species"/>
</member>
<member name="P:EwECore.cTaxonSearchData.CodeSAUP">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeSAUP"/>
</member>
<member name="P:EwECore.cTaxonSearchData.CodeFishBase">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeFishBase"/>
</member>
<member name="P:EwECore.cTaxonSearchData.CodeSeaLifeBase">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeSeaLifeBase"/>
</member>
<member name="P:EwECore.cTaxonSearchData.CodeAquaMaps">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeAquaMaps"/>
</member>
<member name="P:EwECore.cTaxonSearchData.CodeAphia">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeAphia"/>
</member>
<member name="P:EwECore.cTaxonSearchData.CodeOBIS">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeOBIS"/>
</member>
<member name="P:EwECore.cTaxonSearchData.CodeLSID">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeLSID"/>
</member>
<member name="P:EwECore.cTaxonSearchData.CodeFAO">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.CodeFAO"/>
</member>
<member name="P:EwECore.cTaxonSearchData.Source">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.Source"/>
</member>
<member name="P:EwECore.cTaxonSearchData.SourceKey">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.SourceKey"/>
</member>
<member name="P:EwECore.cTaxonSearchData.North">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.North"/>
</member>
<member name="P:EwECore.cTaxonSearchData.South">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.South"/>
</member>
<member name="P:EwECore.cTaxonSearchData.East">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.East"/>
</member>
<member name="P:EwECore.cTaxonSearchData.West">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonSearchData.West"/>
</member>
<member name="P:EwECore.cTaxonSearchData.EcologyType">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.EcologyType"/>
</member>
<member name="P:EwECore.cTaxonSearchData.IUCNConservationStatus">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.IUCNConservationStatus"/>
</member>
<member name="P:EwECore.cTaxonSearchData.ExploitationStatus">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.ExploitationStatus"/>
</member>
<member name="P:EwECore.cTaxonSearchData.LastUpdated">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.LastUpdated"/>
</member>
<member name="P:EwECore.cTaxonSearchData.MaxLength">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.MaxLength"/>
</member>
<member name="P:EwECore.cTaxonSearchData.MeanLength">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.MeanLength"/>
</member>
<member name="P:EwECore.cTaxonSearchData.MeanLifespan">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.MeanLifespan"/>
</member>
<member name="P:EwECore.cTaxonSearchData.MeanWeight">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.MeanWeight"/>
</member>
<member name="P:EwECore.cTaxonSearchData.OccurrenceStatus">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.OccurrenceStatus"/>
</member>
<member name="P:EwECore.cTaxonSearchData.OrganismType">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.OrganismType"/>
</member>
<member name="P:EwECore.cTaxonSearchData.VulnerabilityIndex">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.VulnerabilityIndex"/>
</member>
<member name="P:EwECore.cTaxonSearchData.vbgfK">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.vbgfK"/>
</member>
<member name="P:EwECore.cTaxonSearchData.Winf">
 <inheritdocs cref="P:EwEUtils.Core.ITaxonDetailsData.Winf"/>
</member>
<member name="T:EwECore.cValidatorDefault">
 <summary>
 Default validator for all data types
 </summary>
</member>
<member name="M:EwECore.cValidatorDefault.#ctor">
 <summary>
 Default constructor
 </summary>
 <remarks></remarks>
</member>
<member name="P:EwECore.cValidatorDefault.VarName">
 <summary>
 Variable name of variable to validate.
 </summary>
 <remarks>This is set in the constructor.</remarks>
</member>
<member name="T:EwECore.cValidatorCore">
 <summary>
 Have the core do the data validation via its cCore.Validate() method
 </summary>
 <remarks>This is used for variables that need to use values from other parts of the core for data validation</remarks>
</member>
<member name="T:EwECore.cValidatorCounter">
 <summary>
 Validate the value via one of the core counters
 </summary>
 <remarks></remarks>
</member>
<member name="T:EwECore.cValidatorManager">
 <summary>
 Manager for data validators. This provides access to data validator objects through its getValidator(eVarNameFlags) method
 </summary>
 <remarks>To add a validator create a new instance in the constructor</remarks>
</member>
<member name="M:EwECore.cValidatorManager.#ctor(EwECore.cCore)">
 <summary>
 Create an instance of the ValidatorManger. 
 </summary>
 <param name="theCore"></param>
 <remarks>To add data validation. Create an instance of the data validator in this constructor. 
 Add the data validator to the dictionary (m_validators) of validators using its Type (eVarNameFlags) as the key. 
 When getValidator(eVarNameFlags) is called it will return this instance of the validator.
 This way only one instance of a validator need to be created and it can be used to do all the validation of a given variable. </remarks>
</member>
<member name="M:EwECore.cValidatorManager.getValidator(EwEUtils.Core.eVarNameFlags)">
 <summary>
 Return a validator for the specified eVarNameFlags
 </summary>
 <param name="VarName">eVarNameFlags of validator to return</param>
 <returns>A valid validator for this eVarNameFlags type or the default validator if no other validator could be found.</returns>
 <remarks>Validator are created in the constructor and kept in a dictionary. 
 Only one instance of each validator is use. This will return the same validator on each call for a VarName.
 </remarks>
</member>
<member name="T:EwECore.cValidatorOutput">
 <summary>
 Validate output objects. This will set the status flag to a value appropriate to the output
 </summary>
 <remarks></remarks>
</member>
</members>
</doc>
