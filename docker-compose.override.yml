# Development environment override
services:
  phpredisadmin:
    build:
      context: .
      target: phpredisadmin_base
    environment:
      - ADMIN_USER=admin
      - ADMIN_PASS=admin
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
    links:
      - redis
    ports:
      # port 0 meaning: let docker choose a random available port
      - "${REDIS_ADMIN_PORT:-0}:80"
    networks:
      - redis
    logging:
      driver: "local"

  database:
    ports:
      - "${DATABASE_PORT:-3306}:${DATABASE_PORT:-3306}"

  mitmproxy:
    build:
      context: .
      target: mitmproxy_base
    entrypoint: "mitmweb --web-host 0.0.0.0 --listen-port ${MITMPROXY_PORT:-8080} --web-port ${MITMPROXY_WEB_PORT:-8081} --mode reverse:http://php --set websocket=true"
    networks:
      - php
    ports:
      - "${MITMPROXY_PORT:-8080}:${MITMPROXY_PORT:-8080}"
      - "${MITMPROXY_WEB_PORT:-8081}:${MITMPROXY_WEB_PORT:-8081}"
    environment:
      MITMPROXY_PORT: ${MITMPROXY_PORT:-8080}
      MITMPROXY_WEB_PORT: ${MITMPROXY_WEB_PORT:-8081}
    depends_on:
      - php
    logging:
      driver: "local"

  php:
    build:
      context: .
      target: frankenphp_dev
    volumes:
      - ./:/app
      - ./frankenphp/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./frankenphp/conf.d/20-app.dev.ini:/usr/local/etc/php/app.conf.d/20-app.dev.ini:ro
    networks:
      - mitmproxy
      - database
      - php
      - redis
      - simulations
    environment:
      # this forces non-ssl
      SERVER_NAME: :80
      MERCURE_EXTRA_DIRECTIVES: demo
      # force web(socket) server over 8080 (mitmproxy reverse proxy)
      URL_WEB_SERVER_HOST: host.docker.internal
      URL_WS_SERVER_HOST: host.docker.internal
      MITMPROXY_PORT: ${MITMPROXY_PORT:-8080}
      URL_WEB_SERVER_PORT: ${MITMPROXY_PORT:-8080}
      URL_WS_SERVER_PORT: ${MITMPROXY_PORT:-8080}
      WS_SERVER_PAYLOAD_DUMP: "${WS_SERVER_PAYLOAD_DUMP:-0}"

      # See https://xdebug.org/docs/all_settings#mode
      XDEBUG_MODE: "${XDEBUG_MODE:-off}"
    extra_hosts:
      # Ensure that host.docker.internal is correctly defined on Linux
      - host.docker.internal:host-gateway
    tty: true
    # on dev the internal and external web server port need to match because of mitmproxy reserve proxy
    ports:
      # HTTP
      - target: 80
        published: ${WEB_SERVER_PORT:-${HTTP_PORT:-80}}
        protocol: tcp

networks:
  mitmproxy:
